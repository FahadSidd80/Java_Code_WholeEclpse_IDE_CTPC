!SESSION 2024-01-01 23:00:36.466 -----------------------------------------------
eclipse.buildId=4.22.0.I20211124-1800
java.version=17.0.6
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

This is a continuation of log file C:\Users\2101917\eclipse-workspace\.metadata\.bak_0.log
Created Time: 2024-01-01 23:28:53.711

!ENTRY org.eclipse.jdt.core 4 4 2024-01-01 23:28:53.713
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.util.ArrayList; 
	
public class OperatorsAndAssingments_Practice {
	//class Customer{
//	
//}
//class Test{
//	public static void main(String[] args)throws Exception {
//		Object O = Class.forName(args[0]).newInstance();
//		System.out.println("Object created for :"+O.getClass().getName());
////		System.out.println("Hello");
//- Other rest thing are thoery based and need setting for runnig in run time nad compile time seperately
//	}
//}
	public static void main(String[] args) {
//		Types of operators:-
//		1.Increment and decrement operators
//		2.Arithmetic operators
//		3.String concatenation operators
//		4.Relational operators
//		5.Equality operators
//		6.instanceOf operators
//		7.bitwise operators
//		8.short circuit operators
//		9.type cast operators
//		10.Assignment operators
//		11.conditional operators
//		12.new operators
//		13.[] operators
//		14.operator precedence
//		15.Evaluation order of operands
//		16.new vs newInstance()
//		17.instanceOf Vs isInstance()
//		18.ClassNotFoundException Vs NoClassDefFoundError

//		1. Increment & Decrement operators:-
//		Increment - Pre-Increment , y=++x;
//		Increment - Post-Increment, y=x++;
		
//		Decrement - Pre-Decrement , y=--x;
//		Decrement - Post-Decrement, y=x--;
		
//		int x= 10;
//		x++;
//		System.out.println(x);// 11
		
//		Pre Increment
//		int x= 10;
//		int y= ++x;// pre incr -- here y value = 11
//		System.out.println(x);// 11
//		System.out.println(y);// 11
		
//		Post Increment
//		int x= 10;
//		int y= x++;
//		System.out.println(y);// 10
//		System.out.println(x);// 11
//		
//		int x= 10;
//		int y= x+1;
//		System.out.println(x);// 10
//		System.out.println(y);// 11
		
//		Pre Decrement
//		int x= 10;
//		int y= --x;
//		System.out.println(y);// 9
//		System.out.println(x);// 9
		
//		Post Decrement
//		int x= 10;
//		int y= x--;
//		System.out.println(y);// 10
//		System.out.println(x);// 9
		
//		int x= 10;
//		int y= ++10;// Invalid argument to operation ++/--
//		System.out.println(x);
////		System.out.println(y);
//		int z = 10++;// Invalid argument to operation ++/--
//		System.out.println(z);
		
		
//		int x= 10;
//		int y= ++ (++x);// Invalid argument to operation ++/--
//		System.out.println(y);
		
//		final int x = 10;
//		x++;// The final local variable x cannot be assigned. 
////		It must be blank and not using a compound assignment
//		System.out.println(x);
		
		
//		final int x = 10;
//		x++;
//		System.out.println(x);// The final local variable x cannot be assigned. It must be blank and not using a compound assignment
		
//		int x = 10;
//		x++;
//		System.out.println(x);
		
//		int x= 10;
//		int y= x++;
//		int z = x;
//		z++;
//		
//		System.out.println(y);// 10
//		System.out.println(x);// 11
//		System.out.println(z);// 12
		
//		int x = 10;
//		int y = ++x;
//		int z= y;
//		System.out.println(z);// 11
//		z++;
//		System.out.println(y);// 11
//		System.out.println(x);// 11
//		System.out.println(z);// 12
	
//		int x= 10;
//		x++;
//		System.out.println(x);// 11
		
//		char ch = 'a';
//		ch++;
//		System.out.println(ch);// b
		
//		char ch = 'a';
//		ch++;
//		System.out.println(ch);// b
		
//		double d = 10.5;
//		d++;
//		System.out.println(d);// 11.5
		
//		double d = 10.5;
//		++d;
//		System.out.println(d);// 11.5
		
//		boolean b = true;
//		b++;// Type mismatch: cannot convert from boolean to int
//		System.out.println(b);
		
//		char ch = 'a';
//		char y = ch++;
//		System.out.println(ch);//b
//		System.out.println(y);//a
		
		
		
		
		
//		Diff Btwen b++ and b=b+1
		
//		byte b = 10;
//		byte a= 10;
//		byte c= a+b;// max(int,type of a, type of b)--> max(int,byte,byte)
//		System.out.println(c);//Type mismatch: cannot convert from int to byte
		
//		byte a = 10;
//		byte b = -1;
//		byte c= (byte)(a+b);
//		System.out.println(c);//9
		
		
//		byte b= 10;
//		byte a = 10;
//		byte c = a+b;// Type mismatch: cannot convert from int to byte
//		System.out.println(b);
		
//		int b = 10;
//		int a= 10;
//		int c = a+b; // max(int,type of a, type of b)--> max(int,int,int)
//		System.out.println(c);// 20
		
//		short a = 10;
//		short b = 10;
//		short c = a+b;
//		System.out.println(c);// Type mismatch: cannot convert from int to short
		
//		short a = 10;
//		short b = 10;
//		short c = (short)(a+b);
//		System.out.println(c);// 20
		
//		char ch = 'a';
//		char ch1 = 'b';
//		char chs  = ch + ch1;
//		System.out.println(chs);// Type mismatch: cannot convert from int to char
		
//		char ch = 'a';
//		char ch1 = 'b';
//		char chs  = (char)(ch + ch1);
//		System.out.println(chs);//Ã
		
//		char ch2 = 'Ã';
//		int in = ch2+0;
//		System.out.println(in);
		
		
//		char ch = 'a';
//		char ch1 = 'b';
//		int x = ch;
//		int y= ch1;
//		System.out.println(x);//97
//		System.out.println(y);//98
		
//		char x = 'a';
//		char y= 'b';
//		long l = x+y;
//		System.out.println(l);// 197
		
//		char x= 'a';
//		char y='b';
//		float f= x+y;
//		System.out.println(f);// 195.0
		
//		char x= 'a';
//		char y='b';
//		double d= x+y;
//		System.out.println(d);// 195.0
		
//		char ch = 'a';
//		double d = 10.5d;
//		double sum = ch +d;
//		System.out.println(sum);// 107.5
		
//		char ch = 'a';
//		double d = 10.5d;
//		int sum = (int)(ch +d);
//		System.out.println(sum);// 107
		
		
		
		
		
		
//		byte b= 10;
//		byte a = 10;
//		byte c = (byte)(a+b);// Type mismatch: cannot convert from int to byte
//		System.out.println(c);// 20
		
//		byte b= 10;
//		byte a = 20;
//		byte c = a + b;
//		System.out.println(c);// Type mismatch: cannot convert from int to byte
//		byte b = 10;
//		b= b+1;// Type mismatch: cannot convert from int to byte
//		System.out.println(b);
		
//		byte b= 10;
//		byte a = 20;
//		byte c = (byte)(a + b);
//		System.out.println(c);
		
//		byte b = 10;
//		b= (byte)(b+1);
//		System.out.println(b);// 11
		
//		byte b = 10;
//		b= (byte)(b+1+b);
//		System.out.println(b);// 21
		
//		byte b = 10;
//		b= (byte)(b+1+b-b+10-12);
//		System.out.println(b);// 9
		
//		byte b = 10;
//		b= (byte)(b+1);
//		System.out.println(b);// 11
		
//		byte b =20;
//		b= b+1;
//		System.out.println(b);
		
//		byte c = 20;
//		c= c++;
//		System.out.println(c);//20
		
		
//		int a = 10;
//		int c = 10;
//		byte z = (byte)(a+c);
//		System.out.println(z);
		
		
		
//		int x= 10;
//		int y = ++ (++x);// Invalid argument to operation ++/--
//		System.out.println(y);
		
//		int x= 10;
//		int y= ++ (++x);
//		System.out.println(y);// Invalid argument to operation ++/--
		
		
		
		
		
//		byte c = 20;
//		byte z = c++;
//		System.out.println(z);//20
		
//		byte b = 10;
//		b++;// (byte)b+1
//		System.out.println(b);// 11
		
//		byte b = 10;
//		b++;
//		System.out.println(b);//11
		
		
		
		
//		2. Arithematic Operator - (+,-,*,/,%)
		
//		byte b = 10;
//		byte c = 19;
//		byte sum = (byte)(b+c) ;
//		System.out.println(sum);// 29
		
		
//		byte b = 10;
//		short s = 19;
//		short sum = (short)(b+s);
//		System.out.println(sum);// 29
		
//		short s1 = 10;
//		short s2= 18;
//		short sum = (short)(s1+s2);
//		System.out.println(sum);// 28
		
//		byte b = 10;
//		long l = 19;
//		long sum = b+l;
//		System.out.println(sum);// 29  -- int to long conversion is possible 
		
//		long l = 10;
//		double d = 10.4;
//		double sum = l+d;
//		System.out.println(sum);// 20.4 -- int to double is possible and long is max among
		
		
//		float f = 10.4f;
//		long l = 10;
//		long sum = f+l;// Type mismatch: cannot convert from float to long
//		long sum = (long)(f+l);// 20-- ans in long
//		float sum = l+f;// 20.4
//		System.out.println(sum);
		
//		char ch = 'A';
//		char ch1 = 'B';
//		char sum = ch+ch1;// Type mismatch: cannot convert from int to char
//		int sum = ch+ch1;
//		System.out.println(sum);// 131
		
//		char ch = 'A';
//		double d = 10.5;
//		int sum = ch+d;// Type mismatch: cannot convert from double to int
//		char sum1 = ch+d;// Type mismatch: cannot convert from double to char
//		double sum = ch+d;// 75.5
//		System.out.println(sum);

//		System.out.println('a'+'b');//195
//		System.out.println('a'+10.5);// 107.5
//		System.out.println('a'+0.89);// 97.89
		
//		System.out.println(10/0);// java.lang.ArithmeticException: / by zero
		
//		System.out.println(10/0.0);// Infinity
//		System.out.println(-10/0.0);// -Infinity
		
//		System.out.println(10/0.0f);// Infinity
//		System.out.println(-10/0.0f);// -Infinity
		
//		System.out.println(10/0);// / by zero
		
//		System.out.println(10/0.0);// Infinity
//		System.out.println(10.0/0);// Infinity
//		System.out.println(-10.0/0);// -Infinity
		
		
		
//		 NaN- Not a Number
		
//		System.out.println(0/0);//  java.lang.ArithmeticException: / by zero
//		System.out.println(0/29);//0
		
//		System.out.println(0/0.0f);// NaN
//		System.out.println(-0/0.0f);// NaN
		
//		System.out.println(0/0.0);// NaN
//		System.out.println(-0/0.0);// NaN
	
//		System.out.println(0/0);//java.lang.ArithmeticException: / by zero
		
//		System.out.println(0.0/0);// NaN
//		
//		System.out.println(-0.0/0);// NaN
		
//		Summary
		
//		System.out.println(10/0); / by zero
//		System.out.println(10/0.0);// Infinity
//		System.out.println(0/0);// java.lang.ArithmeticException: / by zero
//		System.out.println(0.0/0);// NaN
		
//		System.out.println(10<Float.NaN);// false
//		System.out.println(10<=Float.NaN);// false
//		System.out.println(10>Float.NaN);// false
//		System.out.println(10>=Float.NaN);// false
//		System.out.println(10==Float.NaN);// false
//		System.out.println(Float.NaN == Float.NaN);// false
//		System.out.println(10 != Float.NaN);// true
//		System.out.println(Float.NaN != Float.NaN);// true
		
		// need to study further on NaN 
		
		
		
//		2. String Concatenation operator:(+) lecture 18
		
//		String a = "Fahad";
//		int b=10,c=20,d=30;
//		System.out.println(a+b+c+d);// Fahad102030
//		System.out.println(b+c+d+a);// 60Fahad
//		System.out.println(b+c+a+d);// 30Fahad30
//		System.out.println(b+a+c+d);// 10Fahad2030
		
//		System.out.println(a=a+b+c);//Fahad1020
//		System.out.println(a=b+c+d);// Type mismatch: cannot convert from int to String
//		System.out.println(b=a+c+d);// Type mismatch: cannot convert from String to int
//		System.out.println(b=b+c+d);// 60
		
//		4. relational Operator (<,<=,>,>=)
//		System.out.println(10<20);// true
//		System.out.println('a'<20);//false
//		System.out.println('a'<97.6);// true
//		System.out.println('a'<'A');// false
//		System.out.println(true>false);// The operator > is undefined for the argument type(s) boolean, boolean
		
//		System.out.println("fahad102">"fahad");//The operator > is undefined for the argument type(s) java.lang.String, java.lang.String
		
//		System.out.println(10<20<30);// The operator < is undefined for the argument type(s) boolean, int
		
//		5. Equality operator (==, !=)
		
		
	
		
		
//		--------Revision Practice -----------------------------------------------------------------------------
		
		
//		int x = 10;
//		int y=++x; // Pre-Increment
//		int z =x++; // 11 // Post-Increment
//		System.out.println(y); // 11 - OP
//		System.out.println(z); // 11
//		int m =x++; // 11
//		System.out.println(m); // 11
//		
//		int x= 10;
//		int y = ++x;
//		System.out.println(y);
//		int z = x++;
//		System.out.println(z);
//		int m = x++;
//		System.out.println(m);
		
		
		
//		int x=20;
//		int y= ++x; // Isi line me value incr ho gayi //Pre-Increment
//		System.out.println(y); // 21
//		System.out.println(x); // 21
//		
//		int x= 30;
//		int y= x++;
//		int z= ++x;
//		System.out.println(y); // 30
//		System.out.println(x); // 32
		
		
//		int x= 30;
//		int y= x++; // Post-Increment
//		System.out.println(y); // 30 Post-Increment
//		System.out.println(x); // 31 Post-Increment
//		int x= 90;
//		int y= x++;
//		System.out.println(x);// 91
//		int y= ++x; //91
//		System.out.println(y);// 90
		
		
//		int y=20;
//		int x= --y; //Pre-Decrement
//		System.out.println(x); // 19 Pre-Decrement 
//		System.out.println(y); //19  Pre-Decrement
		
//		int z= 20;
//		int x= z--; // Post-Decrement
//		System.out.println(x); // 20 Post-Decrement
//		System.out.println(z); // 19 Post-Decrement
		
//		int x= 10;
//		int y = x++;
//		System.out.println(y); // 10
//		System.out.println(x);// 11
//		int z= --x;
//		System.out.println(z); // 10
		
//		int x= 10;
//		int y= --x;
//		int z = x--;
//		System.out.println(y);
//		System.out.println(z);
//		System.out.println(x);
		
//		We cant apply incremnt and decrement operators on constant values.
//		int x = 10;
//		int y = ++10;
//		System.out.println(y);// Unresolved compilation problem: 
//		int x= 10;
//		int y= 10++:
//		System.out.println(y);
		//Invalid argument to operation ++/--
//		Nesting of INC/DEC operators is not allowed
		
//		int x= 10;
//		int y= ++(++x);
//		System.out.println(y); // Unresolved compilation problem: 
		//Invalid argument to operation ++/--
		
//		int x= 10;
//  	int y= ++(x);
//		int z= ++(++x); // neasting of increment and decrement operators is not allowed.
//		System.out.println(z);
//		++x means value not a variable.. here we required variable not a valuex.
		
		
//		For FINAL variables we cant apply incr/decr operators.
//		final int x = 10;
//		x++;// Unresolved compilation problem: 
//		int y= x++;// Unresolved compilation problem: 
//		System.out.println(y);// Unresolved compilation problem: 
		
//		final int x= 10;
//		int y = x++;
//		System.out.println(y);
		
		//The final local variable x cannot be assigned.
//		It must be blank and not using a compound assignment
		
//		final int x= 10;
//		x=11;
//		System.out.println(x);
		
		
		
//		final int x =10;
//		x=11;// Unresolved compilation problem: 
//		System.out.println(x);// The final local variable x cannot be assigned.
//		It must be blank and not using a compound assignment
		
		
//		int x = 10;
//		x++;
//		int y=x++;//10
//		System.out.println(y);// 11
//		System.out.println(x);// 12
		
		
		
		
//		int x = 10;
//		x++;
//		System.out.println(x);// 11
//		int y=x++;
//		System.out.println(y);// 11
//		System.out.println(x);// 12
//		System.out.println(y);// 11 // first assigned then increment.
//		
//		final int x= 10;
//		int y= x++;
//		System.out.println(y);
		
		
//		char ch = 'a';
//		ch++;
//		int y= ch;
//		System.out.println(ch); // b
//		System.out.println(y); //98
		
//		char ch = 'a';// a=97
//		ch++;
//		int y=ch;
//		System.out.println(ch);// b  becz value of a is 97 so after increment value becomes 98 which is value of b
//		System.out.println(y);// 98
		
//		double d= 10.9;
//		d++;
//		System.out.println(d);// 11.9
		
//		double d = 10.5;
//		d++;
//		System.out.println(d);// 11.5
		
//		boolean b = true;
//		b++;
//		System.out.println(b);// Type mismatch: cannot convert from boolean to int
		
//		boolean b = false;
//		b++;// b+1-- (false+1)  Type mismatch: cannot convert from boolean to int
//		System.out.println(b);
		
//		boolean b = false;
//		System.out.println(b);
		
		
		
//		operator ++ can not applied to boolean
//		?We can apply inc/decr operators for every primitive data type only except to boolean
//		
		//Date&Time=04:03PM,Wednesday,02/08/2023 START
//		
//		5. Diff btwn B++ & b=b+1 
		
//		If we applied any arithemetic operators between two variable a and b then
		//the result type is always	max of (int,type of a, type of b)
		
//		byte a = 10;
//		byte b = 20;
//		byte c = a+b;
//		System.out.println(c);// Type mismatch: cannot convert from int to byte
//		we can solve/handle it by usinf type casting
//		byte c = (byte)(a+b);
//		System.out.println(c);// 30
		
//		byte a = 10;
//		byte b = 20;
//		byte c = a+ b;// Type mismatch: cannot convert from int to byte
//		byte c= (byte) (a+b);
//		System.out.println(c);// 30
		
		
//		byte b = 10;
//		b= b+1;// Type mismatch: cannot convert from int to byte
//		System.out.println(b);//Type mismatch: cannot convert from int to byte
		
//		byte b =10;
//		b= b+1;
//		System.out.println(b);// Type mismatch: cannot convert from int to byte
		
//		byte b = 10;
//		b=(byte)(b+1);// using TypeCasting
//		System.out.println(b);// 11
		
//		byte b = 10;
//		b=(byte)(b+1);
//		System.out.println(b);// 11
		
//		byte b = 10;
//		b++;
//		System.out.println(b);//11

//		byte b = 10;
//		b++;// internal typecasting happen by default
//		System.out.println(b);// 11
//		NOTE:- In case of INcr/Decr operator internal TypeCasting perform automatically
//		
//		byte b = 10;
//		byte c = 20;
//		byte d =(byte) (b+c);
//		System.out.println(d);// 30
		
		
//		2.Arithmetic Opeartors:-(+,-,/,*,%)
//		If we apply any arithmetic opearators between a&b the result type is always
//		max(int,type of a , type of b)
//		
//		Fig: Typecasting flow
//		byte--->Short---->
//						----->int-->long-->		float-->double
//				char---->
		
//		byte + byte= int
//		byte + short= int
//		short + short=int
//		byte + long=long
//		long + double=double
//		float + long=float
//		char + char=int
//		char + double=double
		//Date&Time=04:23PM,Wednesday,02/08/2023 END
		
		//Date&Time=05:45PM,Wednesday,02/08/2023 START
//		System.out.println('a'+0.89);// 97.89-->a=97 (ASCII Value) -->97+0.89=97.89 double// char + double=double
//		byte b = 6;
//		byte c = 6;
//		System.out.println(b+c);// 12 jo ki int hai= byte + byte= int
//		System.out.println(32767+32767);// 65534 is int value short + short=int
//		System.out.println(127+32767);// 32894     byte + short= int
//		System.out.println(127+23717372);// 23717499 byte + long=long
//		System.out.println(1234531+10.3333);//1234541.3333 //long + double=double
//		System.out.println(212.332+932049832);// 9.32050044332E8 // float + long=float
//		System.out.println('a'+'a');// 194 char + char=int
//		System.out.println('a'+765.27);// 862.27  char + double=double
		
//		Infinity:-
//		In integral arithmetic(byte,short,int ,long) there is no way to represent infinity if infinity is a result then we will get AE: in integral arithmetic
//		
//		System.out.println(10/0);// Exception in thread "main" java.lang.ArithmeticException: / by zero
//		
//		System.out.println(10/0);/ by zero
	
//		But in floating point arithmetic (float & double) there is a way to represent infinity
//		for this float & double classes conatins the following two constatnt.
//		POSITIVE_INFINITY
//		NEGATIVE_iNFINITY
//		Hence even though result is infinity we wont get nay arithmetic exception in floating point arithmetic
//		
//		eg:-
//		System.out.println(10/0.0);// Infinity 10/float/double
//		System.out.println(10.0/0);// Infinity float/double/0
		
//		System.out.println(10/0.0);
//		System.out.println(10.0/0.0);
//		System.out.println(10/-0.0);
//		System.out.println(-10/0.0);
		
//		NaN:-(Not a number)
//		In integral arithmetic(byte,short,int ,long) there is no way to represent undefined result 
//		if undefined is a result then we will get AE: in integral arithmetic
//		Exception in thread "main" java.lang.ArithmeticException: / by zero
//		
//		System.out.println(0/0);// Exception in thread "main" java.lang.ArithmeticException: / by zero
//		
//		System.out.println(0/0);// / by zero
		
//		But in floating point arithmetic (float & double) there is a way to represent undefined result
//		for this float & double classes contains NaN constant.
//		Hence if the result is undefined we won't get any AE. in floating point arithmetic
//		
//		System.out.println(0.0/0);// NaN
//		System.out.println(-0/0.0); // NaN
//		System.out.println(10/0);//  java.lang.ArithmeticException: / by zero
//		System.out.println(-10/0);// java.lang.ArithmeticException: / by zero
//		System.out.println(10/-0);// java.lang.ArithmeticException: / by zero
//		System.out.println(10.0/0);// Infinity
//		System.out.println(10.0/-0);// Infinity
//		System.out.println(-10.0/-0);// -Infinity
//		System.out.println(-10.0/0);// -Infinity
//		System.out.println(10.0/-0.0);// -Infinity
//		System.out.println(-10.0/-0.0); // Infinity
//		System.out.println(0.0/-0);// NaN
//		System.out.println(-0.0/0);// NaN
//		System.out.println(-0.0/-0);// NaN
//		System.out.println(-1.0/-0);// -Infinity
		
//		for any x value including NaN the following expression return false
//		int x =0;
//		System.out.println(x<NaN); // NaN cannot be resolved to a variable
//		System.out.println(x<=NaN); // NaN cannot be resolved to a variable
//		System.out.println(x>NaN); // NaN cannot be resolved to a variable
//		System.out.println(x>=NaN);  // NaN cannot be resolved to a variable
//		System.out.println(x==NaN);// NaN cannot be resolved to a variable
		
//		for any x value including NaN the following expression return true
//		System.out.println(x!=NaN);// x cannot be resolved to a variable
		//NaN cannot be resolved to a variable
		
//		System.out.println(10<float.NaN); // Syntax error on token "float", invalid Expression
		
//		System.out.println(10<Float.NaN); // false
//		System.out.println(10<=Float.NaN);// false
//		System.out.println(10>Float.NaN);// false
//		System.out.println(10>=Float.NaN);// false
//		System.out.println(10==Float.NaN);// false
//		System.out.println(Float.NaN==Float.NaN);// false
//		System.out.println(10!=Float.NaN);// true
//		System.out.println(Float.NaN!=Float.NaN);// true
		
//		System.out.println(10<Float.NaN);// false
		
		
//		3.String concatenation operators
		
//		The only overloaded operator in java is (+) operator. 
//		Sometime it is said arithmetic addition operators 
//		and sometime it is said string concatenation opeartors.
		
		
//		Case1:-
//		If atleast one argument is String type  then
//		(+) operator access String concatenation operator.
		
//		Case2:-
//		If both argument is number type  then
//		(+) operator access arithmetic addition operator.
		
//		eg1:-
//		String a = "fahad";
//		int b=10, c=20, d=10;
//		System.out.println(a+b+c+d);// fahad102010 String concatenation operator
//		System.out.println(b+c+d+a);//40fahad this expression has same operator then order of precedence is from left to right so it start add value from left and concat with a. So it use both String concatenation operator and arithmetic addition operator 
//		System.out.println(b+c+a+d);// 30fahad10 this expression has same operator then order of precedence is from left to right so it start add value from left and concat with a. So it use both String concatenation operator and arithmetic addition operator 
//		System.out.println(b+a+c+d);// 10fahad2010
		
		
//		String a = "fahad";
//		int b=10,c=20,d=10;
//		System.out.println(a+b+c+d);//
//		System.out.println(b+c+d+a);
//		System.out.println(b+c+a+d);
//		System.out.println(b+a+c+d);
		
//		eg2:-
//		String a = "fahad";
//		int b=10, c=20, d=30;
//		a=b+c+d;
//		System.out.println(a); // Type mismatch: cannot convert from int to String
//		a=a+b+c;
//		System.out.println(a);// fahad1020
//		b=a+c+d;
//		System.out.println(b);// Type mismatch: cannot convert from String to int
//		b=b+c+d;
//		System.out.println(b);// 60
		
//		String a= "fahad";
//		int b=10, c=20, d=30;
////		a=b+c+d;
////		System.out.println(a);//Type mismatch: cannot convert from int to String
//		a=a+b+c;
////		System.out.println(a);
////		b=a+c+d;
//		b=b+c+d;
//		System.out.println(b);//60
		
		
		
//		4.Relational operators (<,<=,>,>=)
//		We can apply relational operator for every primitive type except boolean.
//		eg:-
//		System.out.println(10<20);// true
//		System.out.println('a'<20);// false
//		System.out.println('a'<97.6); //true
//		System.out.println('a'>'A'); // true
//		System.out.println(true>false);// The operator > is undefined for the argument type(s) boolean, boolean
//		
//		System.out.println(10<20);// true
//		System.out.println('a'<20);// false
//		System.out.println('a'<97.6);// true
//		System.out.println('a'>'A');// true
//		System.out.println(true<false);
		
//		System.out.println(10<=10);// true
//		System.out.println(10>=10);// true
		
		
		
//		 We cannot apply relational operators for object/Non-Primitive types
//		eg
//		System.out.println("durga123">"durga");// The operator > is undefined for the argument type(s) java.lang.String, java.lang.String
		
//		System.out.println("fahad">"fahad");
		
//		Nesting of relational operator is not allowed otherwise we will get CTE.
//		System.out.println(10<20<30);// The operator < is undefined for the argument type(s) boolean, int
		
//		System.out.println(10<20>30);// The operator > is undefined for the argument type(s) boolean, int
		
//		5.Equality operators (==, !=)  //Date&Time=3:43PM,Friday,02/10/2023
//		we can use == operator for address comparison
		
//		we can  apply equality operator for every primitive type including boolean also.
		
//		System.out.println(10==20);// false
//		System.out.println('a'=='b'); // false
//		System.out.println('a'==97.0); //true
//		System.out.println(false==false);// true
//		System.out.println(true==true);// true
//		System.out.println('a'=='A');// false
//		System.out.println('a'==97);// true
//		System.out.println(127==127);// true
//		System.out.println("fahad"=="fahad");// true
//		System.out.println("fah"=="abd");// false// yahan address compare nahi ho raha.
		
//		System.out.println(10==10);
//		System.out.println(10==20);
//		System.out.println('a'==97.0);
//		System.out.println('a'==97);
//		System.out.println('a'=='a');
//		System.out.println(false==false);// true
//		System.out.println('a'=='A');// false
//		System.out.println("fahad"=="fahad");// true
//		System.out.println("fah"=="abd");// false
		
//		we can apply equality operator for object type also
//		for object references r1 and r2 , r1== r2 iff both reference pointing to the same object
//		(reference comparison or address comparison)
		
//		Thread t1 = new Thread();
//		Thread t2 = new Thread();
//		Thread t3=t1;
//		System.out.println(t1==t3);// true
//		System.out.println(t1==t2);// false
		
//		Thread t1 = new Thread();
//		Thread t2 = new Thread();
//		Thread t3 = t1;
//		System.out.println(t1==t3);// true
//		System.out.println(t1==t2);// false
		
//		Thread t1 = new Thread();
//		Object O = new Object();
//		String S = new String("durga");
//		System.out.println(t1==O);// false
//		System.out.println(O==S);// false
//		System.out.println(S==t1);// Incompatible operand types String and Thread
		
//		Thread t1 = new Thread();
//		Object O = new Object();
//		String S = new String("durga");
//		System.out.println(t1==O);
//		System.out.println(O==S);
//		System.out.println(S==t1);// Incompatible operand types String and Thread
		
		
		
//		!= operators
//		we can use != operator for address comparison
//		System.out.println(10!=20);// true
//		System.out.println('a'!='b'); // true
//		System.out.println('a'!=97.0); //false
//		System.out.println(false!=false);// false
//		System.out.println(true!=true);// false
//		System.out.println('a'!='A');// true
//		System.out.println('a'!=97);// false
//		System.out.println(127!=127);// false
//		System.out.println("fahad"!="fahad");// false
//		System.out.println("fah"!="abd");// true
		
//		Thread t1 = new Thread();
//		Object O = new Object();
//		String S = new String("durga");
//		System.out.println(t1!=O);// true
//		System.out.println(O!=S);// true
//		System.out.println(S!=t1);// Incompatible operand types String and Thread
		
		// In general we can use == operator for address comparison 
//		and .equals() method for content comparison.
		
//		eg:
//		String S1 = new String("durga");
//		String S2= new String("durga");
//		System.out.println(S1==S2);//false // this compare address of variable/object
//		System.out.println(S1.equals(S2));// true// this method compare content of variable/objects
		
//		String S1 = new String("fahad");
//		String S2 = new String("fahad");
//		System.out.println(S1==S2);// false - address compare ho raha
//		System.out.println(S1.equals(S2)); // content/value compare ho rahi
//		
		
		
//		for any object reference r == null is always false
//		but null == null is always true
		
//		String s = new String("durga");
//		System.out.println(s==null);// flase
//		
//		String s = new String("durga");
//		System.out.println(s==null);// flase-- address compare and not matched so result is false.
		
//		String n = null;
//		System.out.println(n==null);// true.
//		System.out.println(null==null);// true
		
		
//		String n = null;
//		System.out.println(n==null);// true
//		System.out.println(null==null);// true
		
//		Lecture 19:- 
//		6.instanceOf operators
		//Date&Time=01:03PM,Friday,02/10/2023
//		We  can use instanceof operator to check whether given object is of particular type or not.
		
//		Syntax:-
//		r instance X -- r is object reference  X is class or interface name
//		Thread t = new Thread();
//		System.out.println(t instanceof Thread);// true
//		System.out.println(t instanceof Object);  // true
//		System.out.println(t instanceof Runnable);// true
		
//		Thread t = new Thread();
//		System.out.println(t instanceof Thread);
//		System.out.println(t instanceof Object);
//		System.out.println(t instanceof Runnable);
		
//		int[] l = new int[9];
//		System.out.println(l[0]);
//		Object o = new l.get[0];
		
	
//		 ArrayList<String> l = new ArrayList<String>(); 
//		// Create an ArrayList object
//		 Object O = new l.get[0];
		
//		for any class or interface X null instanceof X  is always false
//		System.out.println(null instanceof Thread); // false
//		System.out.println(null instanceof Runnable);// false
		
		
//		Thread t = new Thread();
//		System.out.println(t instanceof String);// Incompatible conditional operand types Thread and String
		
//		System.out.println(null instanceof Thread);// false
//		System.out.println(null instanceof Object);// false
//		System.out.println(null instanceof Runnable);// false
		
		
		
//		7.bitwise operators (&, |, ^)
//		 & -- And,  returns true iff both arguments are true
//		 | -- OR  returns true iff atleast one arguments are true
//		 cap symbol - ^ -- Exor, exclusive OR, X-OR, returns true iff both arguments are different
		
//		eg :- 
//		System.out.println(true & false);// false
//		System.out.println(true | false);// true
//		System.out.println(true ^ false); // true
		
//		System.out.println(true & false); // false
//		System.out.println(true | false);// true
//		System.out.println(true ^ false);// true
//		System.out.println(true ^ true);// false	
//		System.out.println(false ^ false);// false
		
		
//		we can apply these for integral types also
//		System.out.println(4&5);// 4
//		System.out.println(4|5);// 5
//		System.out.println(4^5);// 1
		
//		System.out.println( 4 & 5);
//		System.out.println(4 |5);
//		System.out.println(4 ^ 5);
		
//		System.out.println(100 & 101);// 100
//		System.out.println(11 & 11); // 11
		
//		System.out.println(~4);// -5
		
//		System.out.println(~5);// -6
		
//		System.out.println(~38); // -39
		
		
		 
		
//		bitwise complement operators (~):- tild symbol
//		We can apply for only integral type not for boolean type OW CTE.
//		System.out.println(~true);  // The operator ~ is undefined for the argument type(s) boolean
//		System.out.println(~4);// -5
		
//		Boolean complement operator : (!)--
//		We can apply this operator only for boolean type but not for integarl types.
//		System.out.println(!8);// The operator ! is undefined for the argument type(s) int
//		System.out.println(!false);// true
//		System.out.println(!true);// false
		
//		System.out.println(!10);
//		System.out.println(!true);
//		System.out.println(!false);
		
		
		
//		Note :-
//		&,|,^-- applicable for both boolean & integral
//		~ -- applicable for only integral but not for boolean
//		!  applicable only for boolean but not for integral
		
		
		
//		8.short circuit operators :(&&, ||)
		
//		These are exactly same as bitwise operators(&,|) except only following differences.
		
//				$,|		|		&&,||
//		-------------------------------				
//		1.Both argument	|	1. second argument		
//		should be evalu	|		evaluation is optional	
//		ated always.	|			
//		
//		2.relatively	|	2.relatively performance
//		performance 	|	high
////	low
//		
//		3.applicable	|	3. applicable only for boolean but not
//		for both boolean |	for integral
//		and integral types|
						
//		Note:- 1. x&&y == y will be evaluated iff x is true i.e. if x is false then y will not be evaluated.
		
//		2.  x||y - y will be evaluated iff x is false i.e. if x is true then y will not be evaluated.
			
//		eg_
//		int x= 10;
//		int y=15;
//		if(++x<10 & ++y>15) {
//			x++;
//		}else {
//			y++;
//		}
//		System.out.println(x+"..."+y);// 11...17
		
//		int x = 10;
//		int y=15;
//		if(++x<10 & ++y>15) {
//			x++;
//		}else {
//			y++;
//		}
//		System.out.println(x+"..."+y);
		
//		int x= 10;
//		int y=15;
//		if(++x<10 && ++y>15) {
//			x++;
//		}else {
//			y++;
//		}
//		System.out.println(x+"..."+y);// 11...16
		
//		int x= 10;
//		int y=15;
//		if(++x<10 | ++y>15) {
//			x++;
//		}else {
//			y++;
//		}
//		System.out.println(x+"..."+y);// 12...16
		
//		
//		int x= 10;
//		int y=15;
//		if(++x<10 || ++y>15) {
//			x++;
//		}else {
//			y++;
//		}
//		System.out.println(x+"..."+y);// 12...16
		
		
//		int x = 10;
//		int y=15;
//		if(++x<10 && ++y>15) {
//			x++;
//		}else {
//			y++;
//		}
//		System.out.println(x+"..."+y);// 11...16

//		int x = 10;
//		int y=15;
//		if(++x<10 | ++y>15) {
//			x++;
//		}else {
//			y++;
//		}
//		System.out.println(x+"..."+y);// 
		
//		int x = 10;
//		int y=15;
//		if(++x<10 || ++y>15) {
//			x++;
//		}else {
//			y++;
//		}
//		System.out.println(x+"..."+y);// 12...16
		
//		int x = 10;
//		int y=15;
//		if(++x<10 || ++y>15) {
//			x++;
//		}else {
//			y++;
//		}
//		System.out.println(x+"..."+y);
		
		
//		eg:- 2-
		
//		int x= 10;
//		if(++x<10 && (x/0>10)) {
//			System.out.println("Hello !!");
//		}else {
//			System.out.println("Hii !!");
//		}// o/p:- Hii
//		
//		int x= 10;
//		if(++x<10 & (x/0>10)) {
//			System.out.println("Hello !!");
//		}else {
//			System.out.println("Hii !!");
//		}// : / by zero
		
//		int x= 10;
//		if(++x<10 && (x/0>10)) {
//			System.out.println("Hello !!");
//		}else {
//			System.out.println("Hii !!");
//		}
		
//		int x= 10;
//		if(++x<10 & (x/0>10)) {
//			System.out.println("Hello !!");
//		}else {
//			System.out.println("Hii !!");
//		}
		
		
//		int x= 10;
//		if(++x<10 & (x/2>10)) {
//			System.out.println("Hello !!");
//		}else {
//			System.out.println("Hii !!");
//		}
		
//		int x= 10;
//		if(++x<10 | (x/0>10)) {
//			System.out.println("Hello !!");
//		}else {
//			System.out.println("Hii !!");
//		}
		
		
//		int x= 10;
//		if(++x<10 | (x/2>10)) {
//			System.out.println("Hello !!");
//		}else {
//			System.out.println("Hii !!");
//		}
		
//		int x= 10;
//		if(++x<10 || (x/0>10)) {
//			System.out.println("Hello !!");
//		}else {
//			System.out.println("Hii !!");
//		}
		
//		9.type cast operators
		
//		1. Implicit typecasting
//		2. Explicit Typecasting
		
//		1.Implicit:
//		Compiler is responsible to perform ITC.
//		whenever we are assinging smaller Datatype value to bigger datatype variable ITC will be performed.
//		It is also known as widening and upcasting
//		There is no loss of information in this typecasting
//		The following are various possible conversion where ITC will be performed.
		
//		Fig: Typecasting flow : ITC
//		byte--->Short---->
//						----->int-->long-->float-->double
//				char---->
		
//		eg:-
//		int x='a'; 
//		System.out.println(x);// 97// compiler convert char to int automatically by ITC
//		int x= 'a';
//		System.out.println(x);// 97
//		
//		double d = 10;
//		System.out.println(d);// 10.0
		
//		long l = 10;
//		System.out.println(l);// 10
		
		
//		float f = 10;
//		System.out.println(f);// 10.0
		
		
//		double d = 10;
//		System.out.println(d);// 10.0  compiler convert int to double automatically by ITC
		
//		double d = 'a';
//		System.out.println(d);// 97.0
		
//		long l = 'a';
//		System.out.println(l);// 97
		
//		float f = 'a';
//		System.out.println(f);// 97.0
		
		
		
//		2.Explicit Type casting:
//		Programmer is responsible to perform ETC.
//		whenever we are assinging bigger Datatype value to smaller datatype variable then  ETC will be required.
//		It is also known as narrowing and downcasting
//		There may a chance of loss of information in this typecasting
		
//		The following are various possibilities  where ETC will  required.
		
//		Fig: ETC
//		byte<---Short<----
//						<-----int<--long<--float<--double
//				char<----
		
//		L---R -- Implicit TypeCasting
//		R---L -- Explicit Typecasting
		
//		eg:-
//		int x = 130;
//		byte b = x;
//		System.out.println(b);// Type mismatch: cannot convert from int to byte
		
//		int x = 130;
//		byte b = (byte) x; //  cannot convert from int to byte
//		System.out.println(b);// -126
		
		
//		int x = 130;
//		byte b = (byte)x;
//		System.out.println(b);// -126
		
//		whenever we are assingnig bigger D.T value to smaller D.T variable by ETC The MSB will be lost
//		We have to consider only LSB
		
//		int x= 150;
//		short s = (short)x;
//		System.out.println(s);// 150
//		
//		int x = 150;
//		short s = (short)x;
//		System.out.println(s);// 150
		
//		byte  b = (byte)x;
//		System.out.println(b);// -106
		
//		int x = 150;
//		byte b= (byte)x;
//		System.out.println(b);// -106
		
//		int x = 509;
//		byte b = (byte)x;
//		System.out.println(b);// -3
		
//		int x = 509;
//		short s = (short)x;
//		System.out.println(s);// 509
		
		
		
		
		
//		Float to integral value -- digit after decimal point lost
//		double d = 130.456;
//		int x = (int)d;
//		System.out.println(x);// 130
//		byte b = (byte)d;
//		System.out.println(b);// -126
		
//		double d = 130.456;
//		int x = (int)d;
//		System.out.println(x);// 130
		
//		double d = 130.456;
//		byte b = (byte)d;
//		System.out.println(b);// -126
		
//		float f = 130.456f;
//		int x = (int)f;
//		System.out.println(x);// 130
		
		
//		Lecture 21: 10.Assignment operators : 
//		Three types
//		1.Simple assingment
//		2.chained 
//		3.compound
		
//		1.Simple:-   int x= 10;
//		int x = 10;
//		literal value 10 assigned to  var x
		
//		2.chained:-  
//		int a,b,c,d;
//		a=b=c=d=20;
//		System.out.println(a+".."+b+"..."+c+"..."+d);// 20..20...20...20
		
		
//		int a,b,c,d;
//		a=b=c=d=10;
//		System.out.println(a+".."+b+".."+c+".."+d);//10..10..10..10

//		We can't performed chain assingment directly at the time of declaration
//		eg:-
//		 int a =b=c=d=20;
//		 System.out.println(a+".."+b+"..."+c+"..."+d);// b cannot be resolved to a variable
//			c cannot be resolved to a variable
//			d cannot be resolved to a variable
//		 at OperatorsAndAssignment.main(OperatorsAndAssignment.java:555)
		
//		int b,c,d;
//		int a=b=c=d=20;
//		System.out.println(a+".."+b+"..."+c+"..."+d);// 20..20...20...20
//		int b,c,d;
//		int a=b=c=d=20;
//		System.out.println(a+".."+b+"..."+c+"..."+d);//20..20...20...20
		
//		3.Compound Assignment Operator:-
//		Sometime assignment operator mixed with some other operator then we called that operator is CAO.
		
//		int a= 20;
//		a+=30;// -- a=a+30
//		System.out.println(a);// 50
		
//		int a = 20;
//		a+=30;// -- a=a+30;
//		System.out.println(a);// 50

//		The following are all possible compound assingment operator in java
		
//		+=		&=		>>= right shift operator
//		-=		|=		>>>= unsigned right shift operator
//		*=		^=		<<= left shift operator
//		/=
//		%=   Total === 11
		
//		in case of CAO internal T.C will performed automatically
//		 byte b = 10;
//		 b=b+1;  // max(int,byte,int)
//		 System.out.println(b);// Type mismatch: cannot convert from int to byte
		 
//		byte b =10;
//		b=b+1;// cannot convert from int to byte
//		System.out.println(b);
//		
		
//		byte b = 10;
//		b++;
//		System.out.println(b);// 11

//		 byte b = 10;
//		 b++;
//		 System.out.println(b);// 11
		 
//		 byte b = 10;
//		 b+=1;  // += CAO internal TC is performed.
//		 System.out.println(b);//11
		
//		byte b =10;
//		b+=1; // b=b+1 
//		System.out.println(b);// 11

//		byte b = 127;
//		b+=1;
//		System.out.println(b);//-128
		
//		byte b =127;
//		b+=1;
//		System.out.println(b);// -128
		
//		byte b = 127;
//		b+=127;
//		System.out.println(b);//-2
		
//		byte b =127;
//		b+=129;
//		System.out.println(b);//0
		
//		byte b =127;
//		b+=130;
//		System.out.println(b);//1

//		byte b = 127;
//		b+=3;
//		System.out.println(b);//-126
		
//		int a,c;
//		int b=20; // simple
//		int d; // simple only declared
//		a=c=d=20; //chained 
//		a+= b-= c*= d/= 2; // compound
//		System.out.println(a+"..."+b+"..."+c+"..."+d);// -160...-180...200...10
		
//		int a,c;
//		int b=20;
//		int d;
//		a=c=d=20;//chained
//		a+= 10;
//		b-=5;
//		c*=4;
//		d/=7;
//		System.out.println(a+"..."+b+"..."+c+"..."+d);//30...15...80...2
		
//		int a=10;
//		a+=a+10;
//		System.out.println(a);//30
		
//		int a=10;
//		a+=a+=a+=a-+a-+30;
//		System.out.println(a);
		
//		int a=10;
//		a+=12+12;
//		System.out.println(a);//34

//		int a,b,c,d,e,f,g,h;
//		a=b=c=d=e=f=g=h=10;
//		a+=10;
//		b-=10;
//		c/=10;// return quotient
//		d*=10;
//		e%=10; // return reminder
//		
//		f&=10; // f&10==> 10&10 = Ans 10 - 1010&1010==1010=10
//		g|=10; // 
//		h^=10;// x-OR cap 
//		
//		System.out.println(a); // 20
//		System.out.println(b); // 0
//		System.out.println(c); // 1
//		System.out.println(d); // 100
//		System.out.println(e); /// 0
//		System.out.println(f); // 10
//		System.out.println(g);// 10
//		System.out.println(h); // 0
		
		
//		11.conditional operators: (? :) Ternary operator
//		The only possible ternary operator in java is conditional operator
//		Syntax : 
//		int  x= (10<20)? 30:40;
		
//		is same as in if else condition
//		if(10<20) {
//			System.out.println("30"); // 30
//		}else {
//			System.out.println("40");
//		}
//		System.out.println(x);// 30
//		
//		int x=  (10<20) ? 30 :40;
//		System.out.println(x);//30
		
//		int  x;
//		if(20<30) {
//			x=10;
//		}
//		else {
//			x=20;
//		}
//		System.out.println(x);// 10
		
		
//		neasting of conditional operator is also possible
		
//		 int x = (10>20)?30 :(40>50)?60:70;
//		 System.out.println(x);// 70
//		is same as 
//		if(10>20) {
//			System.out.println("30"); 
//		}else if(40>50) {
//			System.out.println("60");
//		}else {
//			System.out.println("70");// 70
//		}
		
		
//		int x =(10>20)?30 : (40>90)? 40 : 60;
//		System.out.println(x);// 60
		
//		int x= (10>=30)?30:40;
//		System.out.println(x);//40
		
		
//		int x= (10<10) ? 10 : (10>30) ? 20 : (10<=5) ? 30 : (10>=60)? 40 : (10==10) ? 50 :60;
//		System.out.println(x);// 50
		
		
//		int x= (10<10) ? 10 : (10>30) ? 20 : (10<=5) ? 30 : (10>=60)? 40 : (10==20) ? 50 :60;
//		System.out.println(x);// 60
			
		
//		int x= (10<10) ? 10 : (10>30) ? 20 : (10<=5) ? 30 : (10>=60)? 40 : (10!=10) ? 50 :(97.0==97) ?  60  :70;
//		System.out.println(x);// 60
		
//		int x= (10<10) ? 10 : (10>30) ? 20 : (10<=5) ? 30 : (10>=60)? 40 : (10!=10) ? 50 :(97.1==97) ?  60  :70;
//		System.out.println(x);// 70
		
		
		
//		System.out.println(10!=10);//falase
		
		
//		a++, ++a -- unary operator because only one operand is there i.e "a"
//		a+b -- binary operator because two  operand is there i.e "a" and "b"
//		(c)?b:d; ternary operator because three  operand is there i.e "a" , "b" and "c"
		
//		c,b,d are 3 operand
		
//		if(true&&false) {
//			System.out.println("Hii");
//		}
//		else
//		{
//			System.out.println("Hello");
//		}
//		// hello
		
//		if(10>20 && 30<40) {
//			System.out.println("Hii");
//		}else {
//			System.out.println("Hello");
//		}// Hello
		
		
//		if(true && true && true) {
//			System.out.println("Hello");
//		}else
//		{
//			System.out.println("Hello");
//		}// Hello
//		
//		if(true & true & true) {
//			System.out.println("Hello");
//		}else
//		{
//			System.out.println("Hello");
//		}// Hello
		
//		if(10<20 && 30<60 && 40<80 && 50<90 && 60<90) {
//			System.out.println("Hello");
//		}else {
//			System.out.println("Hii");
//		}// Hello
		
//		12.new operators  -- theory only
//		we can use this new operator to create object of class
//		eg:- Test t = new Test();
//		After creating an object constructor will be executed to perform
//		initialization of object not for creation of object
		
//		
//		basically after creation of test class object by using new keyword constructor immideately execute (automatically) and perform initialization of created object
//		so, The  role of constructor is to perform initialization of object not creation of object.
		
		
		
//		13.[] operators -- theory only
		
//		we  can use this operator to declare and create arrays only
//		eg:- 
//		int[] x = new int[10];
//		In general other than arrays we are not going to use this operator anywhere else
		
//		int[] x = new int[10];
		
//		Lecture 22: //		
//		
//		14.operator precedence
		
//		Java operator precedence chart
		
//		1. unary operator
//		[],x++,x--
//		++x,--x,~,|
//		new, <type>
		
//		2.Arithmetic Operator
//		*,/,%
//		+,-
		
//		3.Shift operator
//		>>,>>>,<<
		
//		4.Comparision operator
//		<,<=,>,>=,instanceof
		
//		5.equality operator:
//		==, !=
		
//		6. Bitwise operator
//		&,^,|
		
//		7.Short Circuit operator
//		&&, ||
		
//		8.conditional operator
//		? : 
		
//		9.Assignment operator
//		=, +=, -=, *=     .args.clone(). all  11 CAO
		
//		15.Evaluation order of operands
		
//		If we apply any operator  on operand all operand will evaluated from left to right
		
//		System.out.println(m1(1)+m1(2)*m1(3)/m1(4)+m1(5)*m1(6)); // 32
//		 1+2*3/4+5*6
//		 1+6/4+5*6
//		 1+1+30
//		 2+30
//		 32
		
		System.out.println(m1(1)+m1(2)*m1(3)/m1(4)+m1(5)*m1(6));
		
//		System.out.println(m1(1)+m1(2)*m1(3)/m1(4)+m1(5)*m1(6)*m1(7)/m1(8)+m1(9)-m1(10));// 27
//	    1+2*3/4+5*6*7/8+9-10
//		1+6/4+5*6*7/8+9-10
//		1+1+5*6*7/8+9-10
//		1+1+30*7/8+9-10
//		1+1+210/8+9-10
//		1+1+25+9-10
		2+25
		
//		If multiple operator has same precedence then it execute from left to right
//		and right to left accrdng to associativity.
		
//		For more detail : See Java operator precedence table
		
//		Lecture 23 : 
//		16.new vs newInstance()
//		1.new : - We can use this new operator to create an object , if we know classname at the beggining
//		eg:- 
//		Test t = new Test();
//		Student S = new Student();
//		Customer C = new Customer();
		
//		2. newInstance():- is a method in Class.class we can use newInstance method to create object, 
//		if we don't know class name at begining and it is available dynamically at runtime from
//		CLA,file,database.
//		eg: above
//		17.instanceOf Vs isInstance()
//		18.ClassNotFoundException Vs NoClassDefFoundError
//		both above 17 & 18 point are theory based and interview question only 
		
		
		
		


	}
//	public static int m1(int i) {
//	System.out.println(i);// 1,2,3,4,5,6
//	System.out.println(i);//1,2,3,4,5,6.7,8,9,10
//	return i;
//}
	
	public static int m1(int i) {
		System.out.println(i);
		return i;
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2024-01-01 23:28:53.715
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2024-01-01 23:28:53.717
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2024-01-01 23:28:53.757
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.util.ArrayList; 
	
public class OperatorsAndAssingments_Practice {
	//class Customer{
//	
//}
//class Test{
//	public static void main(String[] args)throws Exception {
//		Object O = Class.forName(args[0]).newInstance();
//		System.out.println("Object created for :"+O.getClass().getName());
////		System.out.println("Hello");
//- Other rest thing are thoery based and need setting for runnig in run time nad compile time seperately
//	}
//}
	public static void main(String[] args) {
//		Types of operators:-
//		1.Increment and decrement operators
//		2.Arithmetic operators
//		3.String concatenation operators
//		4.Relational operators
//		5.Equality operators
//		6.instanceOf operators
//		7.bitwise operators
//		8.short circuit operators
//		9.type cast operators
//		10.Assignment operators
//		11.conditional operators
//		12.new operators
//		13.[] operators
//		14.operator precedence
//		15.Evaluation order of operands
//		16.new vs newInstance()
//		17.instanceOf Vs isInstance()
//		18.ClassNotFoundException Vs NoClassDefFoundError

//		1. Increment & Decrement operators:-
//		Increment - Pre-Increment , y=++x;
//		Increment - Post-Increment, y=x++;
		
//		Decrement - Pre-Decrement , y=--x;
//		Decrement - Post-Decrement, y=x--;
		
//		int x= 10;
//		x++;
//		System.out.println(x);// 11
		
//		Pre Increment
//		int x= 10;
//		int y= ++x;// pre incr -- here y value = 11
//		System.out.println(x);// 11
//		System.out.println(y);// 11
		
//		Post Increment
//		int x= 10;
//		int y= x++;
//		System.out.println(y);// 10
//		System.out.println(x);// 11
//		
//		int x= 10;
//		int y= x+1;
//		System.out.println(x);// 10
//		System.out.println(y);// 11
		
//		Pre Decrement
//		int x= 10;
//		int y= --x;
//		System.out.println(y);// 9
//		System.out.println(x);// 9
		
//		Post Decrement
//		int x= 10;
//		int y= x--;
//		System.out.println(y);// 10
//		System.out.println(x);// 9
		
//		int x= 10;
//		int y= ++10;// Invalid argument to operation ++/--
//		System.out.println(x);
////		System.out.println(y);
//		int z = 10++;// Invalid argument to operation ++/--
//		System.out.println(z);
		
		
//		int x= 10;
//		int y= ++ (++x);// Invalid argument to operation ++/--
//		System.out.println(y);
		
//		final int x = 10;
//		x++;// The final local variable x cannot be assigned. 
////		It must be blank and not using a compound assignment
//		System.out.println(x);
		
		
//		final int x = 10;
//		x++;
//		System.out.println(x);// The final local variable x cannot be assigned. It must be blank and not using a compound assignment
		
//		int x = 10;
//		x++;
//		System.out.println(x);
		
//		int x= 10;
//		int y= x++;
//		int z = x;
//		z++;
//		
//		System.out.println(y);// 10
//		System.out.println(x);// 11
//		System.out.println(z);// 12
		
//		int x = 10;
//		int y = ++x;
//		int z= y;
//		System.out.println(z);// 11
//		z++;
//		System.out.println(y);// 11
//		System.out.println(x);// 11
//		System.out.println(z);// 12
	
//		int x= 10;
//		x++;
//		System.out.println(x);// 11
		
//		char ch = 'a';
//		ch++;
//		System.out.println(ch);// b
		
//		char ch = 'a';
//		ch++;
//		System.out.println(ch);// b
		
//		double d = 10.5;
//		d++;
//		System.out.println(d);// 11.5
		
//		double d = 10.5;
//		++d;
//		System.out.println(d);// 11.5
		
//		boolean b = true;
//		b++;// Type mismatch: cannot convert from boolean to int
//		System.out.println(b);
		
//		char ch = 'a';
//		char y = ch++;
//		System.out.println(ch);//b
//		System.out.println(y);//a
		
		
		
		
		
//		Diff Btwen b++ and b=b+1
		
//		byte b = 10;
//		byte a= 10;
//		byte c= a+b;// max(int,type of a, type of b)--> max(int,byte,byte)
//		System.out.println(c);//Type mismatch: cannot convert from int to byte
		
//		byte a = 10;
//		byte b = -1;
//		byte c= (byte)(a+b);
//		System.out.println(c);//9
		
		
//		byte b= 10;
//		byte a = 10;
//		byte c = a+b;// Type mismatch: cannot convert from int to byte
//		System.out.println(b);
		
//		int b = 10;
//		int a= 10;
//		int c = a+b; // max(int,type of a, type of b)--> max(int,int,int)
//		System.out.println(c);// 20
		
//		short a = 10;
//		short b = 10;
//		short c = a+b;
//		System.out.println(c);// Type mismatch: cannot convert from int to short
		
//		short a = 10;
//		short b = 10;
//		short c = (short)(a+b);
//		System.out.println(c);// 20
		
//		char ch = 'a';
//		char ch1 = 'b';
//		char chs  = ch + ch1;
//		System.out.println(chs);// Type mismatch: cannot convert from int to char
		
//		char ch = 'a';
//		char ch1 = 'b';
//		char chs  = (char)(ch + ch1);
//		System.out.println(chs);//Ã
		
//		char ch2 = 'Ã';
//		int in = ch2+0;
//		System.out.println(in);
		
		
//		char ch = 'a';
//		char ch1 = 'b';
//		int x = ch;
//		int y= ch1;
//		System.out.println(x);//97
//		System.out.println(y);//98
		
//		char x = 'a';
//		char y= 'b';
//		long l = x+y;
//		System.out.println(l);// 197
		
//		char x= 'a';
//		char y='b';
//		float f= x+y;
//		System.out.println(f);// 195.0
		
//		char x= 'a';
//		char y='b';
//		double d= x+y;
//		System.out.println(d);// 195.0
		
//		char ch = 'a';
//		double d = 10.5d;
//		double sum = ch +d;
//		System.out.println(sum);// 107.5
		
//		char ch = 'a';
//		double d = 10.5d;
//		int sum = (int)(ch +d);
//		System.out.println(sum);// 107
		
		
		
		
		
		
//		byte b= 10;
//		byte a = 10;
//		byte c = (byte)(a+b);// Type mismatch: cannot convert from int to byte
//		System.out.println(c);// 20
		
//		byte b= 10;
//		byte a = 20;
//		byte c = a + b;
//		System.out.println(c);// Type mismatch: cannot convert from int to byte
//		byte b = 10;
//		b= b+1;// Type mismatch: cannot convert from int to byte
//		System.out.println(b);
		
//		byte b= 10;
//		byte a = 20;
//		byte c = (byte)(a + b);
//		System.out.println(c);
		
//		byte b = 10;
//		b= (byte)(b+1);
//		System.out.println(b);// 11
		
//		byte b = 10;
//		b= (byte)(b+1+b);
//		System.out.println(b);// 21
		
//		byte b = 10;
//		b= (byte)(b+1+b-b+10-12);
//		System.out.println(b);// 9
		
//		byte b = 10;
//		b= (byte)(b+1);
//		System.out.println(b);// 11
		
//		byte b =20;
//		b= b+1;
//		System.out.println(b);
		
//		byte c = 20;
//		c= c++;
//		System.out.println(c);//20
		
		
//		int a = 10;
//		int c = 10;
//		byte z = (byte)(a+c);
//		System.out.println(z);
		
		
		
//		int x= 10;
//		int y = ++ (++x);// Invalid argument to operation ++/--
//		System.out.println(y);
		
//		int x= 10;
//		int y= ++ (++x);
//		System.out.println(y);// Invalid argument to operation ++/--
		
		
		
		
		
//		byte c = 20;
//		byte z = c++;
//		System.out.println(z);//20
		
//		byte b = 10;
//		b++;// (byte)b+1
//		System.out.println(b);// 11
		
//		byte b = 10;
//		b++;
//		System.out.println(b);//11
		
		
		
		
//		2. Arithematic Operator - (+,-,*,/,%)
		
//		byte b = 10;
//		byte c = 19;
//		byte sum = (byte)(b+c) ;
//		System.out.println(sum);// 29
		
		
//		byte b = 10;
//		short s = 19;
//		short sum = (short)(b+s);
//		System.out.println(sum);// 29
		
//		short s1 = 10;
//		short s2= 18;
//		short sum = (short)(s1+s2);
//		System.out.println(sum);// 28
		
//		byte b = 10;
//		long l = 19;
//		long sum = b+l;
//		System.out.println(sum);// 29  -- int to long conversion is possible 
		
//		long l = 10;
//		double d = 10.4;
//		double sum = l+d;
//		System.out.println(sum);// 20.4 -- int to double is possible and long is max among
		
		
//		float f = 10.4f;
//		long l = 10;
//		long sum = f+l;// Type mismatch: cannot convert from float to long
//		long sum = (long)(f+l);// 20-- ans in long
//		float sum = l+f;// 20.4
//		System.out.println(sum);
		
//		char ch = 'A';
//		char ch1 = 'B';
//		char sum = ch+ch1;// Type mismatch: cannot convert from int to char
//		int sum = ch+ch1;
//		System.out.println(sum);// 131
		
//		char ch = 'A';
//		double d = 10.5;
//		int sum = ch+d;// Type mismatch: cannot convert from double to int
//		char sum1 = ch+d;// Type mismatch: cannot convert from double to char
//		double sum = ch+d;// 75.5
//		System.out.println(sum);

//		System.out.println('a'+'b');//195
//		System.out.println('a'+10.5);// 107.5
//		System.out.println('a'+0.89);// 97.89
		
//		System.out.println(10/0);// java.lang.ArithmeticException: / by zero
		
//		System.out.println(10/0.0);// Infinity
//		System.out.println(-10/0.0);// -Infinity
		
//		System.out.println(10/0.0f);// Infinity
//		System.out.println(-10/0.0f);// -Infinity
		
//		System.out.println(10/0);// / by zero
		
//		System.out.println(10/0.0);// Infinity
//		System.out.println(10.0/0);// Infinity
//		System.out.println(-10.0/0);// -Infinity
		
		
		
//		 NaN- Not a Number
		
//		System.out.println(0/0);//  java.lang.ArithmeticException: / by zero
//		System.out.println(0/29);//0
		
//		System.out.println(0/0.0f);// NaN
//		System.out.println(-0/0.0f);// NaN
		
//		System.out.println(0/0.0);// NaN
//		System.out.println(-0/0.0);// NaN
	
//		System.out.println(0/0);//java.lang.ArithmeticException: / by zero
		
//		System.out.println(0.0/0);// NaN
//		
//		System.out.println(-0.0/0);// NaN
		
//		Summary
		
//		System.out.println(10/0); / by zero
//		System.out.println(10/0.0);// Infinity
//		System.out.println(0/0);// java.lang.ArithmeticException: / by zero
//		System.out.println(0.0/0);// NaN
		
//		System.out.println(10<Float.NaN);// false
//		System.out.println(10<=Float.NaN);// false
//		System.out.println(10>Float.NaN);// false
//		System.out.println(10>=Float.NaN);// false
//		System.out.println(10==Float.NaN);// false
//		System.out.println(Float.NaN == Float.NaN);// false
//		System.out.println(10 != Float.NaN);// true
//		System.out.println(Float.NaN != Float.NaN);// true
		
		// need to study further on NaN 
		
		
		
//		2. String Concatenation operator:(+) lecture 18
		
//		String a = "Fahad";
//		int b=10,c=20,d=30;
//		System.out.println(a+b+c+d);// Fahad102030
//		System.out.println(b+c+d+a);// 60Fahad
//		System.out.println(b+c+a+d);// 30Fahad30
//		System.out.println(b+a+c+d);// 10Fahad2030
		
//		System.out.println(a=a+b+c);//Fahad1020
//		System.out.println(a=b+c+d);// Type mismatch: cannot convert from int to String
//		System.out.println(b=a+c+d);// Type mismatch: cannot convert from String to int
//		System.out.println(b=b+c+d);// 60
		
//		4. relational Operator (<,<=,>,>=)
//		System.out.println(10<20);// true
//		System.out.println('a'<20);//false
//		System.out.println('a'<97.6);// true
//		System.out.println('a'<'A');// false
//		System.out.println(true>false);// The operator > is undefined for the argument type(s) boolean, boolean
		
//		System.out.println("fahad102">"fahad");//The operator > is undefined for the argument type(s) java.lang.String, java.lang.String
		
//		System.out.println(10<20<30);// The operator < is undefined for the argument type(s) boolean, int
		
//		5. Equality operator (==, !=)
		
		
	
		
		
//		--------Revision Practice -----------------------------------------------------------------------------
		
		
//		int x = 10;
//		int y=++x; // Pre-Increment
//		int z =x++; // 11 // Post-Increment
//		System.out.println(y); // 11 - OP
//		System.out.println(z); // 11
//		int m =x++; // 11
//		System.out.println(m); // 11
//		
//		int x= 10;
//		int y = ++x;
//		System.out.println(y);
//		int z = x++;
//		System.out.println(z);
//		int m = x++;
//		System.out.println(m);
		
		
		
//		int x=20;
//		int y= ++x; // Isi line me value incr ho gayi //Pre-Increment
//		System.out.println(y); // 21
//		System.out.println(x); // 21
//		
//		int x= 30;
//		int y= x++;
//		int z= ++x;
//		System.out.println(y); // 30
//		System.out.println(x); // 32
		
		
//		int x= 30;
//		int y= x++; // Post-Increment
//		System.out.println(y); // 30 Post-Increment
//		System.out.println(x); // 31 Post-Increment
//		int x= 90;
//		int y= x++;
//		System.out.println(x);// 91
//		int y= ++x; //91
//		System.out.println(y);// 90
		
		
//		int y=20;
//		int x= --y; //Pre-Decrement
//		System.out.println(x); // 19 Pre-Decrement 
//		System.out.println(y); //19  Pre-Decrement
		
//		int z= 20;
//		int x= z--; // Post-Decrement
//		System.out.println(x); // 20 Post-Decrement
//		System.out.println(z); // 19 Post-Decrement
		
//		int x= 10;
//		int y = x++;
//		System.out.println(y); // 10
//		System.out.println(x);// 11
//		int z= --x;
//		System.out.println(z); // 10
		
//		int x= 10;
//		int y= --x;
//		int z = x--;
//		System.out.println(y);
//		System.out.println(z);
//		System.out.println(x);
		
//		We cant apply incremnt and decrement operators on constant values.
//		int x = 10;
//		int y = ++10;
//		System.out.println(y);// Unresolved compilation problem: 
//		int x= 10;
//		int y= 10++:
//		System.out.println(y);
		//Invalid argument to operation ++/--
//		Nesting of INC/DEC operators is not allowed
		
//		int x= 10;
//		int y= ++(++x);
//		System.out.println(y); // Unresolved compilation problem: 
		//Invalid argument to operation ++/--
		
//		int x= 10;
//  	int y= ++(x);
//		int z= ++(++x); // neasting of increment and decrement operators is not allowed.
//		System.out.println(z);
//		++x means value not a variable.. here we required variable not a valuex.
		
		
//		For FINAL variables we cant apply incr/decr operators.
//		final int x = 10;
//		x++;// Unresolved compilation problem: 
//		int y= x++;// Unresolved compilation problem: 
//		System.out.println(y);// Unresolved compilation problem: 
		
//		final int x= 10;
//		int y = x++;
//		System.out.println(y);
		
		//The final local variable x cannot be assigned.
//		It must be blank and not using a compound assignment
		
//		final int x= 10;
//		x=11;
//		System.out.println(x);
		
		
		
//		final int x =10;
//		x=11;// Unresolved compilation problem: 
//		System.out.println(x);// The final local variable x cannot be assigned.
//		It must be blank and not using a compound assignment
		
		
//		int x = 10;
//		x++;
//		int y=x++;//10
//		System.out.println(y);// 11
//		System.out.println(x);// 12
		
		
		
		
//		int x = 10;
//		x++;
//		System.out.println(x);// 11
//		int y=x++;
//		System.out.println(y);// 11
//		System.out.println(x);// 12
//		System.out.println(y);// 11 // first assigned then increment.
//		
//		final int x= 10;
//		int y= x++;
//		System.out.println(y);
		
		
//		char ch = 'a';
//		ch++;
//		int y= ch;
//		System.out.println(ch); // b
//		System.out.println(y); //98
		
//		char ch = 'a';// a=97
//		ch++;
//		int y=ch;
//		System.out.println(ch);// b  becz value of a is 97 so after increment value becomes 98 which is value of b
//		System.out.println(y);// 98
		
//		double d= 10.9;
//		d++;
//		System.out.println(d);// 11.9
		
//		double d = 10.5;
//		d++;
//		System.out.println(d);// 11.5
		
//		boolean b = true;
//		b++;
//		System.out.println(b);// Type mismatch: cannot convert from boolean to int
		
//		boolean b = false;
//		b++;// b+1-- (false+1)  Type mismatch: cannot convert from boolean to int
//		System.out.println(b);
		
//		boolean b = false;
//		System.out.println(b);
		
		
		
//		operator ++ can not applied to boolean
//		?We can apply inc/decr operators for every primitive data type only except to boolean
//		
		//Date&Time=04:03PM,Wednesday,02/08/2023 START
//		
//		5. Diff btwn B++ & b=b+1 
		
//		If we applied any arithemetic operators between two variable a and b then
		//the result type is always	max of (int,type of a, type of b)
		
//		byte a = 10;
//		byte b = 20;
//		byte c = a+b;
//		System.out.println(c);// Type mismatch: cannot convert from int to byte
//		we can solve/handle it by usinf type casting
//		byte c = (byte)(a+b);
//		System.out.println(c);// 30
		
//		byte a = 10;
//		byte b = 20;
//		byte c = a+ b;// Type mismatch: cannot convert from int to byte
//		byte c= (byte) (a+b);
//		System.out.println(c);// 30
		
		
//		byte b = 10;
//		b= b+1;// Type mismatch: cannot convert from int to byte
//		System.out.println(b);//Type mismatch: cannot convert from int to byte
		
//		byte b =10;
//		b= b+1;
//		System.out.println(b);// Type mismatch: cannot convert from int to byte
		
//		byte b = 10;
//		b=(byte)(b+1);// using TypeCasting
//		System.out.println(b);// 11
		
//		byte b = 10;
//		b=(byte)(b+1);
//		System.out.println(b);// 11
		
//		byte b = 10;
//		b++;
//		System.out.println(b);//11

//		byte b = 10;
//		b++;// internal typecasting happen by default
//		System.out.println(b);// 11
//		NOTE:- In case of INcr/Decr operator internal TypeCasting perform automatically
//		
//		byte b = 10;
//		byte c = 20;
//		byte d =(byte) (b+c);
//		System.out.println(d);// 30
		
		
//		2.Arithmetic Opeartors:-(+,-,/,*,%)
//		If we apply any arithmetic opearators between a&b the result type is always
//		max(int,type of a , type of b)
//		
//		Fig: Typecasting flow
//		byte--->Short---->
//						----->int-->long-->		float-->double
//				char---->
		
//		byte + byte= int
//		byte + short= int
//		short + short=int
//		byte + long=long
//		long + double=double
//		float + long=float
//		char + char=int
//		char + double=double
		//Date&Time=04:23PM,Wednesday,02/08/2023 END
		
		//Date&Time=05:45PM,Wednesday,02/08/2023 START
//		System.out.println('a'+0.89);// 97.89-->a=97 (ASCII Value) -->97+0.89=97.89 double// char + double=double
//		byte b = 6;
//		byte c = 6;
//		System.out.println(b+c);// 12 jo ki int hai= byte + byte= int
//		System.out.println(32767+32767);// 65534 is int value short + short=int
//		System.out.println(127+32767);// 32894     byte + short= int
//		System.out.println(127+23717372);// 23717499 byte + long=long
//		System.out.println(1234531+10.3333);//1234541.3333 //long + double=double
//		System.out.println(212.332+932049832);// 9.32050044332E8 // float + long=float
//		System.out.println('a'+'a');// 194 char + char=int
//		System.out.println('a'+765.27);// 862.27  char + double=double
		
//		Infinity:-
//		In integral arithmetic(byte,short,int ,long) there is no way to represent infinity if infinity is a result then we will get AE: in integral arithmetic
//		
//		System.out.println(10/0);// Exception in thread "main" java.lang.ArithmeticException: / by zero
//		
//		System.out.println(10/0);/ by zero
	
//		But in floating point arithmetic (float & double) there is a way to represent infinity
//		for this float & double classes conatins the following two constatnt.
//		POSITIVE_INFINITY
//		NEGATIVE_iNFINITY
//		Hence even though result is infinity we wont get nay arithmetic exception in floating point arithmetic
//		
//		eg:-
//		System.out.println(10/0.0);// Infinity 10/float/double
//		System.out.println(10.0/0);// Infinity float/double/0
		
//		System.out.println(10/0.0);
//		System.out.println(10.0/0.0);
//		System.out.println(10/-0.0);
//		System.out.println(-10/0.0);
		
//		NaN:-(Not a number)
//		In integral arithmetic(byte,short,int ,long) there is no way to represent undefined result 
//		if undefined is a result then we will get AE: in integral arithmetic
//		Exception in thread "main" java.lang.ArithmeticException: / by zero
//		
//		System.out.println(0/0);// Exception in thread "main" java.lang.ArithmeticException: / by zero
//		
//		System.out.println(0/0);// / by zero
		
//		But in floating point arithmetic (float & double) there is a way to represent undefined result
//		for this float & double classes contains NaN constant.
//		Hence if the result is undefined we won't get any AE. in floating point arithmetic
//		
//		System.out.println(0.0/0);// NaN
//		System.out.println(-0/0.0); // NaN
//		System.out.println(10/0);//  java.lang.ArithmeticException: / by zero
//		System.out.println(-10/0);// java.lang.ArithmeticException: / by zero
//		System.out.println(10/-0);// java.lang.ArithmeticException: / by zero
//		System.out.println(10.0/0);// Infinity
//		System.out.println(10.0/-0);// Infinity
//		System.out.println(-10.0/-0);// -Infinity
//		System.out.println(-10.0/0);// -Infinity
//		System.out.println(10.0/-0.0);// -Infinity
//		System.out.println(-10.0/-0.0); // Infinity
//		System.out.println(0.0/-0);// NaN
//		System.out.println(-0.0/0);// NaN
//		System.out.println(-0.0/-0);// NaN
//		System.out.println(-1.0/-0);// -Infinity
		
//		for any x value including NaN the following expression return false
//		int x =0;
//		System.out.println(x<NaN); // NaN cannot be resolved to a variable
//		System.out.println(x<=NaN); // NaN cannot be resolved to a variable
//		System.out.println(x>NaN); // NaN cannot be resolved to a variable
//		System.out.println(x>=NaN);  // NaN cannot be resolved to a variable
//		System.out.println(x==NaN);// NaN cannot be resolved to a variable
		
//		for any x value including NaN the following expression return true
//		System.out.println(x!=NaN);// x cannot be resolved to a variable
		//NaN cannot be resolved to a variable
		
//		System.out.println(10<float.NaN); // Syntax error on token "float", invalid Expression
		
//		System.out.println(10<Float.NaN); // false
//		System.out.println(10<=Float.NaN);// false
//		System.out.println(10>Float.NaN);// false
//		System.out.println(10>=Float.NaN);// false
//		System.out.println(10==Float.NaN);// false
//		System.out.println(Float.NaN==Float.NaN);// false
//		System.out.println(10!=Float.NaN);// true
//		System.out.println(Float.NaN!=Float.NaN);// true
		
//		System.out.println(10<Float.NaN);// false
		
		
//		3.String concatenation operators
		
//		The only overloaded operator in java is (+) operator. 
//		Sometime it is said arithmetic addition operators 
//		and sometime it is said string concatenation opeartors.
		
		
//		Case1:-
//		If atleast one argument is String type  then
//		(+) operator access String concatenation operator.
		
//		Case2:-
//		If both argument is number type  then
//		(+) operator access arithmetic addition operator.
		
//		eg1:-
//		String a = "fahad";
//		int b=10, c=20, d=10;
//		System.out.println(a+b+c+d);// fahad102010 String concatenation operator
//		System.out.println(b+c+d+a);//40fahad this expression has same operator then order of precedence is from left to right so it start add value from left and concat with a. So it use both String concatenation operator and arithmetic addition operator 
//		System.out.println(b+c+a+d);// 30fahad10 this expression has same operator then order of precedence is from left to right so it start add value from left and concat with a. So it use both String concatenation operator and arithmetic addition operator 
//		System.out.println(b+a+c+d);// 10fahad2010
		
		
//		String a = "fahad";
//		int b=10,c=20,d=10;
//		System.out.println(a+b+c+d);//
//		System.out.println(b+c+d+a);
//		System.out.println(b+c+a+d);
//		System.out.println(b+a+c+d);
		
//		eg2:-
//		String a = "fahad";
//		int b=10, c=20, d=30;
//		a=b+c+d;
//		System.out.println(a); // Type mismatch: cannot convert from int to String
//		a=a+b+c;
//		System.out.println(a);// fahad1020
//		b=a+c+d;
//		System.out.println(b);// Type mismatch: cannot convert from String to int
//		b=b+c+d;
//		System.out.println(b);// 60
		
//		String a= "fahad";
//		int b=10, c=20, d=30;
////		a=b+c+d;
////		System.out.println(a);//Type mismatch: cannot convert from int to String
//		a=a+b+c;
////		System.out.println(a);
////		b=a+c+d;
//		b=b+c+d;
//		System.out.println(b);//60
		
		
		
//		4.Relational operators (<,<=,>,>=)
//		We can apply relational operator for every primitive type except boolean.
//		eg:-
//		System.out.println(10<20);// true
//		System.out.println('a'<20);// false
//		System.out.println('a'<97.6); //true
//		System.out.println('a'>'A'); // true
//		System.out.println(true>false);// The operator > is undefined for the argument type(s) boolean, boolean
//		
//		System.out.println(10<20);// true
//		System.out.println('a'<20);// false
//		System.out.println('a'<97.6);// true
//		System.out.println('a'>'A');// true
//		System.out.println(true<false);
		
//		System.out.println(10<=10);// true
//		System.out.println(10>=10);// true
		
		
		
//		 We cannot apply relational operators for object/Non-Primitive types
//		eg
//		System.out.println("durga123">"durga");// The operator > is undefined for the argument type(s) java.lang.String, java.lang.String
		
//		System.out.println("fahad">"fahad");
		
//		Nesting of relational operator is not allowed otherwise we will get CTE.
//		System.out.println(10<20<30);// The operator < is undefined for the argument type(s) boolean, int
		
//		System.out.println(10<20>30);// The operator > is undefined for the argument type(s) boolean, int
		
//		5.Equality operators (==, !=)  //Date&Time=3:43PM,Friday,02/10/2023
//		we can use == operator for address comparison
		
//		we can  apply equality operator for every primitive type including boolean also.
		
//		System.out.println(10==20);// false
//		System.out.println('a'=='b'); // false
//		System.out.println('a'==97.0); //true
//		System.out.println(false==false);// true
//		System.out.println(true==true);// true
//		System.out.println('a'=='A');// false
//		System.out.println('a'==97);// true
//		System.out.println(127==127);// true
//		System.out.println("fahad"=="fahad");// true
//		System.out.println("fah"=="abd");// false// yahan address compare nahi ho raha.
		
//		System.out.println(10==10);
//		System.out.println(10==20);
//		System.out.println('a'==97.0);
//		System.out.println('a'==97);
//		System.out.println('a'=='a');
//		System.out.println(false==false);// true
//		System.out.println('a'=='A');// false
//		System.out.println("fahad"=="fahad");// true
//		System.out.println("fah"=="abd");// false
		
//		we can apply equality operator for object type also
//		for object references r1 and r2 , r1== r2 iff both reference pointing to the same object
//		(reference comparison or address comparison)
		
//		Thread t1 = new Thread();
//		Thread t2 = new Thread();
//		Thread t3=t1;
//		System.out.println(t1==t3);// true
//		System.out.println(t1==t2);// false
		
//		Thread t1 = new Thread();
//		Thread t2 = new Thread();
//		Thread t3 = t1;
//		System.out.println(t1==t3);// true
//		System.out.println(t1==t2);// false
		
//		Thread t1 = new Thread();
//		Object O = new Object();
//		String S = new String("durga");
//		System.out.println(t1==O);// false
//		System.out.println(O==S);// false
//		System.out.println(S==t1);// Incompatible operand types String and Thread
		
//		Thread t1 = new Thread();
//		Object O = new Object();
//		String S = new String("durga");
//		System.out.println(t1==O);
//		System.out.println(O==S);
//		System.out.println(S==t1);// Incompatible operand types String and Thread
		
		
		
//		!= operators
//		we can use != operator for address comparison
//		System.out.println(10!=20);// true
//		System.out.println('a'!='b'); // true
//		System.out.println('a'!=97.0); //false
//		System.out.println(false!=false);// false
//		System.out.println(true!=true);// false
//		System.out.println('a'!='A');// true
//		System.out.println('a'!=97);// false
//		System.out.println(127!=127);// false
//		System.out.println("fahad"!="fahad");// false
//		System.out.println("fah"!="abd");// true
		
//		Thread t1 = new Thread();
//		Object O = new Object();
//		String S = new String("durga");
//		System.out.println(t1!=O);// true
//		System.out.println(O!=S);// true
//		System.out.println(S!=t1);// Incompatible operand types String and Thread
		
		// In general we can use == operator for address comparison 
//		and .equals() method for content comparison.
		
//		eg:
//		String S1 = new String("durga");
//		String S2= new String("durga");
//		System.out.println(S1==S2);//false // this compare address of variable/object
//		System.out.println(S1.equals(S2));// true// this method compare content of variable/objects
		
//		String S1 = new String("fahad");
//		String S2 = new String("fahad");
//		System.out.println(S1==S2);// false - address compare ho raha
//		System.out.println(S1.equals(S2)); // content/value compare ho rahi
//		
		
		
//		for any object reference r == null is always false
//		but null == null is always true
		
//		String s = new String("durga");
//		System.out.println(s==null);// flase
//		
//		String s = new String("durga");
//		System.out.println(s==null);// flase-- address compare and not matched so result is false.
		
//		String n = null;
//		System.out.println(n==null);// true.
//		System.out.println(null==null);// true
		
		
//		String n = null;
//		System.out.println(n==null);// true
//		System.out.println(null==null);// true
		
//		Lecture 19:- 
//		6.instanceOf operators
		//Date&Time=01:03PM,Friday,02/10/2023
//		We  can use instanceof operator to check whether given object is of particular type or not.
		
//		Syntax:-
//		r instance X -- r is object reference  X is class or interface name
//		Thread t = new Thread();
//		System.out.println(t instanceof Thread);// true
//		System.out.println(t instanceof Object);  // true
//		System.out.println(t instanceof Runnable);// true
		
//		Thread t = new Thread();
//		System.out.println(t instanceof Thread);
//		System.out.println(t instanceof Object);
//		System.out.println(t instanceof Runnable);
		
//		int[] l = new int[9];
//		System.out.println(l[0]);
//		Object o = new l.get[0];
		
	
//		 ArrayList<String> l = new ArrayList<String>(); 
//		// Create an ArrayList object
//		 Object O = new l.get[0];
		
//		for any class or interface X null instanceof X  is always false
//		System.out.println(null instanceof Thread); // false
//		System.out.println(null instanceof Runnable);// false
		
		
//		Thread t = new Thread();
//		System.out.println(t instanceof String);// Incompatible conditional operand types Thread and String
		
//		System.out.println(null instanceof Thread);// false
//		System.out.println(null instanceof Object);// false
//		System.out.println(null instanceof Runnable);// false
		
		
		
//		7.bitwise operators (&, |, ^)
//		 & -- And,  returns true iff both arguments are true
//		 | -- OR  returns true iff atleast one arguments are true
//		 cap symbol - ^ -- Exor, exclusive OR, X-OR, returns true iff both arguments are different
		
//		eg :- 
//		System.out.println(true & false);// false
//		System.out.println(true | false);// true
//		System.out.println(true ^ false); // true
		
//		System.out.println(true & false); // false
//		System.out.println(true | false);// true
//		System.out.println(true ^ false);// true
//		System.out.println(true ^ true);// false	
//		System.out.println(false ^ false);// false
		
		
//		we can apply these for integral types also
//		System.out.println(4&5);// 4
//		System.out.println(4|5);// 5
//		System.out.println(4^5);// 1
		
//		System.out.println( 4 & 5);
//		System.out.println(4 |5);
//		System.out.println(4 ^ 5);
		
//		System.out.println(100 & 101);// 100
//		System.out.println(11 & 11); // 11
		
//		System.out.println(~4);// -5
		
//		System.out.println(~5);// -6
		
//		System.out.println(~38); // -39
		
		
		 
		
//		bitwise complement operators (~):- tild symbol
//		We can apply for only integral type not for boolean type OW CTE.
//		System.out.println(~true);  // The operator ~ is undefined for the argument type(s) boolean
//		System.out.println(~4);// -5
		
//		Boolean complement operator : (!)--
//		We can apply this operator only for boolean type but not for integarl types.
//		System.out.println(!8);// The operator ! is undefined for the argument type(s) int
//		System.out.println(!false);// true
//		System.out.println(!true);// false
		
//		System.out.println(!10);
//		System.out.println(!true);
//		System.out.println(!false);
		
		
		
//		Note :-
//		&,|,^-- applicable for both boolean & integral
//		~ -- applicable for only integral but not for boolean
//		!  applicable only for boolean but not for integral
		
		
		
//		8.short circuit operators :(&&, ||)
		
//		These are exactly same as bitwise operators(&,|) except only following differences.
		
//				$,|		|		&&,||
//		-------------------------------				
//		1.Both argument	|	1. second argument		
//		should be evalu	|		evaluation is optional	
//		ated always.	|			
//		
//		2.relatively	|	2.relatively performance
//		performance 	|	high
////	low
//		
//		3.applicable	|	3. applicable only for boolean but not
//		for both boolean |	for integral
//		and integral types|
						
//		Note:- 1. x&&y == y will be evaluated iff x is true i.e. if x is false then y will not be evaluated.
		
//		2.  x||y - y will be evaluated iff x is false i.e. if x is true then y will not be evaluated.
			
//		eg_
//		int x= 10;
//		int y=15;
//		if(++x<10 & ++y>15) {
//			x++;
//		}else {
//			y++;
//		}
//		System.out.println(x+"..."+y);// 11...17
		
//		int x = 10;
//		int y=15;
//		if(++x<10 & ++y>15) {
//			x++;
//		}else {
//			y++;
//		}
//		System.out.println(x+"..."+y);
		
//		int x= 10;
//		int y=15;
//		if(++x<10 && ++y>15) {
//			x++;
//		}else {
//			y++;
//		}
//		System.out.println(x+"..."+y);// 11...16
		
//		int x= 10;
//		int y=15;
//		if(++x<10 | ++y>15) {
//			x++;
//		}else {
//			y++;
//		}
//		System.out.println(x+"..."+y);// 12...16
		
//		
//		int x= 10;
//		int y=15;
//		if(++x<10 || ++y>15) {
//			x++;
//		}else {
//			y++;
//		}
//		System.out.println(x+"..."+y);// 12...16
		
		
//		int x = 10;
//		int y=15;
//		if(++x<10 && ++y>15) {
//			x++;
//		}else {
//			y++;
//		}
//		System.out.println(x+"..."+y);// 11...16

//		int x = 10;
//		int y=15;
//		if(++x<10 | ++y>15) {
//			x++;
//		}else {
//			y++;
//		}
//		System.out.println(x+"..."+y);// 
		
//		int x = 10;
//		int y=15;
//		if(++x<10 || ++y>15) {
//			x++;
//		}else {
//			y++;
//		}
//		System.out.println(x+"..."+y);// 12...16
		
//		int x = 10;
//		int y=15;
//		if(++x<10 || ++y>15) {
//			x++;
//		}else {
//			y++;
//		}
//		System.out.println(x+"..."+y);
		
		
//		eg:- 2-
		
//		int x= 10;
//		if(++x<10 && (x/0>10)) {
//			System.out.println("Hello !!");
//		}else {
//			System.out.println("Hii !!");
//		}// o/p:- Hii
//		
//		int x= 10;
//		if(++x<10 & (x/0>10)) {
//			System.out.println("Hello !!");
//		}else {
//			System.out.println("Hii !!");
//		}// : / by zero
		
//		int x= 10;
//		if(++x<10 && (x/0>10)) {
//			System.out.println("Hello !!");
//		}else {
//			System.out.println("Hii !!");
//		}
		
//		int x= 10;
//		if(++x<10 & (x/0>10)) {
//			System.out.println("Hello !!");
//		}else {
//			System.out.println("Hii !!");
//		}
		
		
//		int x= 10;
//		if(++x<10 & (x/2>10)) {
//			System.out.println("Hello !!");
//		}else {
//			System.out.println("Hii !!");
//		}
		
//		int x= 10;
//		if(++x<10 | (x/0>10)) {
//			System.out.println("Hello !!");
//		}else {
//			System.out.println("Hii !!");
//		}
		
		
//		int x= 10;
//		if(++x<10 | (x/2>10)) {
//			System.out.println("Hello !!");
//		}else {
//			System.out.println("Hii !!");
//		}
		
//		int x= 10;
//		if(++x<10 || (x/0>10)) {
//			System.out.println("Hello !!");
//		}else {
//			System.out.println("Hii !!");
//		}
		
//		9.type cast operators
		
//		1. Implicit typecasting
//		2. Explicit Typecasting
		
//		1.Implicit:
//		Compiler is responsible to perform ITC.
//		whenever we are assinging smaller Datatype value to bigger datatype variable ITC will be performed.
//		It is also known as widening and upcasting
//		There is no loss of information in this typecasting
//		The following are various possible conversion where ITC will be performed.
		
//		Fig: Typecasting flow : ITC
//		byte--->Short---->
//						----->int-->long-->float-->double
//				char---->
		
//		eg:-
//		int x='a'; 
//		System.out.println(x);// 97// compiler convert char to int automatically by ITC
//		int x= 'a';
//		System.out.println(x);// 97
//		
//		double d = 10;
//		System.out.println(d);// 10.0
		
//		long l = 10;
//		System.out.println(l);// 10
		
		
//		float f = 10;
//		System.out.println(f);// 10.0
		
		
//		double d = 10;
//		System.out.println(d);// 10.0  compiler convert int to double automatically by ITC
		
//		double d = 'a';
//		System.out.println(d);// 97.0
		
//		long l = 'a';
//		System.out.println(l);// 97
		
//		float f = 'a';
//		System.out.println(f);// 97.0
		
		
		
//		2.Explicit Type casting:
//		Programmer is responsible to perform ETC.
//		whenever we are assinging bigger Datatype value to smaller datatype variable then  ETC will be required.
//		It is also known as narrowing and downcasting
//		There may a chance of loss of information in this typecasting
		
//		The following are various possibilities  where ETC will  required.
		
//		Fig: ETC
//		byte<---Short<----
//						<-----int<--long<--float<--double
//				char<----
		
//		L---R -- Implicit TypeCasting
//		R---L -- Explicit Typecasting
		
//		eg:-
//		int x = 130;
//		byte b = x;
//		System.out.println(b);// Type mismatch: cannot convert from int to byte
		
//		int x = 130;
//		byte b = (byte) x; //  cannot convert from int to byte
//		System.out.println(b);// -126
		
		
//		int x = 130;
//		byte b = (byte)x;
//		System.out.println(b);// -126
		
//		whenever we are assingnig bigger D.T value to smaller D.T variable by ETC The MSB will be lost
//		We have to consider only LSB
		
//		int x= 150;
//		short s = (short)x;
//		System.out.println(s);// 150
//		
//		int x = 150;
//		short s = (short)x;
//		System.out.println(s);// 150
		
//		byte  b = (byte)x;
//		System.out.println(b);// -106
		
//		int x = 150;
//		byte b= (byte)x;
//		System.out.println(b);// -106
		
//		int x = 509;
//		byte b = (byte)x;
//		System.out.println(b);// -3
		
//		int x = 509;
//		short s = (short)x;
//		System.out.println(s);// 509
		
		
		
		
		
//		Float to integral value -- digit after decimal point lost
//		double d = 130.456;
//		int x = (int)d;
//		System.out.println(x);// 130
//		byte b = (byte)d;
//		System.out.println(b);// -126
		
//		double d = 130.456;
//		int x = (int)d;
//		System.out.println(x);// 130
		
//		double d = 130.456;
//		byte b = (byte)d;
//		System.out.println(b);// -126
		
//		float f = 130.456f;
//		int x = (int)f;
//		System.out.println(x);// 130
		
		
//		Lecture 21: 10.Assignment operators : 
//		Three types
//		1.Simple assingment
//		2.chained 
//		3.compound
		
//		1.Simple:-   int x= 10;
//		int x = 10;
//		literal value 10 assigned to  var x
		
//		2.chained:-  
//		int a,b,c,d;
//		a=b=c=d=20;
//		System.out.println(a+".."+b+"..."+c+"..."+d);// 20..20...20...20
		
		
//		int a,b,c,d;
//		a=b=c=d=10;
//		System.out.println(a+".."+b+".."+c+".."+d);//10..10..10..10

//		We can't performed chain assingment directly at the time of declaration
//		eg:-
//		 int a =b=c=d=20;
//		 System.out.println(a+".."+b+"..."+c+"..."+d);// b cannot be resolved to a variable
//			c cannot be resolved to a variable
//			d cannot be resolved to a variable
//		 at OperatorsAndAssignment.main(OperatorsAndAssignment.java:555)
		
//		int b,c,d;
//		int a=b=c=d=20;
//		System.out.println(a+".."+b+"..."+c+"..."+d);// 20..20...20...20
//		int b,c,d;
//		int a=b=c=d=20;
//		System.out.println(a+".."+b+"..."+c+"..."+d);//20..20...20...20
		
//		3.Compound Assignment Operator:-
//		Sometime assignment operator mixed with some other operator then we called that operator is CAO.
		
//		int a= 20;
//		a+=30;// -- a=a+30
//		System.out.println(a);// 50
		
//		int a = 20;
//		a+=30;// -- a=a+30;
//		System.out.println(a);// 50

//		The following are all possible compound assingment operator in java
		
//		+=		&=		>>= right shift operator
//		-=		|=		>>>= unsigned right shift operator
//		*=		^=		<<= left shift operator
//		/=
//		%=   Total === 11
		
//		in case of CAO internal T.C will performed automatically
//		 byte b = 10;
//		 b=b+1;  // max(int,byte,int)
//		 System.out.println(b);// Type mismatch: cannot convert from int to byte
		 
//		byte b =10;
//		b=b+1;// cannot convert from int to byte
//		System.out.println(b);
//		
		
//		byte b = 10;
//		b++;
//		System.out.println(b);// 11

//		 byte b = 10;
//		 b++;
//		 System.out.println(b);// 11
		 
//		 byte b = 10;
//		 b+=1;  // += CAO internal TC is performed.
//		 System.out.println(b);//11
		
//		byte b =10;
//		b+=1; // b=b+1 
//		System.out.println(b);// 11

//		byte b = 127;
//		b+=1;
//		System.out.println(b);//-128
		
//		byte b =127;
//		b+=1;
//		System.out.println(b);// -128
		
//		byte b = 127;
//		b+=127;
//		System.out.println(b);//-2
		
//		byte b =127;
//		b+=129;
//		System.out.println(b);//0
		
//		byte b =127;
//		b+=130;
//		System.out.println(b);//1

//		byte b = 127;
//		b+=3;
//		System.out.println(b);//-126
		
//		int a,c;
//		int b=20; // simple
//		int d; // simple only declared
//		a=c=d=20; //chained 
//		a+= b-= c*= d/= 2; // compound
//		System.out.println(a+"..."+b+"..."+c+"..."+d);// -160...-180...200...10
		
//		int a,c;
//		int b=20;
//		int d;
//		a=c=d=20;//chained
//		a+= 10;
//		b-=5;
//		c*=4;
//		d/=7;
//		System.out.println(a+"..."+b+"..."+c+"..."+d);//30...15...80...2
		
//		int a=10;
//		a+=a+10;
//		System.out.println(a);//30
		
//		int a=10;
//		a+=a+=a+=a-+a-+30;
//		System.out.println(a);
		
//		int a=10;
//		a+=12+12;
//		System.out.println(a);//34

//		int a,b,c,d,e,f,g,h;
//		a=b=c=d=e=f=g=h=10;
//		a+=10;
//		b-=10;
//		c/=10;// return quotient
//		d*=10;
//		e%=10; // return reminder
//		
//		f&=10; // f&10==> 10&10 = Ans 10 - 1010&1010==1010=10
//		g|=10; // 
//		h^=10;// x-OR cap 
//		
//		System.out.println(a); // 20
//		System.out.println(b); // 0
//		System.out.println(c); // 1
//		System.out.println(d); // 100
//		System.out.println(e); /// 0
//		System.out.println(f); // 10
//		System.out.println(g);// 10
//		System.out.println(h); // 0
		
		
//		11.conditional operators: (? :) Ternary operator
//		The only possible ternary operator in java is conditional operator
//		Syntax : 
//		int  x= (10<20)? 30:40;
		
//		is same as in if else condition
//		if(10<20) {
//			System.out.println("30"); // 30
//		}else {
//			System.out.println("40");
//		}
//		System.out.println(x);// 30
//		
//		int x=  (10<20) ? 30 :40;
//		System.out.println(x);//30
		
//		int  x;
//		if(20<30) {
//			x=10;
//		}
//		else {
//			x=20;
//		}
//		System.out.println(x);// 10
		
		
//		neasting of conditional operator is also possible
		
//		 int x = (10>20)?30 :(40>50)?60:70;
//		 System.out.println(x);// 70
//		is same as 
//		if(10>20) {
//			System.out.println("30"); 
//		}else if(40>50) {
//			System.out.println("60");
//		}else {
//			System.out.println("70");// 70
//		}
		
		
//		int x =(10>20)?30 : (40>90)? 40 : 60;
//		System.out.println(x);// 60
		
//		int x= (10>=30)?30:40;
//		System.out.println(x);//40
		
		
//		int x= (10<10) ? 10 : (10>30) ? 20 : (10<=5) ? 30 : (10>=60)? 40 : (10==10) ? 50 :60;
//		System.out.println(x);// 50
		
		
//		int x= (10<10) ? 10 : (10>30) ? 20 : (10<=5) ? 30 : (10>=60)? 40 : (10==20) ? 50 :60;
//		System.out.println(x);// 60
			
		
//		int x= (10<10) ? 10 : (10>30) ? 20 : (10<=5) ? 30 : (10>=60)? 40 : (10!=10) ? 50 :(97.0==97) ?  60  :70;
//		System.out.println(x);// 60
		
//		int x= (10<10) ? 10 : (10>30) ? 20 : (10<=5) ? 30 : (10>=60)? 40 : (10!=10) ? 50 :(97.1==97) ?  60  :70;
//		System.out.println(x);// 70
		
		
		
//		System.out.println(10!=10);//falase
		
		
//		a++, ++a -- unary operator because only one operand is there i.e "a"
//		a+b -- binary operator because two  operand is there i.e "a" and "b"
//		(c)?b:d; ternary operator because three  operand is there i.e "a" , "b" and "c"
		
//		c,b,d are 3 operand
		
//		if(true&&false) {
//			System.out.println("Hii");
//		}
//		else
//		{
//			System.out.println("Hello");
//		}
//		// hello
		
//		if(10>20 && 30<40) {
//			System.out.println("Hii");
//		}else {
//			System.out.println("Hello");
//		}// Hello
		
		
//		if(true && true && true) {
//			System.out.println("Hello");
//		}else
//		{
//			System.out.println("Hello");
//		}// Hello
//		
//		if(true & true & true) {
//			System.out.println("Hello");
//		}else
//		{
//			System.out.println("Hello");
//		}// Hello
		
//		if(10<20 && 30<60 && 40<80 && 50<90 && 60<90) {
//			System.out.println("Hello");
//		}else {
//			System.out.println("Hii");
//		}// Hello
		
//		12.new operators  -- theory only
//		we can use this new operator to create object of class
//		eg:- Test t = new Test();
//		After creating an object constructor will be executed to perform
//		initialization of object not for creation of object
		
//		
//		basically after creation of test class object by using new keyword constructor immideately execute (automatically) and perform initialization of created object
//		so, The  role of constructor is to perform initialization of object not creation of object.
		
		
		
//		13.[] operators -- theory only
		
//		we  can use this operator to declare and create arrays only
//		eg:- 
//		int[] x = new int[10];
//		In general other than arrays we are not going to use this operator anywhere else
		
//		int[] x = new int[10];
		
//		Lecture 22: //		
//		
//		14.operator precedence
		
//		Java operator precedence chart
		
//		1. unary operator
//		[],x++,x--
//		++x,--x,~,|
//		new, <type>
		
//		2.Arithmetic Operator
//		*,/,%
//		+,-
		
//		3.Shift operator
//		>>,>>>,<<
		
//		4.Comparision operator
//		<,<=,>,>=,instanceof
		
//		5.equality operator:
//		==, !=
		
//		6. Bitwise operator
//		&,^,|
		
//		7.Short Circuit operator
//		&&, ||
		
//		8.conditional operator
//		? : 
		
//		9.Assignment operator
//		=, +=, -=, *=     .args.clone(). all  11 CAO
		
//		15.Evaluation order of operands
		
//		If we apply any operator  on operand all operand will evaluated from left to right
		
//		System.out.println(m1(1)+m1(2)*m1(3)/m1(4)+m1(5)*m1(6)); // 32
//		 1+2*3/4+5*6
//		 1+6/4+5*6
//		 1+1+30
//		 2+30
//		 32
		
		System.out.println(m1(1)+m1(2)*m1(3)/m1(4)+m1(5)*m1(6));
		
//		System.out.println(m1(1)+m1(2)*m1(3)/m1(4)+m1(5)*m1(6)*m1(7)/m1(8)+m1(9)-m1(10));// 27
//	    1+2*3/4+5*6*7/8+9-10
//		1+6/4+5*6*7/8+9-10
//		1+1+5*6*7/8+9-10
//		1+1+30*7/8+9-10
//		1+1+210/8+9-10
//		1+1+25+9-10
		2+25
		
//		If multiple operator has same precedence then it execute from left to right
//		and right to left accrdng to associativity.
		
//		For more detail : See Java operator precedence table
		
//		Lecture 23 : 
//		16.new vs newInstance()
//		1.new : - We can use this new operator to create an object , if we know classname at the beggining
//		eg:- 
//		Test t = new Test();
//		Student S = new Student();
//		Customer C = new Customer();
		
//		2. newInstance():- is a method in Class.class we can use newInstance method to create object, 
//		if we don't know class name at begining and it is available dynamically at runtime from
//		CLA,file,database.
//		eg: above
//		17.instanceOf Vs isInstance()
//		18.ClassNotFoundException Vs NoClassDefFoundError
//		both above 17 & 18 point are theory based and interview question only 
		
		
		
		


	}
//	public static int m1(int i) {
//	System.out.println(i);// 1,2,3,4,5,6
//	System.out.println(i);//1,2,3,4,5,6.7,8,9,10
//	return i;
//}
	
	public static int m1(int i) {
		System.out.println(i);
		return i;
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2024-01-01 23:28:53.760
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2024-01-01 23:28:53.762
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2024-01-01 23:29:10.478
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.util.ArrayList; 
	
public class OperatorsAndAssingments_Practice {
	//class Customer{
//	
//}
//class Test{
//	public static void main(String[] args)throws Exception {
//		Object O = Class.forName(args[0]).newInstance();
//		System.out.println("Object created for :"+O.getClass().getName());
////		System.out.println("Hello");
//- Other rest thing are thoery based and need setting for runnig in run time nad compile time seperately
//	}
//}
	public static void main(String[] args) {
//		Types of operators:-
//		1.Increment and decrement operators
//		2.Arithmetic operators
//		3.String concatenation operators
//		4.Relational operators
//		5.Equality operators
//		6.instanceOf operators
//		7.bitwise operators
//		8.short circuit operators
//		9.type cast operators
//		10.Assignment operators
//		11.conditional operators
//		12.new operators
//		13.[] operators
//		14.operator precedence
//		15.Evaluation order of operands
//		16.new vs newInstance()
//		17.instanceOf Vs isInstance()
//		18.ClassNotFoundException Vs NoClassDefFoundError

//		1. Increment & Decrement operators:-
//		Increment - Pre-Increment , y=++x;
//		Increment - Post-Increment, y=x++;
		
//		Decrement - Pre-Decrement , y=--x;
//		Decrement - Post-Decrement, y=x--;
		
//		int x= 10;
//		x++;
//		System.out.println(x);// 11
		
//		Pre Increment
//		int x= 10;
//		int y= ++x;// pre incr -- here y value = 11
//		System.out.println(x);// 11
//		System.out.println(y);// 11
		
//		Post Increment
//		int x= 10;
//		int y= x++;
//		System.out.println(y);// 10
//		System.out.println(x);// 11
//		
//		int x= 10;
//		int y= x+1;
//		System.out.println(x);// 10
//		System.out.println(y);// 11
		
//		Pre Decrement
//		int x= 10;
//		int y= --x;
//		System.out.println(y);// 9
//		System.out.println(x);// 9
		
//		Post Decrement
//		int x= 10;
//		int y= x--;
//		System.out.println(y);// 10
//		System.out.println(x);// 9
		
//		int x= 10;
//		int y= ++10;// Invalid argument to operation ++/--
//		System.out.println(x);
////		System.out.println(y);
//		int z = 10++;// Invalid argument to operation ++/--
//		System.out.println(z);
		
		
//		int x= 10;
//		int y= ++ (++x);// Invalid argument to operation ++/--
//		System.out.println(y);
		
//		final int x = 10;
//		x++;// The final local variable x cannot be assigned. 
////		It must be blank and not using a compound assignment
//		System.out.println(x);
		
		
//		final int x = 10;
//		x++;
//		System.out.println(x);// The final local variable x cannot be assigned. It must be blank and not using a compound assignment
		
//		int x = 10;
//		x++;
//		System.out.println(x);
		
//		int x= 10;
//		int y= x++;
//		int z = x;
//		z++;
//		
//		System.out.println(y);// 10
//		System.out.println(x);// 11
//		System.out.println(z);// 12
		
//		int x = 10;
//		int y = ++x;
//		int z= y;
//		System.out.println(z);// 11
//		z++;
//		System.out.println(y);// 11
//		System.out.println(x);// 11
//		System.out.println(z);// 12
	
//		int x= 10;
//		x++;
//		System.out.println(x);// 11
		
//		char ch = 'a';
//		ch++;
//		System.out.println(ch);// b
		
//		char ch = 'a';
//		ch++;
//		System.out.println(ch);// b
		
//		double d = 10.5;
//		d++;
//		System.out.println(d);// 11.5
		
//		double d = 10.5;
//		++d;
//		System.out.println(d);// 11.5
		
//		boolean b = true;
//		b++;// Type mismatch: cannot convert from boolean to int
//		System.out.println(b);
		
//		char ch = 'a';
//		char y = ch++;
//		System.out.println(ch);//b
//		System.out.println(y);//a
		
		
		
		
		
//		Diff Btwen b++ and b=b+1
		
//		byte b = 10;
//		byte a= 10;
//		byte c= a+b;// max(int,type of a, type of b)--> max(int,byte,byte)
//		System.out.println(c);//Type mismatch: cannot convert from int to byte
		
//		byte a = 10;
//		byte b = -1;
//		byte c= (byte)(a+b);
//		System.out.println(c);//9
		
		
//		byte b= 10;
//		byte a = 10;
//		byte c = a+b;// Type mismatch: cannot convert from int to byte
//		System.out.println(b);
		
//		int b = 10;
//		int a= 10;
//		int c = a+b; // max(int,type of a, type of b)--> max(int,int,int)
//		System.out.println(c);// 20
		
//		short a = 10;
//		short b = 10;
//		short c = a+b;
//		System.out.println(c);// Type mismatch: cannot convert from int to short
		
//		short a = 10;
//		short b = 10;
//		short c = (short)(a+b);
//		System.out.println(c);// 20
		
//		char ch = 'a';
//		char ch1 = 'b';
//		char chs  = ch + ch1;
//		System.out.println(chs);// Type mismatch: cannot convert from int to char
		
//		char ch = 'a';
//		char ch1 = 'b';
//		char chs  = (char)(ch + ch1);
//		System.out.println(chs);//Ã
		
//		char ch2 = 'Ã';
//		int in = ch2+0;
//		System.out.println(in);
		
		
//		char ch = 'a';
//		char ch1 = 'b';
//		int x = ch;
//		int y= ch1;
//		System.out.println(x);//97
//		System.out.println(y);//98
		
//		char x = 'a';
//		char y= 'b';
//		long l = x+y;
//		System.out.println(l);// 197
		
//		char x= 'a';
//		char y='b';
//		float f= x+y;
//		System.out.println(f);// 195.0
		
//		char x= 'a';
//		char y='b';
//		double d= x+y;
//		System.out.println(d);// 195.0
		
//		char ch = 'a';
//		double d = 10.5d;
//		double sum = ch +d;
//		System.out.println(sum);// 107.5
		
//		char ch = 'a';
//		double d = 10.5d;
//		int sum = (int)(ch +d);
//		System.out.println(sum);// 107
		
		
		
		
		
		
//		byte b= 10;
//		byte a = 10;
//		byte c = (byte)(a+b);// Type mismatch: cannot convert from int to byte
//		System.out.println(c);// 20
		
//		byte b= 10;
//		byte a = 20;
//		byte c = a + b;
//		System.out.println(c);// Type mismatch: cannot convert from int to byte
//		byte b = 10;
//		b= b+1;// Type mismatch: cannot convert from int to byte
//		System.out.println(b);
		
//		byte b= 10;
//		byte a = 20;
//		byte c = (byte)(a + b);
//		System.out.println(c);
		
//		byte b = 10;
//		b= (byte)(b+1);
//		System.out.println(b);// 11
		
//		byte b = 10;
//		b= (byte)(b+1+b);
//		System.out.println(b);// 21
		
//		byte b = 10;
//		b= (byte)(b+1+b-b+10-12);
//		System.out.println(b);// 9
		
//		byte b = 10;
//		b= (byte)(b+1);
//		System.out.println(b);// 11
		
//		byte b =20;
//		b= b+1;
//		System.out.println(b);
		
//		byte c = 20;
//		c= c++;
//		System.out.println(c);//20
		
		
//		int a = 10;
//		int c = 10;
//		byte z = (byte)(a+c);
//		System.out.println(z);
		
		
		
//		int x= 10;
//		int y = ++ (++x);// Invalid argument to operation ++/--
//		System.out.println(y);
		
//		int x= 10;
//		int y= ++ (++x);
//		System.out.println(y);// Invalid argument to operation ++/--
		
		
		
		
		
//		byte c = 20;
//		byte z = c++;
//		System.out.println(z);//20
		
//		byte b = 10;
//		b++;// (byte)b+1
//		System.out.println(b);// 11
		
//		byte b = 10;
//		b++;
//		System.out.println(b);//11
		
		
		
		
//		2. Arithematic Operator - (+,-,*,/,%)
		
//		byte b = 10;
//		byte c = 19;
//		byte sum = (byte)(b+c) ;
//		System.out.println(sum);// 29
		
		
//		byte b = 10;
//		short s = 19;
//		short sum = (short)(b+s);
//		System.out.println(sum);// 29
		
//		short s1 = 10;
//		short s2= 18;
//		short sum = (short)(s1+s2);
//		System.out.println(sum);// 28
		
//		byte b = 10;
//		long l = 19;
//		long sum = b+l;
//		System.out.println(sum);// 29  -- int to long conversion is possible 
		
//		long l = 10;
//		double d = 10.4;
//		double sum = l+d;
//		System.out.println(sum);// 20.4 -- int to double is possible and long is max among
		
		
//		float f = 10.4f;
//		long l = 10;
//		long sum = f+l;// Type mismatch: cannot convert from float to long
//		long sum = (long)(f+l);// 20-- ans in long
//		float sum = l+f;// 20.4
//		System.out.println(sum);
		
//		char ch = 'A';
//		char ch1 = 'B';
//		char sum = ch+ch1;// Type mismatch: cannot convert from int to char
//		int sum = ch+ch1;
//		System.out.println(sum);// 131
		
//		char ch = 'A';
//		double d = 10.5;
//		int sum = ch+d;// Type mismatch: cannot convert from double to int
//		char sum1 = ch+d;// Type mismatch: cannot convert from double to char
//		double sum = ch+d;// 75.5
//		System.out.println(sum);

//		System.out.println('a'+'b');//195
//		System.out.println('a'+10.5);// 107.5
//		System.out.println('a'+0.89);// 97.89
		
//		System.out.println(10/0);// java.lang.ArithmeticException: / by zero
		
//		System.out.println(10/0.0);// Infinity
//		System.out.println(-10/0.0);// -Infinity
		
//		System.out.println(10/0.0f);// Infinity
//		System.out.println(-10/0.0f);// -Infinity
		
//		System.out.println(10/0);// / by zero
		
//		System.out.println(10/0.0);// Infinity
//		System.out.println(10.0/0);// Infinity
//		System.out.println(-10.0/0);// -Infinity
		
		
		
//		 NaN- Not a Number
		
//		System.out.println(0/0);//  java.lang.ArithmeticException: / by zero
//		System.out.println(0/29);//0
		
//		System.out.println(0/0.0f);// NaN
//		System.out.println(-0/0.0f);// NaN
		
//		System.out.println(0/0.0);// NaN
//		System.out.println(-0/0.0);// NaN
	
//		System.out.println(0/0);//java.lang.ArithmeticException: / by zero
		
//		System.out.println(0.0/0);// NaN
//		
//		System.out.println(-0.0/0);// NaN
		
//		Summary
		
//		System.out.println(10/0); / by zero
//		System.out.println(10/0.0);// Infinity
//		System.out.println(0/0);// java.lang.ArithmeticException: / by zero
//		System.out.println(0.0/0);// NaN
		
//		System.out.println(10<Float.NaN);// false
//		System.out.println(10<=Float.NaN);// false
//		System.out.println(10>Float.NaN);// false
//		System.out.println(10>=Float.NaN);// false
//		System.out.println(10==Float.NaN);// false
//		System.out.println(Float.NaN == Float.NaN);// false
//		System.out.println(10 != Float.NaN);// true
//		System.out.println(Float.NaN != Float.NaN);// true
		
		// need to study further on NaN 
		
		
		
//		2. String Concatenation operator:(+) lecture 18
		
//		String a = "Fahad";
//		int b=10,c=20,d=30;
//		System.out.println(a+b+c+d);// Fahad102030
//		System.out.println(b+c+d+a);// 60Fahad
//		System.out.println(b+c+a+d);// 30Fahad30
//		System.out.println(b+a+c+d);// 10Fahad2030
		
//		System.out.println(a=a+b+c);//Fahad1020
//		System.out.println(a=b+c+d);// Type mismatch: cannot convert from int to String
//		System.out.println(b=a+c+d);// Type mismatch: cannot convert from String to int
//		System.out.println(b=b+c+d);// 60
		
//		4. relational Operator (<,<=,>,>=)
//		System.out.println(10<20);// true
//		System.out.println('a'<20);//false
//		System.out.println('a'<97.6);// true
//		System.out.println('a'<'A');// false
//		System.out.println(true>false);// The operator > is undefined for the argument type(s) boolean, boolean
		
//		System.out.println("fahad102">"fahad");//The operator > is undefined for the argument type(s) java.lang.String, java.lang.String
		
//		System.out.println(10<20<30);// The operator < is undefined for the argument type(s) boolean, int
		
//		5. Equality operator (==, !=)
		
		
	
		
		
//		--------Revision Practice -----------------------------------------------------------------------------
		
		
//		int x = 10;
//		int y=++x; // Pre-Increment
//		int z =x++; // 11 // Post-Increment
//		System.out.println(y); // 11 - OP
//		System.out.println(z); // 11
//		int m =x++; // 11
//		System.out.println(m); // 11
//		
//		int x= 10;
//		int y = ++x;
//		System.out.println(y);
//		int z = x++;
//		System.out.println(z);
//		int m = x++;
//		System.out.println(m);
		
		
		
//		int x=20;
//		int y= ++x; // Isi line me value incr ho gayi //Pre-Increment
//		System.out.println(y); // 21
//		System.out.println(x); // 21
//		
//		int x= 30;
//		int y= x++;
//		int z= ++x;
//		System.out.println(y); // 30
//		System.out.println(x); // 32
		
		
//		int x= 30;
//		int y= x++; // Post-Increment
//		System.out.println(y); // 30 Post-Increment
//		System.out.println(x); // 31 Post-Increment
//		int x= 90;
//		int y= x++;
//		System.out.println(x);// 91
//		int y= ++x; //91
//		System.out.println(y);// 90
		
		
//		int y=20;
//		int x= --y; //Pre-Decrement
//		System.out.println(x); // 19 Pre-Decrement 
//		System.out.println(y); //19  Pre-Decrement
		
//		int z= 20;
//		int x= z--; // Post-Decrement
//		System.out.println(x); // 20 Post-Decrement
//		System.out.println(z); // 19 Post-Decrement
		
//		int x= 10;
//		int y = x++;
//		System.out.println(y); // 10
//		System.out.println(x);// 11
//		int z= --x;
//		System.out.println(z); // 10
		
//		int x= 10;
//		int y= --x;
//		int z = x--;
//		System.out.println(y);
//		System.out.println(z);
//		System.out.println(x);
		
//		We cant apply incremnt and decrement operators on constant values.
//		int x = 10;
//		int y = ++10;
//		System.out.println(y);// Unresolved compilation problem: 
//		int x= 10;
//		int y= 10++:
//		System.out.println(y);
		//Invalid argument to operation ++/--
//		Nesting of INC/DEC operators is not allowed
		
//		int x= 10;
//		int y= ++(++x);
//		System.out.println(y); // Unresolved compilation problem: 
		//Invalid argument to operation ++/--
		
//		int x= 10;
//  	int y= ++(x);
//		int z= ++(++x); // neasting of increment and decrement operators is not allowed.
//		System.out.println(z);
//		++x means value not a variable.. here we required variable not a valuex.
		
		
//		For FINAL variables we cant apply incr/decr operators.
//		final int x = 10;
//		x++;// Unresolved compilation problem: 
//		int y= x++;// Unresolved compilation problem: 
//		System.out.println(y);// Unresolved compilation problem: 
		
//		final int x= 10;
//		int y = x++;
//		System.out.println(y);
		
		//The final local variable x cannot be assigned.
//		It must be blank and not using a compound assignment
		
//		final int x= 10;
//		x=11;
//		System.out.println(x);
		
		
		
//		final int x =10;
//		x=11;// Unresolved compilation problem: 
//		System.out.println(x);// The final local variable x cannot be assigned.
//		It must be blank and not using a compound assignment
		
		
//		int x = 10;
//		x++;
//		int y=x++;//10
//		System.out.println(y);// 11
//		System.out.println(x);// 12
		
		
		
		
//		int x = 10;
//		x++;
//		System.out.println(x);// 11
//		int y=x++;
//		System.out.println(y);// 11
//		System.out.println(x);// 12
//		System.out.println(y);// 11 // first assigned then increment.
//		
//		final int x= 10;
//		int y= x++;
//		System.out.println(y);
		
		
//		char ch = 'a';
//		ch++;
//		int y= ch;
//		System.out.println(ch); // b
//		System.out.println(y); //98
		
//		char ch = 'a';// a=97
//		ch++;
//		int y=ch;
//		System.out.println(ch);// b  becz value of a is 97 so after increment value becomes 98 which is value of b
//		System.out.println(y);// 98
		
//		double d= 10.9;
//		d++;
//		System.out.println(d);// 11.9
		
//		double d = 10.5;
//		d++;
//		System.out.println(d);// 11.5
		
//		boolean b = true;
//		b++;
//		System.out.println(b);// Type mismatch: cannot convert from boolean to int
		
//		boolean b = false;
//		b++;// b+1-- (false+1)  Type mismatch: cannot convert from boolean to int
//		System.out.println(b);
		
//		boolean b = false;
//		System.out.println(b);
		
		
		
//		operator ++ can not applied to boolean
//		?We can apply inc/decr operators for every primitive data type only except to boolean
//		
		//Date&Time=04:03PM,Wednesday,02/08/2023 START
//		
//		5. Diff btwn B++ & b=b+1 
		
//		If we applied any arithemetic operators between two variable a and b then
		//the result type is always	max of (int,type of a, type of b)
		
//		byte a = 10;
//		byte b = 20;
//		byte c = a+b;
//		System.out.println(c);// Type mismatch: cannot convert from int to byte
//		we can solve/handle it by usinf type casting
//		byte c = (byte)(a+b);
//		System.out.println(c);// 30
		
//		byte a = 10;
//		byte b = 20;
//		byte c = a+ b;// Type mismatch: cannot convert from int to byte
//		byte c= (byte) (a+b);
//		System.out.println(c);// 30
		
		
//		byte b = 10;
//		b= b+1;// Type mismatch: cannot convert from int to byte
//		System.out.println(b);//Type mismatch: cannot convert from int to byte
		
//		byte b =10;
//		b= b+1;
//		System.out.println(b);// Type mismatch: cannot convert from int to byte
		
//		byte b = 10;
//		b=(byte)(b+1);// using TypeCasting
//		System.out.println(b);// 11
		
//		byte b = 10;
//		b=(byte)(b+1);
//		System.out.println(b);// 11
		
//		byte b = 10;
//		b++;
//		System.out.println(b);//11

//		byte b = 10;
//		b++;// internal typecasting happen by default
//		System.out.println(b);// 11
//		NOTE:- In case of INcr/Decr operator internal TypeCasting perform automatically
//		
//		byte b = 10;
//		byte c = 20;
//		byte d =(byte) (b+c);
//		System.out.println(d);// 30
		
		
//		2.Arithmetic Opeartors:-(+,-,/,*,%)
//		If we apply any arithmetic opearators between a&b the result type is always
//		max(int,type of a , type of b)
//		
//		Fig: Typecasting flow
//		byte--->Short---->
//						----->int-->long-->		float-->double
//				char---->
		
//		byte + byte= int
//		byte + short= int
//		short + short=int
//		byte + long=long
//		long + double=double
//		float + long=float
//		char + char=int
//		char + double=double
		//Date&Time=04:23PM,Wednesday,02/08/2023 END
		
		//Date&Time=05:45PM,Wednesday,02/08/2023 START
//		System.out.println('a'+0.89);// 97.89-->a=97 (ASCII Value) -->97+0.89=97.89 double// char + double=double
//		byte b = 6;
//		byte c = 6;
//		System.out.println(b+c);// 12 jo ki int hai= byte + byte= int
//		System.out.println(32767+32767);// 65534 is int value short + short=int
//		System.out.println(127+32767);// 32894     byte + short= int
//		System.out.println(127+23717372);// 23717499 byte + long=long
//		System.out.println(1234531+10.3333);//1234541.3333 //long + double=double
//		System.out.println(212.332+932049832);// 9.32050044332E8 // float + long=float
//		System.out.println('a'+'a');// 194 char + char=int
//		System.out.println('a'+765.27);// 862.27  char + double=double
		
//		Infinity:-
//		In integral arithmetic(byte,short,int ,long) there is no way to represent infinity if infinity is a result then we will get AE: in integral arithmetic
//		
//		System.out.println(10/0);// Exception in thread "main" java.lang.ArithmeticException: / by zero
//		
//		System.out.println(10/0);/ by zero
	
//		But in floating point arithmetic (float & double) there is a way to represent infinity
//		for this float & double classes conatins the following two constatnt.
//		POSITIVE_INFINITY
//		NEGATIVE_iNFINITY
//		Hence even though result is infinity we wont get nay arithmetic exception in floating point arithmetic
//		
//		eg:-
//		System.out.println(10/0.0);// Infinity 10/float/double
//		System.out.println(10.0/0);// Infinity float/double/0
		
//		System.out.println(10/0.0);
//		System.out.println(10.0/0.0);
//		System.out.println(10/-0.0);
//		System.out.println(-10/0.0);
		
//		NaN:-(Not a number)
//		In integral arithmetic(byte,short,int ,long) there is no way to represent undefined result 
//		if undefined is a result then we will get AE: in integral arithmetic
//		Exception in thread "main" java.lang.ArithmeticException: / by zero
//		
//		System.out.println(0/0);// Exception in thread "main" java.lang.ArithmeticException: / by zero
//		
//		System.out.println(0/0);// / by zero
		
//		But in floating point arithmetic (float & double) there is a way to represent undefined result
//		for this float & double classes contains NaN constant.
//		Hence if the result is undefined we won't get any AE. in floating point arithmetic
//		
//		System.out.println(0.0/0);// NaN
//		System.out.println(-0/0.0); // NaN
//		System.out.println(10/0);//  java.lang.ArithmeticException: / by zero
//		System.out.println(-10/0);// java.lang.ArithmeticException: / by zero
//		System.out.println(10/-0);// java.lang.ArithmeticException: / by zero
//		System.out.println(10.0/0);// Infinity
//		System.out.println(10.0/-0);// Infinity
//		System.out.println(-10.0/-0);// -Infinity
//		System.out.println(-10.0/0);// -Infinity
//		System.out.println(10.0/-0.0);// -Infinity
//		System.out.println(-10.0/-0.0); // Infinity
//		System.out.println(0.0/-0);// NaN
//		System.out.println(-0.0/0);// NaN
//		System.out.println(-0.0/-0);// NaN
//		System.out.println(-1.0/-0);// -Infinity
		
//		for any x value including NaN the following expression return false
//		int x =0;
//		System.out.println(x<NaN); // NaN cannot be resolved to a variable
//		System.out.println(x<=NaN); // NaN cannot be resolved to a variable
//		System.out.println(x>NaN); // NaN cannot be resolved to a variable
//		System.out.println(x>=NaN);  // NaN cannot be resolved to a variable
//		System.out.println(x==NaN);// NaN cannot be resolved to a variable
		
//		for any x value including NaN the following expression return true
//		System.out.println(x!=NaN);// x cannot be resolved to a variable
		//NaN cannot be resolved to a variable
		
//		System.out.println(10<float.NaN); // Syntax error on token "float", invalid Expression
		
//		System.out.println(10<Float.NaN); // false
//		System.out.println(10<=Float.NaN);// false
//		System.out.println(10>Float.NaN);// false
//		System.out.println(10>=Float.NaN);// false
//		System.out.println(10==Float.NaN);// false
//		System.out.println(Float.NaN==Float.NaN);// false
//		System.out.println(10!=Float.NaN);// true
//		System.out.println(Float.NaN!=Float.NaN);// true
		
//		System.out.println(10<Float.NaN);// false
		
		
//		3.String concatenation operators
		
//		The only overloaded operator in java is (+) operator. 
//		Sometime it is said arithmetic addition operators 
//		and sometime it is said string concatenation opeartors.
		
		
//		Case1:-
//		If atleast one argument is String type  then
//		(+) operator access String concatenation operator.
		
//		Case2:-
//		If both argument is number type  then
//		(+) operator access arithmetic addition operator.
		
//		eg1:-
//		String a = "fahad";
//		int b=10, c=20, d=10;
//		System.out.println(a+b+c+d);// fahad102010 String concatenation operator
//		System.out.println(b+c+d+a);//40fahad this expression has same operator then order of precedence is from left to right so it start add value from left and concat with a. So it use both String concatenation operator and arithmetic addition operator 
//		System.out.println(b+c+a+d);// 30fahad10 this expression has same operator then order of precedence is from left to right so it start add value from left and concat with a. So it use both String concatenation operator and arithmetic addition operator 
//		System.out.println(b+a+c+d);// 10fahad2010
		
		
//		String a = "fahad";
//		int b=10,c=20,d=10;
//		System.out.println(a+b+c+d);//
//		System.out.println(b+c+d+a);
//		System.out.println(b+c+a+d);
//		System.out.println(b+a+c+d);
		
//		eg2:-
//		String a = "fahad";
//		int b=10, c=20, d=30;
//		a=b+c+d;
//		System.out.println(a); // Type mismatch: cannot convert from int to String
//		a=a+b+c;
//		System.out.println(a);// fahad1020
//		b=a+c+d;
//		System.out.println(b);// Type mismatch: cannot convert from String to int
//		b=b+c+d;
//		System.out.println(b);// 60
		
//		String a= "fahad";
//		int b=10, c=20, d=30;
////		a=b+c+d;
////		System.out.println(a);//Type mismatch: cannot convert from int to String
//		a=a+b+c;
////		System.out.println(a);
////		b=a+c+d;
//		b=b+c+d;
//		System.out.println(b);//60
		
		
		
//		4.Relational operators (<,<=,>,>=)
//		We can apply relational operator for every primitive type except boolean.
//		eg:-
//		System.out.println(10<20);// true
//		System.out.println('a'<20);// false
//		System.out.println('a'<97.6); //true
//		System.out.println('a'>'A'); // true
//		System.out.println(true>false);// The operator > is undefined for the argument type(s) boolean, boolean
//		
//		System.out.println(10<20);// true
//		System.out.println('a'<20);// false
//		System.out.println('a'<97.6);// true
//		System.out.println('a'>'A');// true
//		System.out.println(true<false);
		
//		System.out.println(10<=10);// true
//		System.out.println(10>=10);// true
		
		
		
//		 We cannot apply relational operators for object/Non-Primitive types
//		eg
//		System.out.println("durga123">"durga");// The operator > is undefined for the argument type(s) java.lang.String, java.lang.String
		
//		System.out.println("fahad">"fahad");
		
//		Nesting of relational operator is not allowed otherwise we will get CTE.
//		System.out.println(10<20<30);// The operator < is undefined for the argument type(s) boolean, int
		
//		System.out.println(10<20>30);// The operator > is undefined for the argument type(s) boolean, int
		
//		5.Equality operators (==, !=)  //Date&Time=3:43PM,Friday,02/10/2023
//		we can use == operator for address comparison
		
//		we can  apply equality operator for every primitive type including boolean also.
		
//		System.out.println(10==20);// false
//		System.out.println('a'=='b'); // false
//		System.out.println('a'==97.0); //true
//		System.out.println(false==false);// true
//		System.out.println(true==true);// true
//		System.out.println('a'=='A');// false
//		System.out.println('a'==97);// true
//		System.out.println(127==127);// true
//		System.out.println("fahad"=="fahad");// true
//		System.out.println("fah"=="abd");// false// yahan address compare nahi ho raha.
		
//		System.out.println(10==10);
//		System.out.println(10==20);
//		System.out.println('a'==97.0);
//		System.out.println('a'==97);
//		System.out.println('a'=='a');
//		System.out.println(false==false);// true
//		System.out.println('a'=='A');// false
//		System.out.println("fahad"=="fahad");// true
//		System.out.println("fah"=="abd");// false
		
//		we can apply equality operator for object type also
//		for object references r1 and r2 , r1== r2 iff both reference pointing to the same object
//		(reference comparison or address comparison)
		
//		Thread t1 = new Thread();
//		Thread t2 = new Thread();
//		Thread t3=t1;
//		System.out.println(t1==t3);// true
//		System.out.println(t1==t2);// false
		
//		Thread t1 = new Thread();
//		Thread t2 = new Thread();
//		Thread t3 = t1;
//		System.out.println(t1==t3);// true
//		System.out.println(t1==t2);// false
		
//		Thread t1 = new Thread();
//		Object O = new Object();
//		String S = new String("durga");
//		System.out.println(t1==O);// false
//		System.out.println(O==S);// false
//		System.out.println(S==t1);// Incompatible operand types String and Thread
		
//		Thread t1 = new Thread();
//		Object O = new Object();
//		String S = new String("durga");
//		System.out.println(t1==O);
//		System.out.println(O==S);
//		System.out.println(S==t1);// Incompatible operand types String and Thread
		
		
		
//		!= operators
//		we can use != operator for address comparison
//		System.out.println(10!=20);// true
//		System.out.println('a'!='b'); // true
//		System.out.println('a'!=97.0); //false
//		System.out.println(false!=false);// false
//		System.out.println(true!=true);// false
//		System.out.println('a'!='A');// true
//		System.out.println('a'!=97);// false
//		System.out.println(127!=127);// false
//		System.out.println("fahad"!="fahad");// false
//		System.out.println("fah"!="abd");// true
		
//		Thread t1 = new Thread();
//		Object O = new Object();
//		String S = new String("durga");
//		System.out.println(t1!=O);// true
//		System.out.println(O!=S);// true
//		System.out.println(S!=t1);// Incompatible operand types String and Thread
		
		// In general we can use == operator for address comparison 
//		and .equals() method for content comparison.
		
//		eg:
//		String S1 = new String("durga");
//		String S2= new String("durga");
//		System.out.println(S1==S2);//false // this compare address of variable/object
//		System.out.println(S1.equals(S2));// true// this method compare content of variable/objects
		
//		String S1 = new String("fahad");
//		String S2 = new String("fahad");
//		System.out.println(S1==S2);// false - address compare ho raha
//		System.out.println(S1.equals(S2)); // content/value compare ho rahi
//		
		
		
//		for any object reference r == null is always false
//		but null == null is always true
		
//		String s = new String("durga");
//		System.out.println(s==null);// flase
//		
//		String s = new String("durga");
//		System.out.println(s==null);// flase-- address compare and not matched so result is false.
		
//		String n = null;
//		System.out.println(n==null);// true.
//		System.out.println(null==null);// true
		
		
//		String n = null;
//		System.out.println(n==null);// true
//		System.out.println(null==null);// true
		
//		Lecture 19:- 
//		6.instanceOf operators
		//Date&Time=01:03PM,Friday,02/10/2023
//		We  can use instanceof operator to check whether given object is of particular type or not.
		
//		Syntax:-
//		r instance X -- r is object reference  X is class or interface name
//		Thread t = new Thread();
//		System.out.println(t instanceof Thread);// true
//		System.out.println(t instanceof Object);  // true
//		System.out.println(t instanceof Runnable);// true
		
//		Thread t = new Thread();
//		System.out.println(t instanceof Thread);
//		System.out.println(t instanceof Object);
//		System.out.println(t instanceof Runnable);
		
//		int[] l = new int[9];
//		System.out.println(l[0]);
//		Object o = new l.get[0];
		
	
//		 ArrayList<String> l = new ArrayList<String>(); 
//		// Create an ArrayList object
//		 Object O = new l.get[0];
		
//		for any class or interface X null instanceof X  is always false
//		System.out.println(null instanceof Thread); // false
//		System.out.println(null instanceof Runnable);// false
		
		
//		Thread t = new Thread();
//		System.out.println(t instanceof String);// Incompatible conditional operand types Thread and String
		
//		System.out.println(null instanceof Thread);// false
//		System.out.println(null instanceof Object);// false
//		System.out.println(null instanceof Runnable);// false
		
		
		
//		7.bitwise operators (&, |, ^)
//		 & -- And,  returns true iff both arguments are true
//		 | -- OR  returns true iff atleast one arguments are true
//		 cap symbol - ^ -- Exor, exclusive OR, X-OR, returns true iff both arguments are different
		
//		eg :- 
//		System.out.println(true & false);// false
//		System.out.println(true | false);// true
//		System.out.println(true ^ false); // true
		
//		System.out.println(true & false); // false
//		System.out.println(true | false);// true
//		System.out.println(true ^ false);// true
//		System.out.println(true ^ true);// false	
//		System.out.println(false ^ false);// false
		
		
//		we can apply these for integral types also
//		System.out.println(4&5);// 4
//		System.out.println(4|5);// 5
//		System.out.println(4^5);// 1
		
//		System.out.println( 4 & 5);
//		System.out.println(4 |5);
//		System.out.println(4 ^ 5);
		
//		System.out.println(100 & 101);// 100
//		System.out.println(11 & 11); // 11
		
//		System.out.println(~4);// -5
		
//		System.out.println(~5);// -6
		
//		System.out.println(~38); // -39
		
		
		 
		
//		bitwise complement operators (~):- tild symbol
//		We can apply for only integral type not for boolean type OW CTE.
//		System.out.println(~true);  // The operator ~ is undefined for the argument type(s) boolean
//		System.out.println(~4);// -5
		
//		Boolean complement operator : (!)--
//		We can apply this operator only for boolean type but not for integarl types.
//		System.out.println(!8);// The operator ! is undefined for the argument type(s) int
//		System.out.println(!false);// true
//		System.out.println(!true);// false
		
//		System.out.println(!10);
//		System.out.println(!true);
//		System.out.println(!false);
		
		
		
//		Note :-
//		&,|,^-- applicable for both boolean & integral
//		~ -- applicable for only integral but not for boolean
//		!  applicable only for boolean but not for integral
		
		
		
//		8.short circuit operators :(&&, ||)
		
//		These are exactly same as bitwise operators(&,|) except only following differences.
		
//				$,|		|		&&,||
//		-------------------------------				
//		1.Both argument	|	1. second argument		
//		should be evalu	|		evaluation is optional	
//		ated always.	|			
//		
//		2.relatively	|	2.relatively performance
//		performance 	|	high
////	low
//		
//		3.applicable	|	3. applicable only for boolean but not
//		for both boolean |	for integral
//		and integral types|
						
//		Note:- 1. x&&y == y will be evaluated iff x is true i.e. if x is false then y will not be evaluated.
		
//		2.  x||y - y will be evaluated iff x is false i.e. if x is true then y will not be evaluated.
			
//		eg_
//		int x= 10;
//		int y=15;
//		if(++x<10 & ++y>15) {
//			x++;
//		}else {
//			y++;
//		}
//		System.out.println(x+"..."+y);// 11...17
		
//		int x = 10;
//		int y=15;
//		if(++x<10 & ++y>15) {
//			x++;
//		}else {
//			y++;
//		}
//		System.out.println(x+"..."+y);
		
//		int x= 10;
//		int y=15;
//		if(++x<10 && ++y>15) {
//			x++;
//		}else {
//			y++;
//		}
//		System.out.println(x+"..."+y);// 11...16
		
//		int x= 10;
//		int y=15;
//		if(++x<10 | ++y>15) {
//			x++;
//		}else {
//			y++;
//		}
//		System.out.println(x+"..."+y);// 12...16
		
//		
//		int x= 10;
//		int y=15;
//		if(++x<10 || ++y>15) {
//			x++;
//		}else {
//			y++;
//		}
//		System.out.println(x+"..."+y);// 12...16
		
		
//		int x = 10;
//		int y=15;
//		if(++x<10 && ++y>15) {
//			x++;
//		}else {
//			y++;
//		}
//		System.out.println(x+"..."+y);// 11...16

//		int x = 10;
//		int y=15;
//		if(++x<10 | ++y>15) {
//			x++;
//		}else {
//			y++;
//		}
//		System.out.println(x+"..."+y);// 
		
//		int x = 10;
//		int y=15;
//		if(++x<10 || ++y>15) {
//			x++;
//		}else {
//			y++;
//		}
//		System.out.println(x+"..."+y);// 12...16
		
//		int x = 10;
//		int y=15;
//		if(++x<10 || ++y>15) {
//			x++;
//		}else {
//			y++;
//		}
//		System.out.println(x+"..."+y);
		
		
//		eg:- 2-
		
//		int x= 10;
//		if(++x<10 && (x/0>10)) {
//			System.out.println("Hello !!");
//		}else {
//			System.out.println("Hii !!");
//		}// o/p:- Hii
//		
//		int x= 10;
//		if(++x<10 & (x/0>10)) {
//			System.out.println("Hello !!");
//		}else {
//			System.out.println("Hii !!");
//		}// : / by zero
		
//		int x= 10;
//		if(++x<10 && (x/0>10)) {
//			System.out.println("Hello !!");
//		}else {
//			System.out.println("Hii !!");
//		}
		
//		int x= 10;
//		if(++x<10 & (x/0>10)) {
//			System.out.println("Hello !!");
//		}else {
//			System.out.println("Hii !!");
//		}
		
		
//		int x= 10;
//		if(++x<10 & (x/2>10)) {
//			System.out.println("Hello !!");
//		}else {
//			System.out.println("Hii !!");
//		}
		
//		int x= 10;
//		if(++x<10 | (x/0>10)) {
//			System.out.println("Hello !!");
//		}else {
//			System.out.println("Hii !!");
//		}
		
		
//		int x= 10;
//		if(++x<10 | (x/2>10)) {
//			System.out.println("Hello !!");
//		}else {
//			System.out.println("Hii !!");
//		}
		
//		int x= 10;
//		if(++x<10 || (x/0>10)) {
//			System.out.println("Hello !!");
//		}else {
//			System.out.println("Hii !!");
//		}
		
//		9.type cast operators
		
//		1. Implicit typecasting
//		2. Explicit Typecasting
		
//		1.Implicit:
//		Compiler is responsible to perform ITC.
//		whenever we are assinging smaller Datatype value to bigger datatype variable ITC will be performed.
//		It is also known as widening and upcasting
//		There is no loss of information in this typecasting
//		The following are various possible conversion where ITC will be performed.
		
//		Fig: Typecasting flow : ITC
//		byte--->Short---->
//						----->int-->long-->float-->double
//				char---->
		
//		eg:-
//		int x='a'; 
//		System.out.println(x);// 97// compiler convert char to int automatically by ITC
//		int x= 'a';
//		System.out.println(x);// 97
//		
//		double d = 10;
//		System.out.println(d);// 10.0
		
//		long l = 10;
//		System.out.println(l);// 10
		
		
//		float f = 10;
//		System.out.println(f);// 10.0
		
		
//		double d = 10;
//		System.out.println(d);// 10.0  compiler convert int to double automatically by ITC
		
//		double d = 'a';
//		System.out.println(d);// 97.0
		
//		long l = 'a';
//		System.out.println(l);// 97
		
//		float f = 'a';
//		System.out.println(f);// 97.0
		
		
		
//		2.Explicit Type casting:
//		Programmer is responsible to perform ETC.
//		whenever we are assinging bigger Datatype value to smaller datatype variable then  ETC will be required.
//		It is also known as narrowing and downcasting
//		There may a chance of loss of information in this typecasting
		
//		The following are various possibilities  where ETC will  required.
		
//		Fig: ETC
//		byte<---Short<----
//						<-----int<--long<--float<--double
//				char<----
		
//		L---R -- Implicit TypeCasting
//		R---L -- Explicit Typecasting
		
//		eg:-
//		int x = 130;
//		byte b = x;
//		System.out.println(b);// Type mismatch: cannot convert from int to byte
		
//		int x = 130;
//		byte b = (byte) x; //  cannot convert from int to byte
//		System.out.println(b);// -126
		
		
//		int x = 130;
//		byte b = (byte)x;
//		System.out.println(b);// -126
		
//		whenever we are assingnig bigger D.T value to smaller D.T variable by ETC The MSB will be lost
//		We have to consider only LSB
		
//		int x= 150;
//		short s = (short)x;
//		System.out.println(s);// 150
//		
//		int x = 150;
//		short s = (short)x;
//		System.out.println(s);// 150
		
//		byte  b = (byte)x;
//		System.out.println(b);// -106
		
//		int x = 150;
//		byte b= (byte)x;
//		System.out.println(b);// -106
		
//		int x = 509;
//		byte b = (byte)x;
//		System.out.println(b);// -3
		
//		int x = 509;
//		short s = (short)x;
//		System.out.println(s);// 509
		
		
		
		
		
//		Float to integral value -- digit after decimal point lost
//		double d = 130.456;
//		int x = (int)d;
//		System.out.println(x);// 130
//		byte b = (byte)d;
//		System.out.println(b);// -126
		
//		double d = 130.456;
//		int x = (int)d;
//		System.out.println(x);// 130
		
//		double d = 130.456;
//		byte b = (byte)d;
//		System.out.println(b);// -126
		
//		float f = 130.456f;
//		int x = (int)f;
//		System.out.println(x);// 130
		
		
//		Lecture 21: 10.Assignment operators : 
//		Three types
//		1.Simple assingment
//		2.chained 
//		3.compound
		
//		1.Simple:-   int x= 10;
//		int x = 10;
//		literal value 10 assigned to  var x
		
//		2.chained:-  
//		int a,b,c,d;
//		a=b=c=d=20;
//		System.out.println(a+".."+b+"..."+c+"..."+d);// 20..20...20...20
		
		
//		int a,b,c,d;
//		a=b=c=d=10;
//		System.out.println(a+".."+b+".."+c+".."+d);//10..10..10..10

//		We can't performed chain assingment directly at the time of declaration
//		eg:-
//		 int a =b=c=d=20;
//		 System.out.println(a+".."+b+"..."+c+"..."+d);// b cannot be resolved to a variable
//			c cannot be resolved to a variable
//			d cannot be resolved to a variable
//		 at OperatorsAndAssignment.main(OperatorsAndAssignment.java:555)
		
//		int b,c,d;
//		int a=b=c=d=20;
//		System.out.println(a+".."+b+"..."+c+"..."+d);// 20..20...20...20
//		int b,c,d;
//		int a=b=c=d=20;
//		System.out.println(a+".."+b+"..."+c+"..."+d);//20..20...20...20
		
//		3.Compound Assignment Operator:-
//		Sometime assignment operator mixed with some other operator then we called that operator is CAO.
		
//		int a= 20;
//		a+=30;// -- a=a+30
//		System.out.println(a);// 50
		
//		int a = 20;
//		a+=30;// -- a=a+30;
//		System.out.println(a);// 50

//		The following are all possible compound assingment operator in java
		
//		+=		&=		>>= right shift operator
//		-=		|=		>>>= unsigned right shift operator
//		*=		^=		<<= left shift operator
//		/=
//		%=   Total === 11
		
//		in case of CAO internal T.C will performed automatically
//		 byte b = 10;
//		 b=b+1;  // max(int,byte,int)
//		 System.out.println(b);// Type mismatch: cannot convert from int to byte
		 
//		byte b =10;
//		b=b+1;// cannot convert from int to byte
//		System.out.println(b);
//		
		
//		byte b = 10;
//		b++;
//		System.out.println(b);// 11

//		 byte b = 10;
//		 b++;
//		 System.out.println(b);// 11
		 
//		 byte b = 10;
//		 b+=1;  // += CAO internal TC is performed.
//		 System.out.println(b);//11
		
//		byte b =10;
//		b+=1; // b=b+1 
//		System.out.println(b);// 11

//		byte b = 127;
//		b+=1;
//		System.out.println(b);//-128
		
//		byte b =127;
//		b+=1;
//		System.out.println(b);// -128
		
//		byte b = 127;
//		b+=127;
//		System.out.println(b);//-2
		
//		byte b =127;
//		b+=129;
//		System.out.println(b);//0
		
//		byte b =127;
//		b+=130;
//		System.out.println(b);//1

//		byte b = 127;
//		b+=3;
//		System.out.println(b);//-126
		
//		int a,c;
//		int b=20; // simple
//		int d; // simple only declared
//		a=c=d=20; //chained 
//		a+= b-= c*= d/= 2; // compound
//		System.out.println(a+"..."+b+"..."+c+"..."+d);// -160...-180...200...10
		
//		int a,c;
//		int b=20;
//		int d;
//		a=c=d=20;//chained
//		a+= 10;
//		b-=5;
//		c*=4;
//		d/=7;
//		System.out.println(a+"..."+b+"..."+c+"..."+d);//30...15...80...2
		
//		int a=10;
//		a+=a+10;
//		System.out.println(a);//30
		
//		int a=10;
//		a+=a+=a+=a-+a-+30;
//		System.out.println(a);
		
//		int a=10;
//		a+=12+12;
//		System.out.println(a);//34

//		int a,b,c,d,e,f,g,h;
//		a=b=c=d=e=f=g=h=10;
//		a+=10;
//		b-=10;
//		c/=10;// return quotient
//		d*=10;
//		e%=10; // return reminder
//		
//		f&=10; // f&10==> 10&10 = Ans 10 - 1010&1010==1010=10
//		g|=10; // 
//		h^=10;// x-OR cap 
//		
//		System.out.println(a); // 20
//		System.out.println(b); // 0
//		System.out.println(c); // 1
//		System.out.println(d); // 100
//		System.out.println(e); /// 0
//		System.out.println(f); // 10
//		System.out.println(g);// 10
//		System.out.println(h); // 0
		
		
//		11.conditional operators: (? :) Ternary operator
//		The only possible ternary operator in java is conditional operator
//		Syntax : 
//		int  x= (10<20)? 30:40;
		
//		is same as in if else condition
//		if(10<20) {
//			System.out.println("30"); // 30
//		}else {
//			System.out.println("40");
//		}
//		System.out.println(x);// 30
//		
//		int x=  (10<20) ? 30 :40;
//		System.out.println(x);//30
		
//		int  x;
//		if(20<30) {
//			x=10;
//		}
//		else {
//			x=20;
//		}
//		System.out.println(x);// 10
		
		
//		neasting of conditional operator is also possible
		
//		 int x = (10>20)?30 :(40>50)?60:70;
//		 System.out.println(x);// 70
//		is same as 
//		if(10>20) {
//			System.out.println("30"); 
//		}else if(40>50) {
//			System.out.println("60");
//		}else {
//			System.out.println("70");// 70
//		}
		
		
//		int x =(10>20)?30 : (40>90)? 40 : 60;
//		System.out.println(x);// 60
		
//		int x= (10>=30)?30:40;
//		System.out.println(x);//40
		
		
//		int x= (10<10) ? 10 : (10>30) ? 20 : (10<=5) ? 30 : (10>=60)? 40 : (10==10) ? 50 :60;
//		System.out.println(x);// 50
		
		
//		int x= (10<10) ? 10 : (10>30) ? 20 : (10<=5) ? 30 : (10>=60)? 40 : (10==20) ? 50 :60;
//		System.out.println(x);// 60
			
		
//		int x= (10<10) ? 10 : (10>30) ? 20 : (10<=5) ? 30 : (10>=60)? 40 : (10!=10) ? 50 :(97.0==97) ?  60  :70;
//		System.out.println(x);// 60
		
//		int x= (10<10) ? 10 : (10>30) ? 20 : (10<=5) ? 30 : (10>=60)? 40 : (10!=10) ? 50 :(97.1==97) ?  60  :70;
//		System.out.println(x);// 70
		
		
		
//		System.out.println(10!=10);//falase
		
		
//		a++, ++a -- unary operator because only one operand is there i.e "a"
//		a+b -- binary operator because two  operand is there i.e "a" and "b"
//		(c)?b:d; ternary operator because three  operand is there i.e "a" , "b" and "c"
		
//		c,b,d are 3 operand
		
//		if(true&&false) {
//			System.out.println("Hii");
//		}
//		else
//		{
//			System.out.println("Hello");
//		}
//		// hello
		
//		if(10>20 && 30<40) {
//			System.out.println("Hii");
//		}else {
//			System.out.println("Hello");
//		}// Hello
		
		
//		if(true && true && true) {
//			System.out.println("Hello");
//		}else
//		{
//			System.out.println("Hello");
//		}// Hello
//		
//		if(true & true & true) {
//			System.out.println("Hello");
//		}else
//		{
//			System.out.println("Hello");
//		}// Hello
		
//		if(10<20 && 30<60 && 40<80 && 50<90 && 60<90) {
//			System.out.println("Hello");
//		}else {
//			System.out.println("Hii");
//		}// Hello
		
//		12.new operators  -- theory only
//		we can use this new operator to create object of class
//		eg:- Test t = new Test();
//		After creating an object constructor will be executed to perform
//		initialization of object not for creation of object
		
//		
//		basically after creation of test class object by using new keyword constructor immideately execute (automatically) and perform initialization of created object
//		so, The  role of constructor is to perform initialization of object not creation of object.
		
		
		
//		13.[] operators -- theory only
		
//		we  can use this operator to declare and create arrays only
//		eg:- 
//		int[] x = new int[10];
//		In general other than arrays we are not going to use this operator anywhere else
		
//		int[] x = new int[10];
		
//		Lecture 22: //		
//		
//		14.operator precedence
		
//		Java operator precedence chart
		
//		1. unary operator
//		[],x++,x--
//		++x,--x,~,|
//		new, <type>
		
//		2.Arithmetic Operator
//		*,/,%
//		+,-
		
//		3.Shift operator
//		>>,>>>,<<
		
//		4.Comparision operator
//		<,<=,>,>=,instanceof
		
//		5.equality operator:
//		==, !=
		
//		6. Bitwise operator
//		&,^,|
		
//		7.Short Circuit operator
//		&&, ||
		
//		8.conditional operator
//		? : 
		
//		9.Assignment operator
//		=, +=, -=, *=     .args.clone(). all  11 CAO
		
//		15.Evaluation order of operands
		
//		If we apply any operator  on operand all operand will evaluated from left to right
		
//		System.out.println(m1(1)+m1(2)*m1(3)/m1(4)+m1(5)*m1(6)); // 32
//		 1+2*3/4+5*6
//		 1+6/4+5*6
//		 1+1+30
//		 2+30
//		 32
		
		System.out.println(m1(1)+m1(2)*m1(3)/m1(4)+m1(5)*m1(6));
		
//		System.out.println(m1(1)+m1(2)*m1(3)/m1(4)+m1(5)*m1(6)*m1(7)/m1(8)+m1(9)-m1(10));// 27
//	    1+2*3/4+5*6*7/8+9-10
//		1+6/4+5*6*7/8+9-10
//		1+1+5*6*7/8+9-10
//		1+1+30*7/8+9-10
//		1+1+210/8+9-10
//		1+1+25+9-10
//		2+25+9-10
		27+9
		
//		If multiple operator has same precedence then it execute from left to right
//		and right to left accrdng to associativity.
		
//		For more detail : See Java operator precedence table
		
//		Lecture 23 : 
//		16.new vs newInstance()
//		1.new : - We can use this new operator to create an object , if we know classname at the beggining
//		eg:- 
//		Test t = new Test();
//		Student S = new Student();
//		Customer C = new Customer();
		
//		2. newInstance():- is a method in Class.class we can use newInstance method to create object, 
//		if we don't know class name at begining and it is available dynamically at runtime from
//		CLA,file,database.
//		eg: above
//		17.instanceOf Vs isInstance()
//		18.ClassNotFoundException Vs NoClassDefFoundError
//		both above 17 & 18 point are theory based and interview question only 
		
		
		
		


	}
//	public static int m1(int i) {
//	System.out.println(i);// 1,2,3,4,5,6
//	System.out.println(i);//1,2,3,4,5,6.7,8,9,10
//	return i;
//}
	
	public static int m1(int i) {
		System.out.println(i);
		return i;
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2024-01-01 23:29:10.481
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2024-01-01 23:29:10.482
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2024-01-01 23:29:38.200
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.util.ArrayList; 
	
public class OperatorsAndAssingments_Practice {
	//class Customer{
//	
//}
//class Test{
//	public static void main(String[] args)throws Exception {
//		Object O = Class.forName(args[0]).newInstance();
//		System.out.println("Object created for :"+O.getClass().getName());
////		System.out.println("Hello");
//- Other rest thing are thoery based and need setting for runnig in run time nad compile time seperately
//	}
//}
	public static void main(String[] args) {
//		Types of operators:-
//		1.Increment and decrement operators
//		2.Arithmetic operators
//		3.String concatenation operators
//		4.Relational operators
//		5.Equality operators
//		6.instanceOf operators
//		7.bitwise operators
//		8.short circuit operators
//		9.type cast operators
//		10.Assignment operators
//		11.conditional operators
//		12.new operators
//		13.[] operators
//		14.operator precedence
//		15.Evaluation order of operands
//		16.new vs newInstance()
//		17.instanceOf Vs isInstance()
//		18.ClassNotFoundException Vs NoClassDefFoundError

//		1. Increment & Decrement operators:-
//		Increment - Pre-Increment , y=++x;
//		Increment - Post-Increment, y=x++;
		
//		Decrement - Pre-Decrement , y=--x;
//		Decrement - Post-Decrement, y=x--;
		
//		int x= 10;
//		x++;
//		System.out.println(x);// 11
		
//		Pre Increment
//		int x= 10;
//		int y= ++x;// pre incr -- here y value = 11
//		System.out.println(x);// 11
//		System.out.println(y);// 11
		
//		Post Increment
//		int x= 10;
//		int y= x++;
//		System.out.println(y);// 10
//		System.out.println(x);// 11
//		
//		int x= 10;
//		int y= x+1;
//		System.out.println(x);// 10
//		System.out.println(y);// 11
		
//		Pre Decrement
//		int x= 10;
//		int y= --x;
//		System.out.println(y);// 9
//		System.out.println(x);// 9
		
//		Post Decrement
//		int x= 10;
//		int y= x--;
//		System.out.println(y);// 10
//		System.out.println(x);// 9
		
//		int x= 10;
//		int y= ++10;// Invalid argument to operation ++/--
//		System.out.println(x);
////		System.out.println(y);
//		int z = 10++;// Invalid argument to operation ++/--
//		System.out.println(z);
		
		
//		int x= 10;
//		int y= ++ (++x);// Invalid argument to operation ++/--
//		System.out.println(y);
		
//		final int x = 10;
//		x++;// The final local variable x cannot be assigned. 
////		It must be blank and not using a compound assignment
//		System.out.println(x);
		
		
//		final int x = 10;
//		x++;
//		System.out.println(x);// The final local variable x cannot be assigned. It must be blank and not using a compound assignment
		
//		int x = 10;
//		x++;
//		System.out.println(x);
		
//		int x= 10;
//		int y= x++;
//		int z = x;
//		z++;
//		
//		System.out.println(y);// 10
//		System.out.println(x);// 11
//		System.out.println(z);// 12
		
//		int x = 10;
//		int y = ++x;
//		int z= y;
//		System.out.println(z);// 11
//		z++;
//		System.out.println(y);// 11
//		System.out.println(x);// 11
//		System.out.println(z);// 12
	
//		int x= 10;
//		x++;
//		System.out.println(x);// 11
		
//		char ch = 'a';
//		ch++;
//		System.out.println(ch);// b
		
//		char ch = 'a';
//		ch++;
//		System.out.println(ch);// b
		
//		double d = 10.5;
//		d++;
//		System.out.println(d);// 11.5
		
//		double d = 10.5;
//		++d;
//		System.out.println(d);// 11.5
		
//		boolean b = true;
//		b++;// Type mismatch: cannot convert from boolean to int
//		System.out.println(b);
		
//		char ch = 'a';
//		char y = ch++;
//		System.out.println(ch);//b
//		System.out.println(y);//a
		
		
		
		
		
//		Diff Btwen b++ and b=b+1
		
//		byte b = 10;
//		byte a= 10;
//		byte c= a+b;// max(int,type of a, type of b)--> max(int,byte,byte)
//		System.out.println(c);//Type mismatch: cannot convert from int to byte
		
//		byte a = 10;
//		byte b = -1;
//		byte c= (byte)(a+b);
//		System.out.println(c);//9
		
		
//		byte b= 10;
//		byte a = 10;
//		byte c = a+b;// Type mismatch: cannot convert from int to byte
//		System.out.println(b);
		
//		int b = 10;
//		int a= 10;
//		int c = a+b; // max(int,type of a, type of b)--> max(int,int,int)
//		System.out.println(c);// 20
		
//		short a = 10;
//		short b = 10;
//		short c = a+b;
//		System.out.println(c);// Type mismatch: cannot convert from int to short
		
//		short a = 10;
//		short b = 10;
//		short c = (short)(a+b);
//		System.out.println(c);// 20
		
//		char ch = 'a';
//		char ch1 = 'b';
//		char chs  = ch + ch1;
//		System.out.println(chs);// Type mismatch: cannot convert from int to char
		
//		char ch = 'a';
//		char ch1 = 'b';
//		char chs  = (char)(ch + ch1);
//		System.out.println(chs);//Ã
		
//		char ch2 = 'Ã';
//		int in = ch2+0;
//		System.out.println(in);
		
		
//		char ch = 'a';
//		char ch1 = 'b';
//		int x = ch;
//		int y= ch1;
//		System.out.println(x);//97
//		System.out.println(y);//98
		
//		char x = 'a';
//		char y= 'b';
//		long l = x+y;
//		System.out.println(l);// 197
		
//		char x= 'a';
//		char y='b';
//		float f= x+y;
//		System.out.println(f);// 195.0
		
//		char x= 'a';
//		char y='b';
//		double d= x+y;
//		System.out.println(d);// 195.0
		
//		char ch = 'a';
//		double d = 10.5d;
//		double sum = ch +d;
//		System.out.println(sum);// 107.5
		
//		char ch = 'a';
//		double d = 10.5d;
//		int sum = (int)(ch +d);
//		System.out.println(sum);// 107
		
		
		
		
		
		
//		byte b= 10;
//		byte a = 10;
//		byte c = (byte)(a+b);// Type mismatch: cannot convert from int to byte
//		System.out.println(c);// 20
		
//		byte b= 10;
//		byte a = 20;
//		byte c = a + b;
//		System.out.println(c);// Type mismatch: cannot convert from int to byte
//		byte b = 10;
//		b= b+1;// Type mismatch: cannot convert from int to byte
//		System.out.println(b);
		
//		byte b= 10;
//		byte a = 20;
//		byte c = (byte)(a + b);
//		System.out.println(c);
		
//		byte b = 10;
//		b= (byte)(b+1);
//		System.out.println(b);// 11
		
//		byte b = 10;
//		b= (byte)(b+1+b);
//		System.out.println(b);// 21
		
//		byte b = 10;
//		b= (byte)(b+1+b-b+10-12);
//		System.out.println(b);// 9
		
//		byte b = 10;
//		b= (byte)(b+1);
//		System.out.println(b);// 11
		
//		byte b =20;
//		b= b+1;
//		System.out.println(b);
		
//		byte c = 20;
//		c= c++;
//		System.out.println(c);//20
		
		
//		int a = 10;
//		int c = 10;
//		byte z = (byte)(a+c);
//		System.out.println(z);
		
		
		
//		int x= 10;
//		int y = ++ (++x);// Invalid argument to operation ++/--
//		System.out.println(y);
		
//		int x= 10;
//		int y= ++ (++x);
//		System.out.println(y);// Invalid argument to operation ++/--
		
		
		
		
		
//		byte c = 20;
//		byte z = c++;
//		System.out.println(z);//20
		
//		byte b = 10;
//		b++;// (byte)b+1
//		System.out.println(b);// 11
		
//		byte b = 10;
//		b++;
//		System.out.println(b);//11
		
		
		
		
//		2. Arithematic Operator - (+,-,*,/,%)
		
//		byte b = 10;
//		byte c = 19;
//		byte sum = (byte)(b+c) ;
//		System.out.println(sum);// 29
		
		
//		byte b = 10;
//		short s = 19;
//		short sum = (short)(b+s);
//		System.out.println(sum);// 29
		
//		short s1 = 10;
//		short s2= 18;
//		short sum = (short)(s1+s2);
//		System.out.println(sum);// 28
		
//		byte b = 10;
//		long l = 19;
//		long sum = b+l;
//		System.out.println(sum);// 29  -- int to long conversion is possible 
		
//		long l = 10;
//		double d = 10.4;
//		double sum = l+d;
//		System.out.println(sum);// 20.4 -- int to double is possible and long is max among
		
		
//		float f = 10.4f;
//		long l = 10;
//		long sum = f+l;// Type mismatch: cannot convert from float to long
//		long sum = (long)(f+l);// 20-- ans in long
//		float sum = l+f;// 20.4
//		System.out.println(sum);
		
//		char ch = 'A';
//		char ch1 = 'B';
//		char sum = ch+ch1;// Type mismatch: cannot convert from int to char
//		int sum = ch+ch1;
//		System.out.println(sum);// 131
		
//		char ch = 'A';
//		double d = 10.5;
//		int sum = ch+d;// Type mismatch: cannot convert from double to int
//		char sum1 = ch+d;// Type mismatch: cannot convert from double to char
//		double sum = ch+d;// 75.5
//		System.out.println(sum);

//		System.out.println('a'+'b');//195
//		System.out.println('a'+10.5);// 107.5
//		System.out.println('a'+0.89);// 97.89
		
//		System.out.println(10/0);// java.lang.ArithmeticException: / by zero
		
//		System.out.println(10/0.0);// Infinity
//		System.out.println(-10/0.0);// -Infinity
		
//		System.out.println(10/0.0f);// Infinity
//		System.out.println(-10/0.0f);// -Infinity
		
//		System.out.println(10/0);// / by zero
		
//		System.out.println(10/0.0);// Infinity
//		System.out.println(10.0/0);// Infinity
//		System.out.println(-10.0/0);// -Infinity
		
		
		
//		 NaN- Not a Number
		
//		System.out.println(0/0);//  java.lang.ArithmeticException: / by zero
//		System.out.println(0/29);//0
		
//		System.out.println(0/0.0f);// NaN
//		System.out.println(-0/0.0f);// NaN
		
//		System.out.println(0/0.0);// NaN
//		System.out.println(-0/0.0);// NaN
	
//		System.out.println(0/0);//java.lang.ArithmeticException: / by zero
		
//		System.out.println(0.0/0);// NaN
//		
//		System.out.println(-0.0/0);// NaN
		
//		Summary
		
//		System.out.println(10/0); / by zero
//		System.out.println(10/0.0);// Infinity
//		System.out.println(0/0);// java.lang.ArithmeticException: / by zero
//		System.out.println(0.0/0);// NaN
		
//		System.out.println(10<Float.NaN);// false
//		System.out.println(10<=Float.NaN);// false
//		System.out.println(10>Float.NaN);// false
//		System.out.println(10>=Float.NaN);// false
//		System.out.println(10==Float.NaN);// false
//		System.out.println(Float.NaN == Float.NaN);// false
//		System.out.println(10 != Float.NaN);// true
//		System.out.println(Float.NaN != Float.NaN);// true
		
		// need to study further on NaN 
		
		
		
//		2. String Concatenation operator:(+) lecture 18
		
//		String a = "Fahad";
//		int b=10,c=20,d=30;
//		System.out.println(a+b+c+d);// Fahad102030
//		System.out.println(b+c+d+a);// 60Fahad
//		System.out.println(b+c+a+d);// 30Fahad30
//		System.out.println(b+a+c+d);// 10Fahad2030
		
//		System.out.println(a=a+b+c);//Fahad1020
//		System.out.println(a=b+c+d);// Type mismatch: cannot convert from int to String
//		System.out.println(b=a+c+d);// Type mismatch: cannot convert from String to int
//		System.out.println(b=b+c+d);// 60
		
//		4. relational Operator (<,<=,>,>=)
//		System.out.println(10<20);// true
//		System.out.println('a'<20);//false
//		System.out.println('a'<97.6);// true
//		System.out.println('a'<'A');// false
//		System.out.println(true>false);// The operator > is undefined for the argument type(s) boolean, boolean
		
//		System.out.println("fahad102">"fahad");//The operator > is undefined for the argument type(s) java.lang.String, java.lang.String
		
//		System.out.println(10<20<30);// The operator < is undefined for the argument type(s) boolean, int
		
//		5. Equality operator (==, !=)
		
		
	
		
		
//		--------Revision Practice -----------------------------------------------------------------------------
		
		
//		int x = 10;
//		int y=++x; // Pre-Increment
//		int z =x++; // 11 // Post-Increment
//		System.out.println(y); // 11 - OP
//		System.out.println(z); // 11
//		int m =x++; // 11
//		System.out.println(m); // 11
//		
//		int x= 10;
//		int y = ++x;
//		System.out.println(y);
//		int z = x++;
//		System.out.println(z);
//		int m = x++;
//		System.out.println(m);
		
		
		
//		int x=20;
//		int y= ++x; // Isi line me value incr ho gayi //Pre-Increment
//		System.out.println(y); // 21
//		System.out.println(x); // 21
//		
//		int x= 30;
//		int y= x++;
//		int z= ++x;
//		System.out.println(y); // 30
//		System.out.println(x); // 32
		
		
//		int x= 30;
//		int y= x++; // Post-Increment
//		System.out.println(y); // 30 Post-Increment
//		System.out.println(x); // 31 Post-Increment
//		int x= 90;
//		int y= x++;
//		System.out.println(x);// 91
//		int y= ++x; //91
//		System.out.println(y);// 90
		
		
//		int y=20;
//		int x= --y; //Pre-Decrement
//		System.out.println(x); // 19 Pre-Decrement 
//		System.out.println(y); //19  Pre-Decrement
		
//		int z= 20;
//		int x= z--; // Post-Decrement
//		System.out.println(x); // 20 Post-Decrement
//		System.out.println(z); // 19 Post-Decrement
		
//		int x= 10;
//		int y = x++;
//		System.out.println(y); // 10
//		System.out.println(x);// 11
//		int z= --x;
//		System.out.println(z); // 10
		
//		int x= 10;
//		int y= --x;
//		int z = x--;
//		System.out.println(y);
//		System.out.println(z);
//		System.out.println(x);
		
//		We cant apply incremnt and decrement operators on constant values.
//		int x = 10;
//		int y = ++10;
//		System.out.println(y);// Unresolved compilation problem: 
//		int x= 10;
//		int y= 10++:
//		System.out.println(y);
		//Invalid argument to operation ++/--
//		Nesting of INC/DEC operators is not allowed
		
//		int x= 10;
//		int y= ++(++x);
//		System.out.println(y); // Unresolved compilation problem: 
		//Invalid argument to operation ++/--
		
//		int x= 10;
//  	int y= ++(x);
//		int z= ++(++x); // neasting of increment and decrement operators is not allowed.
//		System.out.println(z);
//		++x means value not a variable.. here we required variable not a valuex.
		
		
//		For FINAL variables we cant apply incr/decr operators.
//		final int x = 10;
//		x++;// Unresolved compilation problem: 
//		int y= x++;// Unresolved compilation problem: 
//		System.out.println(y);// Unresolved compilation problem: 
		
//		final int x= 10;
//		int y = x++;
//		System.out.println(y);
		
		//The final local variable x cannot be assigned.
//		It must be blank and not using a compound assignment
		
//		final int x= 10;
//		x=11;
//		System.out.println(x);
		
		
		
//		final int x =10;
//		x=11;// Unresolved compilation problem: 
//		System.out.println(x);// The final local variable x cannot be assigned.
//		It must be blank and not using a compound assignment
		
		
//		int x = 10;
//		x++;
//		int y=x++;//10
//		System.out.println(y);// 11
//		System.out.println(x);// 12
		
		
		
		
//		int x = 10;
//		x++;
//		System.out.println(x);// 11
//		int y=x++;
//		System.out.println(y);// 11
//		System.out.println(x);// 12
//		System.out.println(y);// 11 // first assigned then increment.
//		
//		final int x= 10;
//		int y= x++;
//		System.out.println(y);
		
		
//		char ch = 'a';
//		ch++;
//		int y= ch;
//		System.out.println(ch); // b
//		System.out.println(y); //98
		
//		char ch = 'a';// a=97
//		ch++;
//		int y=ch;
//		System.out.println(ch);// b  becz value of a is 97 so after increment value becomes 98 which is value of b
//		System.out.println(y);// 98
		
//		double d= 10.9;
//		d++;
//		System.out.println(d);// 11.9
		
//		double d = 10.5;
//		d++;
//		System.out.println(d);// 11.5
		
//		boolean b = true;
//		b++;
//		System.out.println(b);// Type mismatch: cannot convert from boolean to int
		
//		boolean b = false;
//		b++;// b+1-- (false+1)  Type mismatch: cannot convert from boolean to int
//		System.out.println(b);
		
//		boolean b = false;
//		System.out.println(b);
		
		
		
//		operator ++ can not applied to boolean
//		?We can apply inc/decr operators for every primitive data type only except to boolean
//		
		//Date&Time=04:03PM,Wednesday,02/08/2023 START
//		
//		5. Diff btwn B++ & b=b+1 
		
//		If we applied any arithemetic operators between two variable a and b then
		//the result type is always	max of (int,type of a, type of b)
		
//		byte a = 10;
//		byte b = 20;
//		byte c = a+b;
//		System.out.println(c);// Type mismatch: cannot convert from int to byte
//		we can solve/handle it by usinf type casting
//		byte c = (byte)(a+b);
//		System.out.println(c);// 30
		
//		byte a = 10;
//		byte b = 20;
//		byte c = a+ b;// Type mismatch: cannot convert from int to byte
//		byte c= (byte) (a+b);
//		System.out.println(c);// 30
		
		
//		byte b = 10;
//		b= b+1;// Type mismatch: cannot convert from int to byte
//		System.out.println(b);//Type mismatch: cannot convert from int to byte
		
//		byte b =10;
//		b= b+1;
//		System.out.println(b);// Type mismatch: cannot convert from int to byte
		
//		byte b = 10;
//		b=(byte)(b+1);// using TypeCasting
//		System.out.println(b);// 11
		
//		byte b = 10;
//		b=(byte)(b+1);
//		System.out.println(b);// 11
		
//		byte b = 10;
//		b++;
//		System.out.println(b);//11

//		byte b = 10;
//		b++;// internal typecasting happen by default
//		System.out.println(b);// 11
//		NOTE:- In case of INcr/Decr operator internal TypeCasting perform automatically
//		
//		byte b = 10;
//		byte c = 20;
//		byte d =(byte) (b+c);
//		System.out.println(d);// 30
		
		
//		2.Arithmetic Opeartors:-(+,-,/,*,%)
//		If we apply any arithmetic opearators between a&b the result type is always
//		max(int,type of a , type of b)
//		
//		Fig: Typecasting flow
//		byte--->Short---->
//						----->int-->long-->		float-->double
//				char---->
		
//		byte + byte= int
//		byte + short= int
//		short + short=int
//		byte + long=long
//		long + double=double
//		float + long=float
//		char + char=int
//		char + double=double
		//Date&Time=04:23PM,Wednesday,02/08/2023 END
		
		//Date&Time=05:45PM,Wednesday,02/08/2023 START
//		System.out.println('a'+0.89);// 97.89-->a=97 (ASCII Value) -->97+0.89=97.89 double// char + double=double
//		byte b = 6;
//		byte c = 6;
//		System.out.println(b+c);// 12 jo ki int hai= byte + byte= int
//		System.out.println(32767+32767);// 65534 is int value short + short=int
//		System.out.println(127+32767);// 32894     byte + short= int
//		System.out.println(127+23717372);// 23717499 byte + long=long
//		System.out.println(1234531+10.3333);//1234541.3333 //long + double=double
//		System.out.println(212.332+932049832);// 9.32050044332E8 // float + long=float
//		System.out.println('a'+'a');// 194 char + char=int
//		System.out.println('a'+765.27);// 862.27  char + double=double
		
//		Infinity:-
//		In integral arithmetic(byte,short,int ,long) there is no way to represent infinity if infinity is a result then we will get AE: in integral arithmetic
//		
//		System.out.println(10/0);// Exception in thread "main" java.lang.ArithmeticException: / by zero
//		
//		System.out.println(10/0);/ by zero
	
//		But in floating point arithmetic (float & double) there is a way to represent infinity
//		for this float & double classes conatins the following two constatnt.
//		POSITIVE_INFINITY
//		NEGATIVE_iNFINITY
//		Hence even though result is infinity we wont get nay arithmetic exception in floating point arithmetic
//		
//		eg:-
//		System.out.println(10/0.0);// Infinity 10/float/double
//		System.out.println(10.0/0);// Infinity float/double/0
		
//		System.out.println(10/0.0);
//		System.out.println(10.0/0.0);
//		System.out.println(10/-0.0);
//		System.out.println(-10/0.0);
		
//		NaN:-(Not a number)
//		In integral arithmetic(byte,short,int ,long) there is no way to represent undefined result 
//		if undefined is a result then we will get AE: in integral arithmetic
//		Exception in thread "main" java.lang.ArithmeticException: / by zero
//		
//		System.out.println(0/0);// Exception in thread "main" java.lang.ArithmeticException: / by zero
//		
//		System.out.println(0/0);// / by zero
		
//		But in floating point arithmetic (float & double) there is a way to represent undefined result
//		for this float & double classes contains NaN constant.
//		Hence if the result is undefined we won't get any AE. in floating point arithmetic
//		
//		System.out.println(0.0/0);// NaN
//		System.out.println(-0/0.0); // NaN
//		System.out.println(10/0);//  java.lang.ArithmeticException: / by zero
//		System.out.println(-10/0);// java.lang.ArithmeticException: / by zero
//		System.out.println(10/-0);// java.lang.ArithmeticException: / by zero
//		System.out.println(10.0/0);// Infinity
//		System.out.println(10.0/-0);// Infinity
//		System.out.println(-10.0/-0);// -Infinity
//		System.out.println(-10.0/0);// -Infinity
//		System.out.println(10.0/-0.0);// -Infinity
//		System.out.println(-10.0/-0.0); // Infinity
//		System.out.println(0.0/-0);// NaN
//		System.out.println(-0.0/0);// NaN
//		System.out.println(-0.0/-0);// NaN
//		System.out.println(-1.0/-0);// -Infinity
		
//		for any x value including NaN the following expression return false
//		int x =0;
//		System.out.println(x<NaN); // NaN cannot be resolved to a variable
//		System.out.println(x<=NaN); // NaN cannot be resolved to a variable
//		System.out.println(x>NaN); // NaN cannot be resolved to a variable
//		System.out.println(x>=NaN);  // NaN cannot be resolved to a variable
//		System.out.println(x==NaN);// NaN cannot be resolved to a variable
		
//		for any x value including NaN the following expression return true
//		System.out.println(x!=NaN);// x cannot be resolved to a variable
		//NaN cannot be resolved to a variable
		
//		System.out.println(10<float.NaN); // Syntax error on token "float", invalid Expression
		
//		System.out.println(10<Float.NaN); // false
//		System.out.println(10<=Float.NaN);// false
//		System.out.println(10>Float.NaN);// false
//		System.out.println(10>=Float.NaN);// false
//		System.out.println(10==Float.NaN);// false
//		System.out.println(Float.NaN==Float.NaN);// false
//		System.out.println(10!=Float.NaN);// true
//		System.out.println(Float.NaN!=Float.NaN);// true
		
//		System.out.println(10<Float.NaN);// false
		
		
//		3.String concatenation operators
		
//		The only overloaded operator in java is (+) operator. 
//		Sometime it is said arithmetic addition operators 
//		and sometime it is said string concatenation opeartors.
		
		
//		Case1:-
//		If atleast one argument is String type  then
//		(+) operator access String concatenation operator.
		
//		Case2:-
//		If both argument is number type  then
//		(+) operator access arithmetic addition operator.
		
//		eg1:-
//		String a = "fahad";
//		int b=10, c=20, d=10;
//		System.out.println(a+b+c+d);// fahad102010 String concatenation operator
//		System.out.println(b+c+d+a);//40fahad this expression has same operator then order of precedence is from left to right so it start add value from left and concat with a. So it use both String concatenation operator and arithmetic addition operator 
//		System.out.println(b+c+a+d);// 30fahad10 this expression has same operator then order of precedence is from left to right so it start add value from left and concat with a. So it use both String concatenation operator and arithmetic addition operator 
//		System.out.println(b+a+c+d);// 10fahad2010
		
		
//		String a = "fahad";
//		int b=10,c=20,d=10;
//		System.out.println(a+b+c+d);//
//		System.out.println(b+c+d+a);
//		System.out.println(b+c+a+d);
//		System.out.println(b+a+c+d);
		
//		eg2:-
//		String a = "fahad";
//		int b=10, c=20, d=30;
//		a=b+c+d;
//		System.out.println(a); // Type mismatch: cannot convert from int to String
//		a=a+b+c;
//		System.out.println(a);// fahad1020
//		b=a+c+d;
//		System.out.println(b);// Type mismatch: cannot convert from String to int
//		b=b+c+d;
//		System.out.println(b);// 60
		
//		String a= "fahad";
//		int b=10, c=20, d=30;
////		a=b+c+d;
////		System.out.println(a);//Type mismatch: cannot convert from int to String
//		a=a+b+c;
////		System.out.println(a);
////		b=a+c+d;
//		b=b+c+d;
//		System.out.println(b);//60
		
		
		
//		4.Relational operators (<,<=,>,>=)
//		We can apply relational operator for every primitive type except boolean.
//		eg:-
//		System.out.println(10<20);// true
//		System.out.println('a'<20);// false
//		System.out.println('a'<97.6); //true
//		System.out.println('a'>'A'); // true
//		System.out.println(true>false);// The operator > is undefined for the argument type(s) boolean, boolean
//		
//		System.out.println(10<20);// true
//		System.out.println('a'<20);// false
//		System.out.println('a'<97.6);// true
//		System.out.println('a'>'A');// true
//		System.out.println(true<false);
		
//		System.out.println(10<=10);// true
//		System.out.println(10>=10);// true
		
		
		
//		 We cannot apply relational operators for object/Non-Primitive types
//		eg
//		System.out.println("durga123">"durga");// The operator > is undefined for the argument type(s) java.lang.String, java.lang.String
		
//		System.out.println("fahad">"fahad");
		
//		Nesting of relational operator is not allowed otherwise we will get CTE.
//		System.out.println(10<20<30);// The operator < is undefined for the argument type(s) boolean, int
		
//		System.out.println(10<20>30);// The operator > is undefined for the argument type(s) boolean, int
		
//		5.Equality operators (==, !=)  //Date&Time=3:43PM,Friday,02/10/2023
//		we can use == operator for address comparison
		
//		we can  apply equality operator for every primitive type including boolean also.
		
//		System.out.println(10==20);// false
//		System.out.println('a'=='b'); // false
//		System.out.println('a'==97.0); //true
//		System.out.println(false==false);// true
//		System.out.println(true==true);// true
//		System.out.println('a'=='A');// false
//		System.out.println('a'==97);// true
//		System.out.println(127==127);// true
//		System.out.println("fahad"=="fahad");// true
//		System.out.println("fah"=="abd");// false// yahan address compare nahi ho raha.
		
//		System.out.println(10==10);
//		System.out.println(10==20);
//		System.out.println('a'==97.0);
//		System.out.println('a'==97);
//		System.out.println('a'=='a');
//		System.out.println(false==false);// true
//		System.out.println('a'=='A');// false
//		System.out.println("fahad"=="fahad");// true
//		System.out.println("fah"=="abd");// false
		
//		we can apply equality operator for object type also
//		for object references r1 and r2 , r1== r2 iff both reference pointing to the same object
//		(reference comparison or address comparison)
		
//		Thread t1 = new Thread();
//		Thread t2 = new Thread();
//		Thread t3=t1;
//		System.out.println(t1==t3);// true
//		System.out.println(t1==t2);// false
		
//		Thread t1 = new Thread();
//		Thread t2 = new Thread();
//		Thread t3 = t1;
//		System.out.println(t1==t3);// true
//		System.out.println(t1==t2);// false
		
//		Thread t1 = new Thread();
//		Object O = new Object();
//		String S = new String("durga");
//		System.out.println(t1==O);// false
//		System.out.println(O==S);// false
//		System.out.println(S==t1);// Incompatible operand types String and Thread
		
//		Thread t1 = new Thread();
//		Object O = new Object();
//		String S = new String("durga");
//		System.out.println(t1==O);
//		System.out.println(O==S);
//		System.out.println(S==t1);// Incompatible operand types String and Thread
		
		
		
//		!= operators
//		we can use != operator for address comparison
//		System.out.println(10!=20);// true
//		System.out.println('a'!='b'); // true
//		System.out.println('a'!=97.0); //false
//		System.out.println(false!=false);// false
//		System.out.println(true!=true);// false
//		System.out.println('a'!='A');// true
//		System.out.println('a'!=97);// false
//		System.out.println(127!=127);// false
//		System.out.println("fahad"!="fahad");// false
//		System.out.println("fah"!="abd");// true
		
//		Thread t1 = new Thread();
//		Object O = new Object();
//		String S = new String("durga");
//		System.out.println(t1!=O);// true
//		System.out.println(O!=S);// true
//		System.out.println(S!=t1);// Incompatible operand types String and Thread
		
		// In general we can use == operator for address comparison 
//		and .equals() method for content comparison.
		
//		eg:
//		String S1 = new String("durga");
//		String S2= new String("durga");
//		System.out.println(S1==S2);//false // this compare address of variable/object
//		System.out.println(S1.equals(S2));// true// this method compare content of variable/objects
		
//		String S1 = new String("fahad");
//		String S2 = new String("fahad");
//		System.out.println(S1==S2);// false - address compare ho raha
//		System.out.println(S1.equals(S2)); // content/value compare ho rahi
//		
		
		
//		for any object reference r == null is always false
//		but null == null is always true
		
//		String s = new String("durga");
//		System.out.println(s==null);// flase
//		
//		String s = new String("durga");
//		System.out.println(s==null);// flase-- address compare and not matched so result is false.
		
//		String n = null;
//		System.out.println(n==null);// true.
//		System.out.println(null==null);// true
		
		
//		String n = null;
//		System.out.println(n==null);// true
//		System.out.println(null==null);// true
		
//		Lecture 19:- 
//		6.instanceOf operators
		//Date&Time=01:03PM,Friday,02/10/2023
//		We  can use instanceof operator to check whether given object is of particular type or not.
		
//		Syntax:-
//		r instance X -- r is object reference  X is class or interface name
//		Thread t = new Thread();
//		System.out.println(t instanceof Thread);// true
//		System.out.println(t instanceof Object);  // true
//		System.out.println(t instanceof Runnable);// true
		
//		Thread t = new Thread();
//		System.out.println(t instanceof Thread);
//		System.out.println(t instanceof Object);
//		System.out.println(t instanceof Runnable);
		
//		int[] l = new int[9];
//		System.out.println(l[0]);
//		Object o = new l.get[0];
		
	
//		 ArrayList<String> l = new ArrayList<String>(); 
//		// Create an ArrayList object
//		 Object O = new l.get[0];
		
//		for any class or interface X null instanceof X  is always false
//		System.out.println(null instanceof Thread); // false
//		System.out.println(null instanceof Runnable);// false
		
		
//		Thread t = new Thread();
//		System.out.println(t instanceof String);// Incompatible conditional operand types Thread and String
		
//		System.out.println(null instanceof Thread);// false
//		System.out.println(null instanceof Object);// false
//		System.out.println(null instanceof Runnable);// false
		
		
		
//		7.bitwise operators (&, |, ^)
//		 & -- And,  returns true iff both arguments are true
//		 | -- OR  returns true iff atleast one arguments are true
//		 cap symbol - ^ -- Exor, exclusive OR, X-OR, returns true iff both arguments are different
		
//		eg :- 
//		System.out.println(true & false);// false
//		System.out.println(true | false);// true
//		System.out.println(true ^ false); // true
		
//		System.out.println(true & false); // false
//		System.out.println(true | false);// true
//		System.out.println(true ^ false);// true
//		System.out.println(true ^ true);// false	
//		System.out.println(false ^ false);// false
		
		
//		we can apply these for integral types also
//		System.out.println(4&5);// 4
//		System.out.println(4|5);// 5
//		System.out.println(4^5);// 1
		
//		System.out.println( 4 & 5);
//		System.out.println(4 |5);
//		System.out.println(4 ^ 5);
		
//		System.out.println(100 & 101);// 100
//		System.out.println(11 & 11); // 11
		
//		System.out.println(~4);// -5
		
//		System.out.println(~5);// -6
		
//		System.out.println(~38); // -39
		
		
		 
		
//		bitwise complement operators (~):- tild symbol
//		We can apply for only integral type not for boolean type OW CTE.
//		System.out.println(~true);  // The operator ~ is undefined for the argument type(s) boolean
//		System.out.println(~4);// -5
		
//		Boolean complement operator : (!)--
//		We can apply this operator only for boolean type but not for integarl types.
//		System.out.println(!8);// The operator ! is undefined for the argument type(s) int
//		System.out.println(!false);// true
//		System.out.println(!true);// false
		
//		System.out.println(!10);
//		System.out.println(!true);
//		System.out.println(!false);
		
		
		
//		Note :-
//		&,|,^-- applicable for both boolean & integral
//		~ -- applicable for only integral but not for boolean
//		!  applicable only for boolean but not for integral
		
		
		
//		8.short circuit operators :(&&, ||)
		
//		These are exactly same as bitwise operators(&,|) except only following differences.
		
//				$,|		|		&&,||
//		-------------------------------				
//		1.Both argument	|	1. second argument		
//		should be evalu	|		evaluation is optional	
//		ated always.	|			
//		
//		2.relatively	|	2.relatively performance
//		performance 	|	high
////	low
//		
//		3.applicable	|	3. applicable only for boolean but not
//		for both boolean |	for integral
//		and integral types|
						
//		Note:- 1. x&&y == y will be evaluated iff x is true i.e. if x is false then y will not be evaluated.
		
//		2.  x||y - y will be evaluated iff x is false i.e. if x is true then y will not be evaluated.
			
//		eg_
//		int x= 10;
//		int y=15;
//		if(++x<10 & ++y>15) {
//			x++;
//		}else {
//			y++;
//		}
//		System.out.println(x+"..."+y);// 11...17
		
//		int x = 10;
//		int y=15;
//		if(++x<10 & ++y>15) {
//			x++;
//		}else {
//			y++;
//		}
//		System.out.println(x+"..."+y);
		
//		int x= 10;
//		int y=15;
//		if(++x<10 && ++y>15) {
//			x++;
//		}else {
//			y++;
//		}
//		System.out.println(x+"..."+y);// 11...16
		
//		int x= 10;
//		int y=15;
//		if(++x<10 | ++y>15) {
//			x++;
//		}else {
//			y++;
//		}
//		System.out.println(x+"..."+y);// 12...16
		
//		
//		int x= 10;
//		int y=15;
//		if(++x<10 || ++y>15) {
//			x++;
//		}else {
//			y++;
//		}
//		System.out.println(x+"..."+y);// 12...16
		
		
//		int x = 10;
//		int y=15;
//		if(++x<10 && ++y>15) {
//			x++;
//		}else {
//			y++;
//		}
//		System.out.println(x+"..."+y);// 11...16

//		int x = 10;
//		int y=15;
//		if(++x<10 | ++y>15) {
//			x++;
//		}else {
//			y++;
//		}
//		System.out.println(x+"..."+y);// 
		
//		int x = 10;
//		int y=15;
//		if(++x<10 || ++y>15) {
//			x++;
//		}else {
//			y++;
//		}
//		System.out.println(x+"..."+y);// 12...16
		
//		int x = 10;
//		int y=15;
//		if(++x<10 || ++y>15) {
//			x++;
//		}else {
//			y++;
//		}
//		System.out.println(x+"..."+y);
		
		
//		eg:- 2-
		
//		int x= 10;
//		if(++x<10 && (x/0>10)) {
//			System.out.println("Hello !!");
//		}else {
//			System.out.println("Hii !!");
//		}// o/p:- Hii
//		
//		int x= 10;
//		if(++x<10 & (x/0>10)) {
//			System.out.println("Hello !!");
//		}else {
//			System.out.println("Hii !!");
//		}// : / by zero
		
//		int x= 10;
//		if(++x<10 && (x/0>10)) {
//			System.out.println("Hello !!");
//		}else {
//			System.out.println("Hii !!");
//		}
		
//		int x= 10;
//		if(++x<10 & (x/0>10)) {
//			System.out.println("Hello !!");
//		}else {
//			System.out.println("Hii !!");
//		}
		
		
//		int x= 10;
//		if(++x<10 & (x/2>10)) {
//			System.out.println("Hello !!");
//		}else {
//			System.out.println("Hii !!");
//		}
		
//		int x= 10;
//		if(++x<10 | (x/0>10)) {
//			System.out.println("Hello !!");
//		}else {
//			System.out.println("Hii !!");
//		}
		
		
//		int x= 10;
//		if(++x<10 | (x/2>10)) {
//			System.out.println("Hello !!");
//		}else {
//			System.out.println("Hii !!");
//		}
		
//		int x= 10;
//		if(++x<10 || (x/0>10)) {
//			System.out.println("Hello !!");
//		}else {
//			System.out.println("Hii !!");
//		}
		
//		9.type cast operators
		
//		1. Implicit typecasting
//		2. Explicit Typecasting
		
//		1.Implicit:
//		Compiler is responsible to perform ITC.
//		whenever we are assinging smaller Datatype value to bigger datatype variable ITC will be performed.
//		It is also known as widening and upcasting
//		There is no loss of information in this typecasting
//		The following are various possible conversion where ITC will be performed.
		
//		Fig: Typecasting flow : ITC
//		byte--->Short---->
//						----->int-->long-->float-->double
//				char---->
		
//		eg:-
//		int x='a'; 
//		System.out.println(x);// 97// compiler convert char to int automatically by ITC
//		int x= 'a';
//		System.out.println(x);// 97
//		
//		double d = 10;
//		System.out.println(d);// 10.0
		
//		long l = 10;
//		System.out.println(l);// 10
		
		
//		float f = 10;
//		System.out.println(f);// 10.0
		
		
//		double d = 10;
//		System.out.println(d);// 10.0  compiler convert int to double automatically by ITC
		
//		double d = 'a';
//		System.out.println(d);// 97.0
		
//		long l = 'a';
//		System.out.println(l);// 97
		
//		float f = 'a';
//		System.out.println(f);// 97.0
		
		
		
//		2.Explicit Type casting:
//		Programmer is responsible to perform ETC.
//		whenever we are assinging bigger Datatype value to smaller datatype variable then  ETC will be required.
//		It is also known as narrowing and downcasting
//		There may a chance of loss of information in this typecasting
		
//		The following are various possibilities  where ETC will  required.
		
//		Fig: ETC
//		byte<---Short<----
//						<-----int<--long<--float<--double
//				char<----
		
//		L---R -- Implicit TypeCasting
//		R---L -- Explicit Typecasting
		
//		eg:-
//		int x = 130;
//		byte b = x;
//		System.out.println(b);// Type mismatch: cannot convert from int to byte
		
//		int x = 130;
//		byte b = (byte) x; //  cannot convert from int to byte
//		System.out.println(b);// -126
		
		
//		int x = 130;
//		byte b = (byte)x;
//		System.out.println(b);// -126
		
//		whenever we are assingnig bigger D.T value to smaller D.T variable by ETC The MSB will be lost
//		We have to consider only LSB
		
//		int x= 150;
//		short s = (short)x;
//		System.out.println(s);// 150
//		
//		int x = 150;
//		short s = (short)x;
//		System.out.println(s);// 150
		
//		byte  b = (byte)x;
//		System.out.println(b);// -106
		
//		int x = 150;
//		byte b= (byte)x;
//		System.out.println(b);// -106
		
//		int x = 509;
//		byte b = (byte)x;
//		System.out.println(b);// -3
		
//		int x = 509;
//		short s = (short)x;
//		System.out.println(s);// 509
		
		
		
		
		
//		Float to integral value -- digit after decimal point lost
//		double d = 130.456;
//		int x = (int)d;
//		System.out.println(x);// 130
//		byte b = (byte)d;
//		System.out.println(b);// -126
		
//		double d = 130.456;
//		int x = (int)d;
//		System.out.println(x);// 130
		
//		double d = 130.456;
//		byte b = (byte)d;
//		System.out.println(b);// -126
		
//		float f = 130.456f;
//		int x = (int)f;
//		System.out.println(x);// 130
		
		
//		Lecture 21: 10.Assignment operators : 
//		Three types
//		1.Simple assingment
//		2.chained 
//		3.compound
		
//		1.Simple:-   int x= 10;
//		int x = 10;
//		literal value 10 assigned to  var x
		
//		2.chained:-  
//		int a,b,c,d;
//		a=b=c=d=20;
//		System.out.println(a+".."+b+"..."+c+"..."+d);// 20..20...20...20
		
		
//		int a,b,c,d;
//		a=b=c=d=10;
//		System.out.println(a+".."+b+".."+c+".."+d);//10..10..10..10

//		We can't performed chain assingment directly at the time of declaration
//		eg:-
//		 int a =b=c=d=20;
//		 System.out.println(a+".."+b+"..."+c+"..."+d);// b cannot be resolved to a variable
//			c cannot be resolved to a variable
//			d cannot be resolved to a variable
//		 at OperatorsAndAssignment.main(OperatorsAndAssignment.java:555)
		
//		int b,c,d;
//		int a=b=c=d=20;
//		System.out.println(a+".."+b+"..."+c+"..."+d);// 20..20...20...20
//		int b,c,d;
//		int a=b=c=d=20;
//		System.out.println(a+".."+b+"..."+c+"..."+d);//20..20...20...20
		
//		3.Compound Assignment Operator:-
//		Sometime assignment operator mixed with some other operator then we called that operator is CAO.
		
//		int a= 20;
//		a+=30;// -- a=a+30
//		System.out.println(a);// 50
		
//		int a = 20;
//		a+=30;// -- a=a+30;
//		System.out.println(a);// 50

//		The following are all possible compound assingment operator in java
		
//		+=		&=		>>= right shift operator
//		-=		|=		>>>= unsigned right shift operator
//		*=		^=		<<= left shift operator
//		/=
//		%=   Total === 11
		
//		in case of CAO internal T.C will performed automatically
//		 byte b = 10;
//		 b=b+1;  // max(int,byte,int)
//		 System.out.println(b);// Type mismatch: cannot convert from int to byte
		 
//		byte b =10;
//		b=b+1;// cannot convert from int to byte
//		System.out.println(b);
//		
		
//		byte b = 10;
//		b++;
//		System.out.println(b);// 11

//		 byte b = 10;
//		 b++;
//		 System.out.println(b);// 11
		 
//		 byte b = 10;
//		 b+=1;  // += CAO internal TC is performed.
//		 System.out.println(b);//11
		
//		byte b =10;
//		b+=1; // b=b+1 
//		System.out.println(b);// 11

//		byte b = 127;
//		b+=1;
//		System.out.println(b);//-128
		
//		byte b =127;
//		b+=1;
//		System.out.println(b);// -128
		
//		byte b = 127;
//		b+=127;
//		System.out.println(b);//-2
		
//		byte b =127;
//		b+=129;
//		System.out.println(b);//0
		
//		byte b =127;
//		b+=130;
//		System.out.println(b);//1

//		byte b = 127;
//		b+=3;
//		System.out.println(b);//-126
		
//		int a,c;
//		int b=20; // simple
//		int d; // simple only declared
//		a=c=d=20; //chained 
//		a+= b-= c*= d/= 2; // compound
//		System.out.println(a+"..."+b+"..."+c+"..."+d);// -160...-180...200...10
		
//		int a,c;
//		int b=20;
//		int d;
//		a=c=d=20;//chained
//		a+= 10;
//		b-=5;
//		c*=4;
//		d/=7;
//		System.out.println(a+"..."+b+"..."+c+"..."+d);//30...15...80...2
		
//		int a=10;
//		a+=a+10;
//		System.out.println(a);//30
		
//		int a=10;
//		a+=a+=a+=a-+a-+30;
//		System.out.println(a);
		
//		int a=10;
//		a+=12+12;
//		System.out.println(a);//34

//		int a,b,c,d,e,f,g,h;
//		a=b=c=d=e=f=g=h=10;
//		a+=10;
//		b-=10;
//		c/=10;// return quotient
//		d*=10;
//		e%=10; // return reminder
//		
//		f&=10; // f&10==> 10&10 = Ans 10 - 1010&1010==1010=10
//		g|=10; // 
//		h^=10;// x-OR cap 
//		
//		System.out.println(a); // 20
//		System.out.println(b); // 0
//		System.out.println(c); // 1
//		System.out.println(d); // 100
//		System.out.println(e); /// 0
//		System.out.println(f); // 10
//		System.out.println(g);// 10
//		System.out.println(h); // 0
		
		
//		11.conditional operators: (? :) Ternary operator
//		The only possible ternary operator in java is conditional operator
//		Syntax : 
//		int  x= (10<20)? 30:40;
		
//		is same as in if else condition
//		if(10<20) {
//			System.out.println("30"); // 30
//		}else {
//			System.out.println("40");
//		}
//		System.out.println(x);// 30
//		
//		int x=  (10<20) ? 30 :40;
//		System.out.println(x);//30
		
//		int  x;
//		if(20<30) {
//			x=10;
//		}
//		else {
//			x=20;
//		}
//		System.out.println(x);// 10
		
		
//		neasting of conditional operator is also possible
		
//		 int x = (10>20)?30 :(40>50)?60:70;
//		 System.out.println(x);// 70
//		is same as 
//		if(10>20) {
//			System.out.println("30"); 
//		}else if(40>50) {
//			System.out.println("60");
//		}else {
//			System.out.println("70");// 70
//		}
		
		
//		int x =(10>20)?30 : (40>90)? 40 : 60;
//		System.out.println(x);// 60
		
//		int x= (10>=30)?30:40;
//		System.out.println(x);//40
		
		
//		int x= (10<10) ? 10 : (10>30) ? 20 : (10<=5) ? 30 : (10>=60)? 40 : (10==10) ? 50 :60;
//		System.out.println(x);// 50
		
		
//		int x= (10<10) ? 10 : (10>30) ? 20 : (10<=5) ? 30 : (10>=60)? 40 : (10==20) ? 50 :60;
//		System.out.println(x);// 60
			
		
//		int x= (10<10) ? 10 : (10>30) ? 20 : (10<=5) ? 30 : (10>=60)? 40 : (10!=10) ? 50 :(97.0==97) ?  60  :70;
//		System.out.println(x);// 60
		
//		int x= (10<10) ? 10 : (10>30) ? 20 : (10<=5) ? 30 : (10>=60)? 40 : (10!=10) ? 50 :(97.1==97) ?  60  :70;
//		System.out.println(x);// 70
		
		
		
//		System.out.println(10!=10);//falase
		
		
//		a++, ++a -- unary operator because only one operand is there i.e "a"
//		a+b -- binary operator because two  operand is there i.e "a" and "b"
//		(c)?b:d; ternary operator because three  operand is there i.e "a" , "b" and "c"
		
//		c,b,d are 3 operand
		
//		if(true&&false) {
//			System.out.println("Hii");
//		}
//		else
//		{
//			System.out.println("Hello");
//		}
//		// hello
		
//		if(10>20 && 30<40) {
//			System.out.println("Hii");
//		}else {
//			System.out.println("Hello");
//		}// Hello
		
		
//		if(true && true && true) {
//			System.out.println("Hello");
//		}else
//		{
//			System.out.println("Hello");
//		}// Hello
//		
//		if(true & true & true) {
//			System.out.println("Hello");
//		}else
//		{
//			System.out.println("Hello");
//		}// Hello
		
//		if(10<20 && 30<60 && 40<80 && 50<90 && 60<90) {
//			System.out.println("Hello");
//		}else {
//			System.out.println("Hii");
//		}// Hello
		
//		12.new operators  -- theory only
//		we can use this new operator to create object of class
//		eg:- Test t = new Test();
//		After creating an object constructor will be executed to perform
//		initialization of object not for creation of object
		
//		
//		basically after creation of test class object by using new keyword constructor immideately execute (automatically) and perform initialization of created object
//		so, The  role of constructor is to perform initialization of object not creation of object.
		
		
		
//		13.[] operators -- theory only
		
//		we  can use this operator to declare and create arrays only
//		eg:- 
//		int[] x = new int[10];
//		In general other than arrays we are not going to use this operator anywhere else
		
//		int[] x = new int[10];
		
//		Lecture 22: //		
//		
//		14.operator precedence
		
//		Java operator precedence chart
		
//		1. unary operator
//		[],x++,x--
//		++x,--x,~,|
//		new, <type>
		
//		2.Arithmetic Operator
//		*,/,%
//		+,-
		
//		3.Shift operator
//		>>,>>>,<<
		
//		4.Comparision operator
//		<,<=,>,>=,instanceof
		
//		5.equality operator:
//		==, !=
		
//		6. Bitwise operator
//		&,^,|
		
//		7.Short Circuit operator
//		&&, ||
		
//		8.conditional operator
//		? : 
		
//		9.Assignment operator
//		=, +=, -=, *=     .args.clone(). all  11 CAO
		
//		15.Evaluation order of operands
		
//		If we apply any operator  on operand all operand will evaluated from left to right
		
//		System.out.println(m1(1)+m1(2)*m1(3)/m1(4)+m1(5)*m1(6)); // 32
//		 1+2*3/4+5*6
//		 1+6/4+5*6
//		 1+1+30
//		 2+30
//		 32
		
		System.out.println(m1(1)+m1(2)*m1(3)/m1(4)+m1(5)*m1(6));
		
//		System.out.println(m1(1)+m1(2)*m1(3)/m1(4)+m1(5)*m1(6)*m1(7)/m1(8)+m1(9)-m1(10));// 27
//	    1+2*3/4+5*6*7/8+9-10
//		1+6/4+5*6*7/8+9-10
//		1+1+5*6*7/8+9-10
//		1+1+30*7/8+9-10
//		1+1+210/8+9-10
//		1+1+25+9-10
//		2+25+9-10
//		27+9-10
		36-10
		
//		If multiple operator has same precedence then it execute from left to right
//		and right to left accrdng to associativity.
		
//		For more detail : See Java operator precedence table
		
//		Lecture 23 : 
//		16.new vs newInstance()
//		1.new : - We can use this new operator to create an object , if we know classname at the beggining
//		eg:- 
//		Test t = new Test();
//		Student S = new Student();
//		Customer C = new Customer();
		
//		2. newInstance():- is a method in Class.class we can use newInstance method to create object, 
//		if we don't know class name at begining and it is available dynamically at runtime from
//		CLA,file,database.
//		eg: above
//		17.instanceOf Vs isInstance()
//		18.ClassNotFoundException Vs NoClassDefFoundError
//		both above 17 & 18 point are theory based and interview question only 
		
		
		
		


	}
//	public static int m1(int i) {
//	System.out.println(i);// 1,2,3,4,5,6
//	System.out.println(i);//1,2,3,4,5,6.7,8,9,10
//	return i;
//}
	
	public static int m1(int i) {
		System.out.println(i);
		return i;
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2024-01-01 23:29:38.203
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2024-01-01 23:29:38.204
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2024-01-01 23:29:38.229
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.util.ArrayList; 
	
public class OperatorsAndAssingments_Practice {
	//class Customer{
//	
//}
//class Test{
//	public static void main(String[] args)throws Exception {
//		Object O = Class.forName(args[0]).newInstance();
//		System.out.println("Object created for :"+O.getClass().getName());
////		System.out.println("Hello");
//- Other rest thing are thoery based and need setting for runnig in run time nad compile time seperately
//	}
//}
	public static void main(String[] args) {
//		Types of operators:-
//		1.Increment and decrement operators
//		2.Arithmetic operators
//		3.String concatenation operators
//		4.Relational operators
//		5.Equality operators
//		6.instanceOf operators
//		7.bitwise operators
//		8.short circuit operators
//		9.type cast operators
//		10.Assignment operators
//		11.conditional operators
//		12.new operators
//		13.[] operators
//		14.operator precedence
//		15.Evaluation order of operands
//		16.new vs newInstance()
//		17.instanceOf Vs isInstance()
//		18.ClassNotFoundException Vs NoClassDefFoundError

//		1. Increment & Decrement operators:-
//		Increment - Pre-Increment , y=++x;
//		Increment - Post-Increment, y=x++;
		
//		Decrement - Pre-Decrement , y=--x;
//		Decrement - Post-Decrement, y=x--;
		
//		int x= 10;
//		x++;
//		System.out.println(x);// 11
		
//		Pre Increment
//		int x= 10;
//		int y= ++x;// pre incr -- here y value = 11
//		System.out.println(x);// 11
//		System.out.println(y);// 11
		
//		Post Increment
//		int x= 10;
//		int y= x++;
//		System.out.println(y);// 10
//		System.out.println(x);// 11
//		
//		int x= 10;
//		int y= x+1;
//		System.out.println(x);// 10
//		System.out.println(y);// 11
		
//		Pre Decrement
//		int x= 10;
//		int y= --x;
//		System.out.println(y);// 9
//		System.out.println(x);// 9
		
//		Post Decrement
//		int x= 10;
//		int y= x--;
//		System.out.println(y);// 10
//		System.out.println(x);// 9
		
//		int x= 10;
//		int y= ++10;// Invalid argument to operation ++/--
//		System.out.println(x);
////		System.out.println(y);
//		int z = 10++;// Invalid argument to operation ++/--
//		System.out.println(z);
		
		
//		int x= 10;
//		int y= ++ (++x);// Invalid argument to operation ++/--
//		System.out.println(y);
		
//		final int x = 10;
//		x++;// The final local variable x cannot be assigned. 
////		It must be blank and not using a compound assignment
//		System.out.println(x);
		
		
//		final int x = 10;
//		x++;
//		System.out.println(x);// The final local variable x cannot be assigned. It must be blank and not using a compound assignment
		
//		int x = 10;
//		x++;
//		System.out.println(x);
		
//		int x= 10;
//		int y= x++;
//		int z = x;
//		z++;
//		
//		System.out.println(y);// 10
//		System.out.println(x);// 11
//		System.out.println(z);// 12
		
//		int x = 10;
//		int y = ++x;
//		int z= y;
//		System.out.println(z);// 11
//		z++;
//		System.out.println(y);// 11
//		System.out.println(x);// 11
//		System.out.println(z);// 12
	
//		int x= 10;
//		x++;
//		System.out.println(x);// 11
		
//		char ch = 'a';
//		ch++;
//		System.out.println(ch);// b
		
//		char ch = 'a';
//		ch++;
//		System.out.println(ch);// b
		
//		double d = 10.5;
//		d++;
//		System.out.println(d);// 11.5
		
//		double d = 10.5;
//		++d;
//		System.out.println(d);// 11.5
		
//		boolean b = true;
//		b++;// Type mismatch: cannot convert from boolean to int
//		System.out.println(b);
		
//		char ch = 'a';
//		char y = ch++;
//		System.out.println(ch);//b
//		System.out.println(y);//a
		
		
		
		
		
//		Diff Btwen b++ and b=b+1
		
//		byte b = 10;
//		byte a= 10;
//		byte c= a+b;// max(int,type of a, type of b)--> max(int,byte,byte)
//		System.out.println(c);//Type mismatch: cannot convert from int to byte
		
//		byte a = 10;
//		byte b = -1;
//		byte c= (byte)(a+b);
//		System.out.println(c);//9
		
		
//		byte b= 10;
//		byte a = 10;
//		byte c = a+b;// Type mismatch: cannot convert from int to byte
//		System.out.println(b);
		
//		int b = 10;
//		int a= 10;
//		int c = a+b; // max(int,type of a, type of b)--> max(int,int,int)
//		System.out.println(c);// 20
		
//		short a = 10;
//		short b = 10;
//		short c = a+b;
//		System.out.println(c);// Type mismatch: cannot convert from int to short
		
//		short a = 10;
//		short b = 10;
//		short c = (short)(a+b);
//		System.out.println(c);// 20
		
//		char ch = 'a';
//		char ch1 = 'b';
//		char chs  = ch + ch1;
//		System.out.println(chs);// Type mismatch: cannot convert from int to char
		
//		char ch = 'a';
//		char ch1 = 'b';
//		char chs  = (char)(ch + ch1);
//		System.out.println(chs);//Ã
		
//		char ch2 = 'Ã';
//		int in = ch2+0;
//		System.out.println(in);
		
		
//		char ch = 'a';
//		char ch1 = 'b';
//		int x = ch;
//		int y= ch1;
//		System.out.println(x);//97
//		System.out.println(y);//98
		
//		char x = 'a';
//		char y= 'b';
//		long l = x+y;
//		System.out.println(l);// 197
		
//		char x= 'a';
//		char y='b';
//		float f= x+y;
//		System.out.println(f);// 195.0
		
//		char x= 'a';
//		char y='b';
//		double d= x+y;
//		System.out.println(d);// 195.0
		
//		char ch = 'a';
//		double d = 10.5d;
//		double sum = ch +d;
//		System.out.println(sum);// 107.5
		
//		char ch = 'a';
//		double d = 10.5d;
//		int sum = (int)(ch +d);
//		System.out.println(sum);// 107
		
		
		
		
		
		
//		byte b= 10;
//		byte a = 10;
//		byte c = (byte)(a+b);// Type mismatch: cannot convert from int to byte
//		System.out.println(c);// 20
		
//		byte b= 10;
//		byte a = 20;
//		byte c = a + b;
//		System.out.println(c);// Type mismatch: cannot convert from int to byte
//		byte b = 10;
//		b= b+1;// Type mismatch: cannot convert from int to byte
//		System.out.println(b);
		
//		byte b= 10;
//		byte a = 20;
//		byte c = (byte)(a + b);
//		System.out.println(c);
		
//		byte b = 10;
//		b= (byte)(b+1);
//		System.out.println(b);// 11
		
//		byte b = 10;
//		b= (byte)(b+1+b);
//		System.out.println(b);// 21
		
//		byte b = 10;
//		b= (byte)(b+1+b-b+10-12);
//		System.out.println(b);// 9
		
//		byte b = 10;
//		b= (byte)(b+1);
//		System.out.println(b);// 11
		
//		byte b =20;
//		b= b+1;
//		System.out.println(b);
		
//		byte c = 20;
//		c= c++;
//		System.out.println(c);//20
		
		
//		int a = 10;
//		int c = 10;
//		byte z = (byte)(a+c);
//		System.out.println(z);
		
		
		
//		int x= 10;
//		int y = ++ (++x);// Invalid argument to operation ++/--
//		System.out.println(y);
		
//		int x= 10;
//		int y= ++ (++x);
//		System.out.println(y);// Invalid argument to operation ++/--
		
		
		
		
		
//		byte c = 20;
//		byte z = c++;
//		System.out.println(z);//20
		
//		byte b = 10;
//		b++;// (byte)b+1
//		System.out.println(b);// 11
		
//		byte b = 10;
//		b++;
//		System.out.println(b);//11
		
		
		
		
//		2. Arithematic Operator - (+,-,*,/,%)
		
//		byte b = 10;
//		byte c = 19;
//		byte sum = (byte)(b+c) ;
//		System.out.println(sum);// 29
		
		
//		byte b = 10;
//		short s = 19;
//		short sum = (short)(b+s);
//		System.out.println(sum);// 29
		
//		short s1 = 10;
//		short s2= 18;
//		short sum = (short)(s1+s2);
//		System.out.println(sum);// 28
		
//		byte b = 10;
//		long l = 19;
//		long sum = b+l;
//		System.out.println(sum);// 29  -- int to long conversion is possible 
		
//		long l = 10;
//		double d = 10.4;
//		double sum = l+d;
//		System.out.println(sum);// 20.4 -- int to double is possible and long is max among
		
		
//		float f = 10.4f;
//		long l = 10;
//		long sum = f+l;// Type mismatch: cannot convert from float to long
//		long sum = (long)(f+l);// 20-- ans in long
//		float sum = l+f;// 20.4
//		System.out.println(sum);
		
//		char ch = 'A';
//		char ch1 = 'B';
//		char sum = ch+ch1;// Type mismatch: cannot convert from int to char
//		int sum = ch+ch1;
//		System.out.println(sum);// 131
		
//		char ch = 'A';
//		double d = 10.5;
//		int sum = ch+d;// Type mismatch: cannot convert from double to int
//		char sum1 = ch+d;// Type mismatch: cannot convert from double to char
//		double sum = ch+d;// 75.5
//		System.out.println(sum);

//		System.out.println('a'+'b');//195
//		System.out.println('a'+10.5);// 107.5
//		System.out.println('a'+0.89);// 97.89
		
//		System.out.println(10/0);// java.lang.ArithmeticException: / by zero
		
//		System.out.println(10/0.0);// Infinity
//		System.out.println(-10/0.0);// -Infinity
		
//		System.out.println(10/0.0f);// Infinity
//		System.out.println(-10/0.0f);// -Infinity
		
//		System.out.println(10/0);// / by zero
		
//		System.out.println(10/0.0);// Infinity
//		System.out.println(10.0/0);// Infinity
//		System.out.println(-10.0/0);// -Infinity
		
		
		
//		 NaN- Not a Number
		
//		System.out.println(0/0);//  java.lang.ArithmeticException: / by zero
//		System.out.println(0/29);//0
		
//		System.out.println(0/0.0f);// NaN
//		System.out.println(-0/0.0f);// NaN
		
//		System.out.println(0/0.0);// NaN
//		System.out.println(-0/0.0);// NaN
	
//		System.out.println(0/0);//java.lang.ArithmeticException: / by zero
		
//		System.out.println(0.0/0);// NaN
//		
//		System.out.println(-0.0/0);// NaN
		
//		Summary
		
//		System.out.println(10/0); / by zero
//		System.out.println(10/0.0);// Infinity
//		System.out.println(0/0);// java.lang.ArithmeticException: / by zero
//		System.out.println(0.0/0);// NaN
		
//		System.out.println(10<Float.NaN);// false
//		System.out.println(10<=Float.NaN);// false
//		System.out.println(10>Float.NaN);// false
//		System.out.println(10>=Float.NaN);// false
//		System.out.println(10==Float.NaN);// false
//		System.out.println(Float.NaN == Float.NaN);// false
//		System.out.println(10 != Float.NaN);// true
//		System.out.println(Float.NaN != Float.NaN);// true
		
		// need to study further on NaN 
		
		
		
//		2. String Concatenation operator:(+) lecture 18
		
//		String a = "Fahad";
//		int b=10,c=20,d=30;
//		System.out.println(a+b+c+d);// Fahad102030
//		System.out.println(b+c+d+a);// 60Fahad
//		System.out.println(b+c+a+d);// 30Fahad30
//		System.out.println(b+a+c+d);// 10Fahad2030
		
//		System.out.println(a=a+b+c);//Fahad1020
//		System.out.println(a=b+c+d);// Type mismatch: cannot convert from int to String
//		System.out.println(b=a+c+d);// Type mismatch: cannot convert from String to int
//		System.out.println(b=b+c+d);// 60
		
//		4. relational Operator (<,<=,>,>=)
//		System.out.println(10<20);// true
//		System.out.println('a'<20);//false
//		System.out.println('a'<97.6);// true
//		System.out.println('a'<'A');// false
//		System.out.println(true>false);// The operator > is undefined for the argument type(s) boolean, boolean
		
//		System.out.println("fahad102">"fahad");//The operator > is undefined for the argument type(s) java.lang.String, java.lang.String
		
//		System.out.println(10<20<30);// The operator < is undefined for the argument type(s) boolean, int
		
//		5. Equality operator (==, !=)
		
		
	
		
		
//		--------Revision Practice -----------------------------------------------------------------------------
		
		
//		int x = 10;
//		int y=++x; // Pre-Increment
//		int z =x++; // 11 // Post-Increment
//		System.out.println(y); // 11 - OP
//		System.out.println(z); // 11
//		int m =x++; // 11
//		System.out.println(m); // 11
//		
//		int x= 10;
//		int y = ++x;
//		System.out.println(y);
//		int z = x++;
//		System.out.println(z);
//		int m = x++;
//		System.out.println(m);
		
		
		
//		int x=20;
//		int y= ++x; // Isi line me value incr ho gayi //Pre-Increment
//		System.out.println(y); // 21
//		System.out.println(x); // 21
//		
//		int x= 30;
//		int y= x++;
//		int z= ++x;
//		System.out.println(y); // 30
//		System.out.println(x); // 32
		
		
//		int x= 30;
//		int y= x++; // Post-Increment
//		System.out.println(y); // 30 Post-Increment
//		System.out.println(x); // 31 Post-Increment
//		int x= 90;
//		int y= x++;
//		System.out.println(x);// 91
//		int y= ++x; //91
//		System.out.println(y);// 90
		
		
//		int y=20;
//		int x= --y; //Pre-Decrement
//		System.out.println(x); // 19 Pre-Decrement 
//		System.out.println(y); //19  Pre-Decrement
		
//		int z= 20;
//		int x= z--; // Post-Decrement
//		System.out.println(x); // 20 Post-Decrement
//		System.out.println(z); // 19 Post-Decrement
		
//		int x= 10;
//		int y = x++;
//		System.out.println(y); // 10
//		System.out.println(x);// 11
//		int z= --x;
//		System.out.println(z); // 10
		
//		int x= 10;
//		int y= --x;
//		int z = x--;
//		System.out.println(y);
//		System.out.println(z);
//		System.out.println(x);
		
//		We cant apply incremnt and decrement operators on constant values.
//		int x = 10;
//		int y = ++10;
//		System.out.println(y);// Unresolved compilation problem: 
//		int x= 10;
//		int y= 10++:
//		System.out.println(y);
		//Invalid argument to operation ++/--
//		Nesting of INC/DEC operators is not allowed
		
//		int x= 10;
//		int y= ++(++x);
//		System.out.println(y); // Unresolved compilation problem: 
		//Invalid argument to operation ++/--
		
//		int x= 10;
//  	int y= ++(x);
//		int z= ++(++x); // neasting of increment and decrement operators is not allowed.
//		System.out.println(z);
//		++x means value not a variable.. here we required variable not a valuex.
		
		
//		For FINAL variables we cant apply incr/decr operators.
//		final int x = 10;
//		x++;// Unresolved compilation problem: 
//		int y= x++;// Unresolved compilation problem: 
//		System.out.println(y);// Unresolved compilation problem: 
		
//		final int x= 10;
//		int y = x++;
//		System.out.println(y);
		
		//The final local variable x cannot be assigned.
//		It must be blank and not using a compound assignment
		
//		final int x= 10;
//		x=11;
//		System.out.println(x);
		
		
		
//		final int x =10;
//		x=11;// Unresolved compilation problem: 
//		System.out.println(x);// The final local variable x cannot be assigned.
//		It must be blank and not using a compound assignment
		
		
//		int x = 10;
//		x++;
//		int y=x++;//10
//		System.out.println(y);// 11
//		System.out.println(x);// 12
		
		
		
		
//		int x = 10;
//		x++;
//		System.out.println(x);// 11
//		int y=x++;
//		System.out.println(y);// 11
//		System.out.println(x);// 12
//		System.out.println(y);// 11 // first assigned then increment.
//		
//		final int x= 10;
//		int y= x++;
//		System.out.println(y);
		
		
//		char ch = 'a';
//		ch++;
//		int y= ch;
//		System.out.println(ch); // b
//		System.out.println(y); //98
		
//		char ch = 'a';// a=97
//		ch++;
//		int y=ch;
//		System.out.println(ch);// b  becz value of a is 97 so after increment value becomes 98 which is value of b
//		System.out.println(y);// 98
		
//		double d= 10.9;
//		d++;
//		System.out.println(d);// 11.9
		
//		double d = 10.5;
//		d++;
//		System.out.println(d);// 11.5
		
//		boolean b = true;
//		b++;
//		System.out.println(b);// Type mismatch: cannot convert from boolean to int
		
//		boolean b = false;
//		b++;// b+1-- (false+1)  Type mismatch: cannot convert from boolean to int
//		System.out.println(b);
		
//		boolean b = false;
//		System.out.println(b);
		
		
		
//		operator ++ can not applied to boolean
//		?We can apply inc/decr operators for every primitive data type only except to boolean
//		
		//Date&Time=04:03PM,Wednesday,02/08/2023 START
//		
//		5. Diff btwn B++ & b=b+1 
		
//		If we applied any arithemetic operators between two variable a and b then
		//the result type is always	max of (int,type of a, type of b)
		
//		byte a = 10;
//		byte b = 20;
//		byte c = a+b;
//		System.out.println(c);// Type mismatch: cannot convert from int to byte
//		we can solve/handle it by usinf type casting
//		byte c = (byte)(a+b);
//		System.out.println(c);// 30
		
//		byte a = 10;
//		byte b = 20;
//		byte c = a+ b;// Type mismatch: cannot convert from int to byte
//		byte c= (byte) (a+b);
//		System.out.println(c);// 30
		
		
//		byte b = 10;
//		b= b+1;// Type mismatch: cannot convert from int to byte
//		System.out.println(b);//Type mismatch: cannot convert from int to byte
		
//		byte b =10;
//		b= b+1;
//		System.out.println(b);// Type mismatch: cannot convert from int to byte
		
//		byte b = 10;
//		b=(byte)(b+1);// using TypeCasting
//		System.out.println(b);// 11
		
//		byte b = 10;
//		b=(byte)(b+1);
//		System.out.println(b);// 11
		
//		byte b = 10;
//		b++;
//		System.out.println(b);//11

//		byte b = 10;
//		b++;// internal typecasting happen by default
//		System.out.println(b);// 11
//		NOTE:- In case of INcr/Decr operator internal TypeCasting perform automatically
//		
//		byte b = 10;
//		byte c = 20;
//		byte d =(byte) (b+c);
//		System.out.println(d);// 30
		
		
//		2.Arithmetic Opeartors:-(+,-,/,*,%)
//		If we apply any arithmetic opearators between a&b the result type is always
//		max(int,type of a , type of b)
//		
//		Fig: Typecasting flow
//		byte--->Short---->
//						----->int-->long-->		float-->double
//				char---->
		
//		byte + byte= int
//		byte + short= int
//		short + short=int
//		byte + long=long
//		long + double=double
//		float + long=float
//		char + char=int
//		char + double=double
		//Date&Time=04:23PM,Wednesday,02/08/2023 END
		
		//Date&Time=05:45PM,Wednesday,02/08/2023 START
//		System.out.println('a'+0.89);// 97.89-->a=97 (ASCII Value) -->97+0.89=97.89 double// char + double=double
//		byte b = 6;
//		byte c = 6;
//		System.out.println(b+c);// 12 jo ki int hai= byte + byte= int
//		System.out.println(32767+32767);// 65534 is int value short + short=int
//		System.out.println(127+32767);// 32894     byte + short= int
//		System.out.println(127+23717372);// 23717499 byte + long=long
//		System.out.println(1234531+10.3333);//1234541.3333 //long + double=double
//		System.out.println(212.332+932049832);// 9.32050044332E8 // float + long=float
//		System.out.println('a'+'a');// 194 char + char=int
//		System.out.println('a'+765.27);// 862.27  char + double=double
		
//		Infinity:-
//		In integral arithmetic(byte,short,int ,long) there is no way to represent infinity if infinity is a result then we will get AE: in integral arithmetic
//		
//		System.out.println(10/0);// Exception in thread "main" java.lang.ArithmeticException: / by zero
//		
//		System.out.println(10/0);/ by zero
	
//		But in floating point arithmetic (float & double) there is a way to represent infinity
//		for this float & double classes conatins the following two constatnt.
//		POSITIVE_INFINITY
//		NEGATIVE_iNFINITY
//		Hence even though result is infinity we wont get nay arithmetic exception in floating point arithmetic
//		
//		eg:-
//		System.out.println(10/0.0);// Infinity 10/float/double
//		System.out.println(10.0/0);// Infinity float/double/0
		
//		System.out.println(10/0.0);
//		System.out.println(10.0/0.0);
//		System.out.println(10/-0.0);
//		System.out.println(-10/0.0);
		
//		NaN:-(Not a number)
//		In integral arithmetic(byte,short,int ,long) there is no way to represent undefined result 
//		if undefined is a result then we will get AE: in integral arithmetic
//		Exception in thread "main" java.lang.ArithmeticException: / by zero
//		
//		System.out.println(0/0);// Exception in thread "main" java.lang.ArithmeticException: / by zero
//		
//		System.out.println(0/0);// / by zero
		
//		But in floating point arithmetic (float & double) there is a way to represent undefined result
//		for this float & double classes contains NaN constant.
//		Hence if the result is undefined we won't get any AE. in floating point arithmetic
//		
//		System.out.println(0.0/0);// NaN
//		System.out.println(-0/0.0); // NaN
//		System.out.println(10/0);//  java.lang.ArithmeticException: / by zero
//		System.out.println(-10/0);// java.lang.ArithmeticException: / by zero
//		System.out.println(10/-0);// java.lang.ArithmeticException: / by zero
//		System.out.println(10.0/0);// Infinity
//		System.out.println(10.0/-0);// Infinity
//		System.out.println(-10.0/-0);// -Infinity
//		System.out.println(-10.0/0);// -Infinity
//		System.out.println(10.0/-0.0);// -Infinity
//		System.out.println(-10.0/-0.0); // Infinity
//		System.out.println(0.0/-0);// NaN
//		System.out.println(-0.0/0);// NaN
//		System.out.println(-0.0/-0);// NaN
//		System.out.println(-1.0/-0);// -Infinity
		
//		for any x value including NaN the following expression return false
//		int x =0;
//		System.out.println(x<NaN); // NaN cannot be resolved to a variable
//		System.out.println(x<=NaN); // NaN cannot be resolved to a variable
//		System.out.println(x>NaN); // NaN cannot be resolved to a variable
//		System.out.println(x>=NaN);  // NaN cannot be resolved to a variable
//		System.out.println(x==NaN);// NaN cannot be resolved to a variable
		
//		for any x value including NaN the following expression return true
//		System.out.println(x!=NaN);// x cannot be resolved to a variable
		//NaN cannot be resolved to a variable
		
//		System.out.println(10<float.NaN); // Syntax error on token "float", invalid Expression
		
//		System.out.println(10<Float.NaN); // false
//		System.out.println(10<=Float.NaN);// false
//		System.out.println(10>Float.NaN);// false
//		System.out.println(10>=Float.NaN);// false
//		System.out.println(10==Float.NaN);// false
//		System.out.println(Float.NaN==Float.NaN);// false
//		System.out.println(10!=Float.NaN);// true
//		System.out.println(Float.NaN!=Float.NaN);// true
		
//		System.out.println(10<Float.NaN);// false
		
		
//		3.String concatenation operators
		
//		The only overloaded operator in java is (+) operator. 
//		Sometime it is said arithmetic addition operators 
//		and sometime it is said string concatenation opeartors.
		
		
//		Case1:-
//		If atleast one argument is String type  then
//		(+) operator access String concatenation operator.
		
//		Case2:-
//		If both argument is number type  then
//		(+) operator access arithmetic addition operator.
		
//		eg1:-
//		String a = "fahad";
//		int b=10, c=20, d=10;
//		System.out.println(a+b+c+d);// fahad102010 String concatenation operator
//		System.out.println(b+c+d+a);//40fahad this expression has same operator then order of precedence is from left to right so it start add value from left and concat with a. So it use both String concatenation operator and arithmetic addition operator 
//		System.out.println(b+c+a+d);// 30fahad10 this expression has same operator then order of precedence is from left to right so it start add value from left and concat with a. So it use both String concatenation operator and arithmetic addition operator 
//		System.out.println(b+a+c+d);// 10fahad2010
		
		
//		String a = "fahad";
//		int b=10,c=20,d=10;
//		System.out.println(a+b+c+d);//
//		System.out.println(b+c+d+a);
//		System.out.println(b+c+a+d);
//		System.out.println(b+a+c+d);
		
//		eg2:-
//		String a = "fahad";
//		int b=10, c=20, d=30;
//		a=b+c+d;
//		System.out.println(a); // Type mismatch: cannot convert from int to String
//		a=a+b+c;
//		System.out.println(a);// fahad1020
//		b=a+c+d;
//		System.out.println(b);// Type mismatch: cannot convert from String to int
//		b=b+c+d;
//		System.out.println(b);// 60
		
//		String a= "fahad";
//		int b=10, c=20, d=30;
////		a=b+c+d;
////		System.out.println(a);//Type mismatch: cannot convert from int to String
//		a=a+b+c;
////		System.out.println(a);
////		b=a+c+d;
//		b=b+c+d;
//		System.out.println(b);//60
		
		
		
//		4.Relational operators (<,<=,>,>=)
//		We can apply relational operator for every primitive type except boolean.
//		eg:-
//		System.out.println(10<20);// true
//		System.out.println('a'<20);// false
//		System.out.println('a'<97.6); //true
//		System.out.println('a'>'A'); // true
//		System.out.println(true>false);// The operator > is undefined for the argument type(s) boolean, boolean
//		
//		System.out.println(10<20);// true
//		System.out.println('a'<20);// false
//		System.out.println('a'<97.6);// true
//		System.out.println('a'>'A');// true
//		System.out.println(true<false);
		
//		System.out.println(10<=10);// true
//		System.out.println(10>=10);// true
		
		
		
//		 We cannot apply relational operators for object/Non-Primitive types
//		eg
//		System.out.println("durga123">"durga");// The operator > is undefined for the argument type(s) java.lang.String, java.lang.String
		
//		System.out.println("fahad">"fahad");
		
//		Nesting of relational operator is not allowed otherwise we will get CTE.
//		System.out.println(10<20<30);// The operator < is undefined for the argument type(s) boolean, int
		
//		System.out.println(10<20>30);// The operator > is undefined for the argument type(s) boolean, int
		
//		5.Equality operators (==, !=)  //Date&Time=3:43PM,Friday,02/10/2023
//		we can use == operator for address comparison
		
//		we can  apply equality operator for every primitive type including boolean also.
		
//		System.out.println(10==20);// false
//		System.out.println('a'=='b'); // false
//		System.out.println('a'==97.0); //true
//		System.out.println(false==false);// true
//		System.out.println(true==true);// true
//		System.out.println('a'=='A');// false
//		System.out.println('a'==97);// true
//		System.out.println(127==127);// true
//		System.out.println("fahad"=="fahad");// true
//		System.out.println("fah"=="abd");// false// yahan address compare nahi ho raha.
		
//		System.out.println(10==10);
//		System.out.println(10==20);
//		System.out.println('a'==97.0);
//		System.out.println('a'==97);
//		System.out.println('a'=='a');
//		System.out.println(false==false);// true
//		System.out.println('a'=='A');// false
//		System.out.println("fahad"=="fahad");// true
//		System.out.println("fah"=="abd");// false
		
//		we can apply equality operator for object type also
//		for object references r1 and r2 , r1== r2 iff both reference pointing to the same object
//		(reference comparison or address comparison)
		
//		Thread t1 = new Thread();
//		Thread t2 = new Thread();
//		Thread t3=t1;
//		System.out.println(t1==t3);// true
//		System.out.println(t1==t2);// false
		
//		Thread t1 = new Thread();
//		Thread t2 = new Thread();
//		Thread t3 = t1;
//		System.out.println(t1==t3);// true
//		System.out.println(t1==t2);// false
		
//		Thread t1 = new Thread();
//		Object O = new Object();
//		String S = new String("durga");
//		System.out.println(t1==O);// false
//		System.out.println(O==S);// false
//		System.out.println(S==t1);// Incompatible operand types String and Thread
		
//		Thread t1 = new Thread();
//		Object O = new Object();
//		String S = new String("durga");
//		System.out.println(t1==O);
//		System.out.println(O==S);
//		System.out.println(S==t1);// Incompatible operand types String and Thread
		
		
		
//		!= operators
//		we can use != operator for address comparison
//		System.out.println(10!=20);// true
//		System.out.println('a'!='b'); // true
//		System.out.println('a'!=97.0); //false
//		System.out.println(false!=false);// false
//		System.out.println(true!=true);// false
//		System.out.println('a'!='A');// true
//		System.out.println('a'!=97);// false
//		System.out.println(127!=127);// false
//		System.out.println("fahad"!="fahad");// false
//		System.out.println("fah"!="abd");// true
		
//		Thread t1 = new Thread();
//		Object O = new Object();
//		String S = new String("durga");
//		System.out.println(t1!=O);// true
//		System.out.println(O!=S);// true
//		System.out.println(S!=t1);// Incompatible operand types String and Thread
		
		// In general we can use == operator for address comparison 
//		and .equals() method for content comparison.
		
//		eg:
//		String S1 = new String("durga");
//		String S2= new String("durga");
//		System.out.println(S1==S2);//false // this compare address of variable/object
//		System.out.println(S1.equals(S2));// true// this method compare content of variable/objects
		
//		String S1 = new String("fahad");
//		String S2 = new String("fahad");
//		System.out.println(S1==S2);// false - address compare ho raha
//		System.out.println(S1.equals(S2)); // content/value compare ho rahi
//		
		
		
//		for any object reference r == null is always false
//		but null == null is always true
		
//		String s = new String("durga");
//		System.out.println(s==null);// flase
//		
//		String s = new String("durga");
//		System.out.println(s==null);// flase-- address compare and not matched so result is false.
		
//		String n = null;
//		System.out.println(n==null);// true.
//		System.out.println(null==null);// true
		
		
//		String n = null;
//		System.out.println(n==null);// true
//		System.out.println(null==null);// true
		
//		Lecture 19:- 
//		6.instanceOf operators
		//Date&Time=01:03PM,Friday,02/10/2023
//		We  can use instanceof operator to check whether given object is of particular type or not.
		
//		Syntax:-
//		r instance X -- r is object reference  X is class or interface name
//		Thread t = new Thread();
//		System.out.println(t instanceof Thread);// true
//		System.out.println(t instanceof Object);  // true
//		System.out.println(t instanceof Runnable);// true
		
//		Thread t = new Thread();
//		System.out.println(t instanceof Thread);
//		System.out.println(t instanceof Object);
//		System.out.println(t instanceof Runnable);
		
//		int[] l = new int[9];
//		System.out.println(l[0]);
//		Object o = new l.get[0];
		
	
//		 ArrayList<String> l = new ArrayList<String>(); 
//		// Create an ArrayList object
//		 Object O = new l.get[0];
		
//		for any class or interface X null instanceof X  is always false
//		System.out.println(null instanceof Thread); // false
//		System.out.println(null instanceof Runnable);// false
		
		
//		Thread t = new Thread();
//		System.out.println(t instanceof String);// Incompatible conditional operand types Thread and String
		
//		System.out.println(null instanceof Thread);// false
//		System.out.println(null instanceof Object);// false
//		System.out.println(null instanceof Runnable);// false
		
		
		
//		7.bitwise operators (&, |, ^)
//		 & -- And,  returns true iff both arguments are true
//		 | -- OR  returns true iff atleast one arguments are true
//		 cap symbol - ^ -- Exor, exclusive OR, X-OR, returns true iff both arguments are different
		
//		eg :- 
//		System.out.println(true & false);// false
//		System.out.println(true | false);// true
//		System.out.println(true ^ false); // true
		
//		System.out.println(true & false); // false
//		System.out.println(true | false);// true
//		System.out.println(true ^ false);// true
//		System.out.println(true ^ true);// false	
//		System.out.println(false ^ false);// false
		
		
//		we can apply these for integral types also
//		System.out.println(4&5);// 4
//		System.out.println(4|5);// 5
//		System.out.println(4^5);// 1
		
//		System.out.println( 4 & 5);
//		System.out.println(4 |5);
//		System.out.println(4 ^ 5);
		
//		System.out.println(100 & 101);// 100
//		System.out.println(11 & 11); // 11
		
//		System.out.println(~4);// -5
		
//		System.out.println(~5);// -6
		
//		System.out.println(~38); // -39
		
		
		 
		
//		bitwise complement operators (~):- tild symbol
//		We can apply for only integral type not for boolean type OW CTE.
//		System.out.println(~true);  // The operator ~ is undefined for the argument type(s) boolean
//		System.out.println(~4);// -5
		
//		Boolean complement operator : (!)--
//		We can apply this operator only for boolean type but not for integarl types.
//		System.out.println(!8);// The operator ! is undefined for the argument type(s) int
//		System.out.println(!false);// true
//		System.out.println(!true);// false
		
//		System.out.println(!10);
//		System.out.println(!true);
//		System.out.println(!false);
		
		
		
//		Note :-
//		&,|,^-- applicable for both boolean & integral
//		~ -- applicable for only integral but not for boolean
//		!  applicable only for boolean but not for integral
		
		
		
//		8.short circuit operators :(&&, ||)
		
//		These are exactly same as bitwise operators(&,|) except only following differences.
		
//				$,|		|		&&,||
//		-------------------------------				
//		1.Both argument	|	1. second argument		
//		should be evalu	|		evaluation is optional	
//		ated always.	|			
//		
//		2.relatively	|	2.relatively performance
//		performance 	|	high
////	low
//		
//		3.applicable	|	3. applicable only for boolean but not
//		for both boolean |	for integral
//		and integral types|
						
//		Note:- 1. x&&y == y will be evaluated iff x is true i.e. if x is false then y will not be evaluated.
		
//		2.  x||y - y will be evaluated iff x is false i.e. if x is true then y will not be evaluated.
			
//		eg_
//		int x= 10;
//		int y=15;
//		if(++x<10 & ++y>15) {
//			x++;
//		}else {
//			y++;
//		}
//		System.out.println(x+"..."+y);// 11...17
		
//		int x = 10;
//		int y=15;
//		if(++x<10 & ++y>15) {
//			x++;
//		}else {
//			y++;
//		}
//		System.out.println(x+"..."+y);
		
//		int x= 10;
//		int y=15;
//		if(++x<10 && ++y>15) {
//			x++;
//		}else {
//			y++;
//		}
//		System.out.println(x+"..."+y);// 11...16
		
//		int x= 10;
//		int y=15;
//		if(++x<10 | ++y>15) {
//			x++;
//		}else {
//			y++;
//		}
//		System.out.println(x+"..."+y);// 12...16
		
//		
//		int x= 10;
//		int y=15;
//		if(++x<10 || ++y>15) {
//			x++;
//		}else {
//			y++;
//		}
//		System.out.println(x+"..."+y);// 12...16
		
		
//		int x = 10;
//		int y=15;
//		if(++x<10 && ++y>15) {
//			x++;
//		}else {
//			y++;
//		}
//		System.out.println(x+"..."+y);// 11...16

//		int x = 10;
//		int y=15;
//		if(++x<10 | ++y>15) {
//			x++;
//		}else {
//			y++;
//		}
//		System.out.println(x+"..."+y);// 
		
//		int x = 10;
//		int y=15;
//		if(++x<10 || ++y>15) {
//			x++;
//		}else {
//			y++;
//		}
//		System.out.println(x+"..."+y);// 12...16
		
//		int x = 10;
//		int y=15;
//		if(++x<10 || ++y>15) {
//			x++;
//		}else {
//			y++;
//		}
//		System.out.println(x+"..."+y);
		
		
//		eg:- 2-
		
//		int x= 10;
//		if(++x<10 && (x/0>10)) {
//			System.out.println("Hello !!");
//		}else {
//			System.out.println("Hii !!");
//		}// o/p:- Hii
//		
//		int x= 10;
//		if(++x<10 & (x/0>10)) {
//			System.out.println("Hello !!");
//		}else {
//			System.out.println("Hii !!");
//		}// : / by zero
		
//		int x= 10;
//		if(++x<10 && (x/0>10)) {
//			System.out.println("Hello !!");
//		}else {
//			System.out.println("Hii !!");
//		}
		
//		int x= 10;
//		if(++x<10 & (x/0>10)) {
//			System.out.println("Hello !!");
//		}else {
//			System.out.println("Hii !!");
//		}
		
		
//		int x= 10;
//		if(++x<10 & (x/2>10)) {
//			System.out.println("Hello !!");
//		}else {
//			System.out.println("Hii !!");
//		}
		
//		int x= 10;
//		if(++x<10 | (x/0>10)) {
//			System.out.println("Hello !!");
//		}else {
//			System.out.println("Hii !!");
//		}
		
		
//		int x= 10;
//		if(++x<10 | (x/2>10)) {
//			System.out.println("Hello !!");
//		}else {
//			System.out.println("Hii !!");
//		}
		
//		int x= 10;
//		if(++x<10 || (x/0>10)) {
//			System.out.println("Hello !!");
//		}else {
//			System.out.println("Hii !!");
//		}
		
//		9.type cast operators
		
//		1. Implicit typecasting
//		2. Explicit Typecasting
		
//		1.Implicit:
//		Compiler is responsible to perform ITC.
//		whenever we are assinging smaller Datatype value to bigger datatype variable ITC will be performed.
//		It is also known as widening and upcasting
//		There is no loss of information in this typecasting
//		The following are various possible conversion where ITC will be performed.
		
//		Fig: Typecasting flow : ITC
//		byte--->Short---->
//						----->int-->long-->float-->double
//				char---->
		
//		eg:-
//		int x='a'; 
//		System.out.println(x);// 97// compiler convert char to int automatically by ITC
//		int x= 'a';
//		System.out.println(x);// 97
//		
//		double d = 10;
//		System.out.println(d);// 10.0
		
//		long l = 10;
//		System.out.println(l);// 10
		
		
//		float f = 10;
//		System.out.println(f);// 10.0
		
		
//		double d = 10;
//		System.out.println(d);// 10.0  compiler convert int to double automatically by ITC
		
//		double d = 'a';
//		System.out.println(d);// 97.0
		
//		long l = 'a';
//		System.out.println(l);// 97
		
//		float f = 'a';
//		System.out.println(f);// 97.0
		
		
		
//		2.Explicit Type casting:
//		Programmer is responsible to perform ETC.
//		whenever we are assinging bigger Datatype value to smaller datatype variable then  ETC will be required.
//		It is also known as narrowing and downcasting
//		There may a chance of loss of information in this typecasting
		
//		The following are various possibilities  where ETC will  required.
		
//		Fig: ETC
//		byte<---Short<----
//						<-----int<--long<--float<--double
//				char<----
		
//		L---R -- Implicit TypeCasting
//		R---L -- Explicit Typecasting
		
//		eg:-
//		int x = 130;
//		byte b = x;
//		System.out.println(b);// Type mismatch: cannot convert from int to byte
		
//		int x = 130;
//		byte b = (byte) x; //  cannot convert from int to byte
//		System.out.println(b);// -126
		
		
//		int x = 130;
//		byte b = (byte)x;
//		System.out.println(b);// -126
		
//		whenever we are assingnig bigger D.T value to smaller D.T variable by ETC The MSB will be lost
//		We have to consider only LSB
		
//		int x= 150;
//		short s = (short)x;
//		System.out.println(s);// 150
//		
//		int x = 150;
//		short s = (short)x;
//		System.out.println(s);// 150
		
//		byte  b = (byte)x;
//		System.out.println(b);// -106
		
//		int x = 150;
//		byte b= (byte)x;
//		System.out.println(b);// -106
		
//		int x = 509;
//		byte b = (byte)x;
//		System.out.println(b);// -3
		
//		int x = 509;
//		short s = (short)x;
//		System.out.println(s);// 509
		
		
		
		
		
//		Float to integral value -- digit after decimal point lost
//		double d = 130.456;
//		int x = (int)d;
//		System.out.println(x);// 130
//		byte b = (byte)d;
//		System.out.println(b);// -126
		
//		double d = 130.456;
//		int x = (int)d;
//		System.out.println(x);// 130
		
//		double d = 130.456;
//		byte b = (byte)d;
//		System.out.println(b);// -126
		
//		float f = 130.456f;
//		int x = (int)f;
//		System.out.println(x);// 130
		
		
//		Lecture 21: 10.Assignment operators : 
//		Three types
//		1.Simple assingment
//		2.chained 
//		3.compound
		
//		1.Simple:-   int x= 10;
//		int x = 10;
//		literal value 10 assigned to  var x
		
//		2.chained:-  
//		int a,b,c,d;
//		a=b=c=d=20;
//		System.out.println(a+".."+b+"..."+c+"..."+d);// 20..20...20...20
		
		
//		int a,b,c,d;
//		a=b=c=d=10;
//		System.out.println(a+".."+b+".."+c+".."+d);//10..10..10..10

//		We can't performed chain assingment directly at the time of declaration
//		eg:-
//		 int a =b=c=d=20;
//		 System.out.println(a+".."+b+"..."+c+"..."+d);// b cannot be resolved to a variable
//			c cannot be resolved to a variable
//			d cannot be resolved to a variable
//		 at OperatorsAndAssignment.main(OperatorsAndAssignment.java:555)
		
//		int b,c,d;
//		int a=b=c=d=20;
//		System.out.println(a+".."+b+"..."+c+"..."+d);// 20..20...20...20
//		int b,c,d;
//		int a=b=c=d=20;
//		System.out.println(a+".."+b+"..."+c+"..."+d);//20..20...20...20
		
//		3.Compound Assignment Operator:-
//		Sometime assignment operator mixed with some other operator then we called that operator is CAO.
		
//		int a= 20;
//		a+=30;// -- a=a+30
//		System.out.println(a);// 50
		
//		int a = 20;
//		a+=30;// -- a=a+30;
//		System.out.println(a);// 50

//		The following are all possible compound assingment operator in java
		
//		+=		&=		>>= right shift operator
//		-=		|=		>>>= unsigned right shift operator
//		*=		^=		<<= left shift operator
//		/=
//		%=   Total === 11
		
//		in case of CAO internal T.C will performed automatically
//		 byte b = 10;
//		 b=b+1;  // max(int,byte,int)
//		 System.out.println(b);// Type mismatch: cannot convert from int to byte
		 
//		byte b =10;
//		b=b+1;// cannot convert from int to byte
//		System.out.println(b);
//		
		
//		byte b = 10;
//		b++;
//		System.out.println(b);// 11

//		 byte b = 10;
//		 b++;
//		 System.out.println(b);// 11
		 
//		 byte b = 10;
//		 b+=1;  // += CAO internal TC is performed.
//		 System.out.println(b);//11
		
//		byte b =10;
//		b+=1; // b=b+1 
//		System.out.println(b);// 11

//		byte b = 127;
//		b+=1;
//		System.out.println(b);//-128
		
//		byte b =127;
//		b+=1;
//		System.out.println(b);// -128
		
//		byte b = 127;
//		b+=127;
//		System.out.println(b);//-2
		
//		byte b =127;
//		b+=129;
//		System.out.println(b);//0
		
//		byte b =127;
//		b+=130;
//		System.out.println(b);//1

//		byte b = 127;
//		b+=3;
//		System.out.println(b);//-126
		
//		int a,c;
//		int b=20; // simple
//		int d; // simple only declared
//		a=c=d=20; //chained 
//		a+= b-= c*= d/= 2; // compound
//		System.out.println(a+"..."+b+"..."+c+"..."+d);// -160...-180...200...10
		
//		int a,c;
//		int b=20;
//		int d;
//		a=c=d=20;//chained
//		a+= 10;
//		b-=5;
//		c*=4;
//		d/=7;
//		System.out.println(a+"..."+b+"..."+c+"..."+d);//30...15...80...2
		
//		int a=10;
//		a+=a+10;
//		System.out.println(a);//30
		
//		int a=10;
//		a+=a+=a+=a-+a-+30;
//		System.out.println(a);
		
//		int a=10;
//		a+=12+12;
//		System.out.println(a);//34

//		int a,b,c,d,e,f,g,h;
//		a=b=c=d=e=f=g=h=10;
//		a+=10;
//		b-=10;
//		c/=10;// return quotient
//		d*=10;
//		e%=10; // return reminder
//		
//		f&=10; // f&10==> 10&10 = Ans 10 - 1010&1010==1010=10
//		g|=10; // 
//		h^=10;// x-OR cap 
//		
//		System.out.println(a); // 20
//		System.out.println(b); // 0
//		System.out.println(c); // 1
//		System.out.println(d); // 100
//		System.out.println(e); /// 0
//		System.out.println(f); // 10
//		System.out.println(g);// 10
//		System.out.println(h); // 0
		
		
//		11.conditional operators: (? :) Ternary operator
//		The only possible ternary operator in java is conditional operator
//		Syntax : 
//		int  x= (10<20)? 30:40;
		
//		is same as in if else condition
//		if(10<20) {
//			System.out.println("30"); // 30
//		}else {
//			System.out.println("40");
//		}
//		System.out.println(x);// 30
//		
//		int x=  (10<20) ? 30 :40;
//		System.out.println(x);//30
		
//		int  x;
//		if(20<30) {
//			x=10;
//		}
//		else {
//			x=20;
//		}
//		System.out.println(x);// 10
		
		
//		neasting of conditional operator is also possible
		
//		 int x = (10>20)?30 :(40>50)?60:70;
//		 System.out.println(x);// 70
//		is same as 
//		if(10>20) {
//			System.out.println("30"); 
//		}else if(40>50) {
//			System.out.println("60");
//		}else {
//			System.out.println("70");// 70
//		}
		
		
//		int x =(10>20)?30 : (40>90)? 40 : 60;
//		System.out.println(x);// 60
		
//		int x= (10>=30)?30:40;
//		System.out.println(x);//40
		
		
//		int x= (10<10) ? 10 : (10>30) ? 20 : (10<=5) ? 30 : (10>=60)? 40 : (10==10) ? 50 :60;
//		System.out.println(x);// 50
		
		
//		int x= (10<10) ? 10 : (10>30) ? 20 : (10<=5) ? 30 : (10>=60)? 40 : (10==20) ? 50 :60;
//		System.out.println(x);// 60
			
		
//		int x= (10<10) ? 10 : (10>30) ? 20 : (10<=5) ? 30 : (10>=60)? 40 : (10!=10) ? 50 :(97.0==97) ?  60  :70;
//		System.out.println(x);// 60
		
//		int x= (10<10) ? 10 : (10>30) ? 20 : (10<=5) ? 30 : (10>=60)? 40 : (10!=10) ? 50 :(97.1==97) ?  60  :70;
//		System.out.println(x);// 70
		
		
		
//		System.out.println(10!=10);//falase
		
		
//		a++, ++a -- unary operator because only one operand is there i.e "a"
//		a+b -- binary operator because two  operand is there i.e "a" and "b"
//		(c)?b:d; ternary operator because three  operand is there i.e "a" , "b" and "c"
		
//		c,b,d are 3 operand
		
//		if(true&&false) {
//			System.out.println("Hii");
//		}
//		else
//		{
//			System.out.println("Hello");
//		}
//		// hello
		
//		if(10>20 && 30<40) {
//			System.out.println("Hii");
//		}else {
//			System.out.println("Hello");
//		}// Hello
		
		
//		if(true && true && true) {
//			System.out.println("Hello");
//		}else
//		{
//			System.out.println("Hello");
//		}// Hello
//		
//		if(true & true & true) {
//			System.out.println("Hello");
//		}else
//		{
//			System.out.println("Hello");
//		}// Hello
		
//		if(10<20 && 30<60 && 40<80 && 50<90 && 60<90) {
//			System.out.println("Hello");
//		}else {
//			System.out.println("Hii");
//		}// Hello
		
//		12.new operators  -- theory only
//		we can use this new operator to create object of class
//		eg:- Test t = new Test();
//		After creating an object constructor will be executed to perform
//		initialization of object not for creation of object
		
//		
//		basically after creation of test class object by using new keyword constructor immideately execute (automatically) and perform initialization of created object
//		so, The  role of constructor is to perform initialization of object not creation of object.
		
		
		
//		13.[] operators -- theory only
		
//		we  can use this operator to declare and create arrays only
//		eg:- 
//		int[] x = new int[10];
//		In general other than arrays we are not going to use this operator anywhere else
		
//		int[] x = new int[10];
		
//		Lecture 22: //		
//		
//		14.operator precedence
		
//		Java operator precedence chart
		
//		1. unary operator
//		[],x++,x--
//		++x,--x,~,|
//		new, <type>
		
//		2.Arithmetic Operator
//		*,/,%
//		+,-
		
//		3.Shift operator
//		>>,>>>,<<
		
//		4.Comparision operator
//		<,<=,>,>=,instanceof
		
//		5.equality operator:
//		==, !=
		
//		6. Bitwise operator
//		&,^,|
		
//		7.Short Circuit operator
//		&&, ||
		
//		8.conditional operator
//		? : 
		
//		9.Assignment operator
//		=, +=, -=, *=     .args.clone(). all  11 CAO
		
//		15.Evaluation order of operands
		
//		If we apply any operator  on operand all operand will evaluated from left to right
		
//		System.out.println(m1(1)+m1(2)*m1(3)/m1(4)+m1(5)*m1(6)); // 32
//		 1+2*3/4+5*6
//		 1+6/4+5*6
//		 1+1+30
//		 2+30
//		 32
		
		System.out.println(m1(1)+m1(2)*m1(3)/m1(4)+m1(5)*m1(6));
		
//		System.out.println(m1(1)+m1(2)*m1(3)/m1(4)+m1(5)*m1(6)*m1(7)/m1(8)+m1(9)-m1(10));// 27
//	    1+2*3/4+5*6*7/8+9-10
//		1+6/4+5*6*7/8+9-10
//		1+1+5*6*7/8+9-10
//		1+1+30*7/8+9-10
//		1+1+210/8+9-10
//		1+1+25+9-10
//		2+25+9-10
//		27+9-10
		36-10
		
//		If multiple operator has same precedence then it execute from left to right
//		and right to left accrdng to associativity.
		
//		For more detail : See Java operator precedence table
		
//		Lecture 23 : 
//		16.new vs newInstance()
//		1.new : - We can use this new operator to create an object , if we know classname at the beggining
//		eg:- 
//		Test t = new Test();
//		Student S = new Student();
//		Customer C = new Customer();
		
//		2. newInstance():- is a method in Class.class we can use newInstance method to create object, 
//		if we don't know class name at begining and it is available dynamically at runtime from
//		CLA,file,database.
//		eg: above
//		17.instanceOf Vs isInstance()
//		18.ClassNotFoundException Vs NoClassDefFoundError
//		both above 17 & 18 point are theory based and interview question only 
		
		
		
		


	}
//	public static int m1(int i) {
//	System.out.println(i);// 1,2,3,4,5,6
//	System.out.println(i);//1,2,3,4,5,6.7,8,9,10
//	return i;
//}
	
	public static int m1(int i) {
		System.out.println(i);
		return i;
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2024-01-01 23:29:38.232
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2024-01-01 23:29:38.233
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2024-01-02 00:36:06.154
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Flow_Control {

	public static void main(String[] args) {
		// curly braces is optional everywhere except switch-Case
				// Flow Control
				
//				1. Selection Statement
//				2. Iterative statement
//				3. Transfer Statement
				
//				1.  Selection Statement
//					a. if-else
//				    b. Switch-Case
				
//				2.  Iterative statement
//					a. while()
//					b. do-while()
//					c. for()
//					d. for-each loop
				
//				3.  Transfer Statement
//					a. break
//					b. continue
//					c. return
//					d. try-catch-finally
//					e. assert(1.4v)
				
//				1. a if-else
		
//				int x = 20;
//				if(x) {// Type mismatch: cannot convert from int to boolean
//					System.out.println("Hello!!");
//				}else {
//					System.out.println("Hii!!");
//				}
//		        int x = 10;
//		        if(x) {// Type mismatch: cannot convert from int to boolean
//		        	System.out.println("Hii");
//		        }
//		        else {
//		        	System.out.println("Hello");
//		        }
		
//				int x= 10;
//				if(x=20) {// Type mismatch: cannot convert from int to boolean
//					System.out.println("Hello!!");
//				}else {
//					System.out.println("Hii!!");
//				}\
		
//				int x=10;
//				if(x=20) {// Type mismatch: cannot convert from int to boolean
//					System.out.println("Hello!!");
//				}
//				else {
//					System.out.println("Hii!!");
//				}
				
//				int x=20;
//				if(x==20) {
//						System.out.println("Hello");
//				}else {
//					System.out.println("Hii");
//				}
				
				
				
//				int x = 10;
//				if(x == 20) {
//					System.out.println("Hello!!");
//				}else {
//					System.out.println("Hii!!");// Hii!!
//				}
//				
//				int x=10;
//				if(x==20) {
//					System.out.println("Hello!!");
//				}else {
//					System.out.println("Hii!!");
//				}
		
//				boolean b = true;
//				if(b=false) {
//					System.out.println("Hello!!");
//				}else {
//					System.out.println("Hii!!");// Hii !!
//				}
		
//				boolean b = true;
//				if(b=false){
//					System.out.println("hello");
//				}else {
//					System.out.println("Hii");
//				}
//		
//				boolean b = false;
//				if(b==false) {
//					System.out.println("Hello");
//				}else {
//					System.out.println("Hii");
//				}// Hello
			
//				boolean b = false;
//				if(b==true) {
//					System.out.println("Hello");
//				}else {
//					System.out.println("Hii");
//				}// Hii
				
				
				
//				boolean b= false;
//				if(b=false) {
//					System.out.println("Hello!!");// Hello!!
//				}else {
//					System.out.println("Hii!!");
//				}
				
				if(10>20) {
					System.out.println("Hello");
				}else if(10>30){
					System.out.println("Hii");
				}else if(2>0) {
					System.out.println("Fahad");
				}else if() {
					30<10
				}
				
//				if(true)
//					System.out.println("Hello");// Hello
//				if(true);
//					
//				if(true)
//					int x=10;//
//				Syntax error, insert ". class" to complete Expression
//				Syntax error, insert "AssignmentOperator Expression" to complete Assignment
//				Syntax error, insert ";" to complete Statement
//				The left-hand side of an assignment must be a variable
//				x cannot be resolved to a variable
				
//				if(true) {
//					int x= 10;
//				}
				
//				if(true)
//					if(true)
//						System.out.println("Hello!!");// Hello!!
//					else
//						System.out.println("Hii!!");
//				int x=10;
//				if(x==90) {
//					System.out.println("Hello 10");
//				}else if(x==20) {
//					System.out.println("Hello 20");
//				}else if(x==30) {
//					System.out.println("Hello 30");
//				}else if(x==10) {
//					System.out.println("Hello 10");// Hello 10
//				}else if(x==10) {
//					System.out.println("Hello 120");
//				}else {
//					System.out.println("Hello 80");
//				}
//				
				
//				b. Switch-Case
//				int x=10;
//				switch(x) {
//					case 1:
//							Action-1;
//							break;
//					case 2:
//						Action 2:
//							break;
//					.
//					.
//					.
//					case n:
//						action n;
//						break;
//						
//					default:
//						default action;
//					
//				}
				
//				byte  b = 120;
//				switch(b) {
//				case 1:
//					System.out.println("case 1");
//				case 2:
//					System.out.println("Case 2");
//				case 120:
//					System.out.println("Case 120");
//				}
//				int x =10;
//				switch(x){
//					// Empty switch Statement is also valid
//				}
//				int x=10;
//				switch(x) {
//					System.out.println("Void switch CTE");// Syntax error on token "{", SwitchLabelDefaultExpr expected after this token
//				}
				
//				int x= 20;
//				int y=30;
//				switch(x) {
//				case 10:
//					System.out.println(10);
//					break;
//				case y;
//					System.out.println(20);// Syntax error, insert ":: IdentifierOrNew" to complete ReferenceExpression, Syntax error, insert ":" to complete SwitchLabel
//					break;
//				}
				
//				int x= 20;
//				final int y=30;
//				switch(x) {
//				case 10:
//					System.out.println(10);
//					break;
//				 case y;
//					System.out.println(20);
//					break;
//				}
				
				
//				int x = 20;
//				switch(x+1) {
//				case 20:
//					System.out.println("case 10 switch label expression");
//					break;
//				case 1+20:
//					System.out.println("constant expression");
//				}
				
//				byte b = 10;
//				switch(b) {
//					case 10:
//					System.out.println("Case 10 in range");
//					case 100:
//						System.out.println("Case 100 in range");
//					case 10000:
//						System.out.println("Case 1000 out of  range");// Type mismatch: cannot convert from int to byte
//				}
				
//				byte b = 10;
//				switch(b+1) {// b+1 -- int dega
//				case 10:
//					System.out.println("Case 10 in range");
//					case 100:
//						System.out.println("Case 100 in range");
//					case 11:
//						System.out.println("Case 11 in range");
//					case 10000:
//						System.out.println("Case 1000 out of  range");
//				}
				
//				int x = 10;
//				switch(x) {
//				case 97:
//					System.out.println("case 97");// Duplicate case
//					break;
//				case 98:
//					System.out.println(98);
//					break;
//				case 99:
//					System.out.println(99);
//					break;
//				case 100:
//					System.out.println(100);
//					break;
//				case 'a':
//					System.out.println("case a");// Duplicate case
//					break;
//				}
				
				
//				Fall through inside switch:
//				int x =0; // 0,1
//				switch(x) {
//				case 0:
//					System.out.println(0);
//				case 1:
//					System.out.println(1);
//					break;
//				case 2:
//					System.out.println(2);
//				}
				
//				int x =1; 
//				switch(x) {// 1
//				case 0:
//					System.out.println(0);
//				case 1:
//					System.out.println(1);// 1
//					break;
//				case 2:
//					System.out.println(2);
//				}
				
//				int x =2; 
//				switch(x) {
//				case 0:
//					System.out.println(0);
//				case 1:
//					System.out.println(1);
//					break;
//				case 2:
//					System.out.println(2);// // 2, deff
//				default:
//					System.out.println("deff");// 2, deff
//				}
//				
//				int x =3; 
//				switch(x) {
//				case 0:
//					System.out.println(0);
//				case 1:
//					System.out.println(1);
//					break;
//				case 2:
//					System.out.println(2);
//				default:
//				System.out.println("deff");//  deff
//				}
				
//				int x =0;
//				switch(x) {
//				default: /// not recommended
//					System.out.println("deff case'");
//				case 0:
//					System.out.println(0);// 0
//					break;
//				case 1:
//					System.out.println(1);
//				case 2:
//					System.out.println(2);
//				}
				
//				int x =1;
//				switch(x) {
//				default: /// not recommended
//					System.out.println("deff case'");
//				case 0:
//					System.out.println(0);
//					break;
//				case 1:
//					System.out.println(1);// 1, 2
//				case 2:
//					System.out.println(2);
//				}
				
				
//				int x =2;
//				switch(x) {
//				default: /// not recommended
//					System.out.println("deff case'");
//				case 0:
//					System.out.println(0);
//					break;
//				case 1:
//					System.out.println(1);
//				case 2:
//					System.out.println(2);// 2
//				}
				
//				int x =3;
//				switch(x) {
//				default: /// not recommended
//					System.out.println("deff case'"); // deff case' , 0
//				case 0:
//					System.out.println(0);
//					break;
//				case 1:
//					System.out.println(1);
//				case 2:
//					System.out.println(2);
//				}
				
				
//				Lecture 27: 
				
//				2.  Iterative statement
//				a. while()
//				b. do-while()
//				c. for()
//				d. for-each loop
				
//				a. while()// when don't know no of iteration in  advance 
				
//				while(1) {
//					System.out.println("Integr type");// Type mismatch: cannot convert from int to boolean
		//
//				}
				
//				while (true) {// infinit while loop
//					System.out.println("hello");
//				}
				
//				while(true);
//				while(true)
//					int x =20;
//				while(true) {
//					int x= 20;
//					
//				}
				
//				while(true) {
//					System.out.println("Hello");
//				}
//				System.out.println("Unreachable Statement ");// Unreachable code
				
//				while(false) {// 	Unreachable code
//					System.out.println("Unreachable Statement");
//				}
//				System.out.println("reachable");
//				
				
//				int a=10;
//				int b=20;
//				while(a<b) {
//					System.out.println("Hello");
//				}
//				System.out.println("Reachable code");
				
//				int a=10, b=20;
//				while(a>10) {
//					System.out.println("Hello");
//				}
//				System.out.println("Hii");// Hii
				
				
//				final int a=10;
//				final int b=20;
//				while(a<b) {
//					System.out.println("Hello");
//				}
//				System.out.println("Unreachable code due to final variable");// Unreachable code
				
				
//				
//				final int a=10, b=20;
//				 while(a>10) {// Unreachable code
		//
//					System.out.println("Hello");
//				}
//				System.out.println("Hii");
//				
//				 
//				do while() loop
//				boolean x =true;
//				 do;
//					 while(true);
				 
//				do
//					 System.out.println("Fahad");// Infinite do while loop
//				while(true);
//						
//				do;
//				while(true);
				
//				do
//					System.out.println("Fahad");
//				while(false);
				
//				do
//					System.out.println("Fahad");
//				while(true);
				
//				do
//					System.out.println("Fahad");
//				while(true);
//					System.out.println("Fahad");
				
//				do
//					System.out.println("Fahad");// Syntax error, insert "while ( Expression ) ;" to complete BlockStatements
//					System.out.println("Fahad");
//				while(true);
				
//				do
//				{
//					System.out.println("Fahad");
//					System.out.println("Fahad");
//					System.out.println("Fahad");
//				}
//				while(true);
				
//				do
//					int x= 10;
//				while(true);
				
//				do {
//					int x= 10;
//					System.out.println("Fahad");
//					System.out.println(x);
//				}
//				while(true);
				
//				do 
//					while(true)
//					System.out.println("Fahad");
//					while(false);
				
//				do
//					while(true)
//						System.out.println("true");
//				while(false);
				
//				Unreachability:-
				
//				do {
//					System.out.println("Hello !!");
//				}
//				while(true);
//				System.out.println("Fahad");// Unreachable code
				
//				do {
//					System.out.println("Hello!!");
//				}
//				while(false);
//				System.out.println("Hii!!");
				
//				int a=10, b=20;
//				do {
//					System.out.println("Hello");
//				}while(a<b);// true
//				System.out.println("Hii");
//				int a=10, b=20;
//				do 
//				System.out.println("Hello");
//				while(a<b);
//				System.out.println("Hello");
//				
				
//				final int a=10, b=20;
//				do 
//				System.out.println("Hello");
//				while(a<b);
//				System.out.println("Hello"); // Unreachable code due to final a & b variable
				
				
//				int a=10, b=20;
//				do {
//					System.out.println("Hello");
//				}while(a>b);
//				System.out.println("Hii");
				
//				final int a=10, b=20;
//				do {
//					System.out.println("hello");
//				}while(a<b);
//				System.out.println("hii'");// Unreachable code
				
//				final int a=10, b=20;
//				do {
//					System.out.println("hello");
//				}while(a>b);
//				System.out.println("hii'");
				
//				Lecture 28 :- for & for each loop
				
//				For Loop:-
//				If we know the number of iteration in advace then we can go for for loop
				
//				for(Initialization_Section;Condition_ceck;incre_decre_Section) {
//					loop body
//				}
//				
//				Steps of execution of for loop
				
//				1. initialization
//				2. condition check
//				3. execute loop body
//				3. incre-decrem section
//				5. condition check
//				6. execute loop body
//				7. incre-decrem section
//				8. condition check
//				9. execute loop body
				
//				eg: 
//				for(;true;) { // Infinite loop
//					System.out.println("fahad");
//				}
				
//				for(;;) {// Infinite loop
//					System.out.println("fahad");
//				}
		  
//				for(int i=0; true;i++)// Infinite loop
//					System.out.println("Fahad");
				
//				for(int i=0;true;i++)
//					int x= 10;
//				Syntax error, insert ". class" to complete Expression
//				Syntax error, insert "AssignmentOperator Expression" to complete Assignment
//				Syntax error, insert ";" to complete Statement
//				The left-hand side of an assignment must be a variable
//				x cannot be resolved to a variable
				
//				for(int i=0;true;i++)
//					;
				
//				for(int i=0;true;i++);
				
//				for(int i=10;i<10;i++)
//					int z=10;
				
//				Initialization section:
				
//				for(int x=9,y=10,z=30;x<10;x++)
//					System.out.println("fahad");
				
//				for(int i=0, int j=0; i<10;i++)// Syntax error on token "int", delete this token
//					System.out.println("Fahad");
				
//				for(String S ="Fahad"; S=="Fahad"; S="Ali")
//					System.out.println("fahad");
				
//				for(String S ="Fahad", int x=10; S=="Fahad"; S="Ali")
//					System.out.println("fahad");// Syntax error on token "int", delete this token
												//Type mismatch: cannot convert from int to String
					
//				for(String S ="Fahad", K="Kite"; S=="Fahad"|| K=="Kite"; S="Ali")
//					System.out.println("fahad");
				
//				for(String S ="Fahad", K="Kite"; S=="fahad"|| K="Kite"; S="Ali")
//					System.out.println("fahad");//The operator <= is undefined for the argument type(s) java.lang.String, java.lang.String
												//Syntax error on token "=", <= expected
				
				
//				for(String S ="Fahad", K="Kite"; S=="fahad"|| K=="Kite"; S="Ali")
//					System.out.println("fahad");
				
				
//				for(String S ="Fahad", K="Kite"; S=="Fahad"&& K=="Kite"; S="Ali")
//					System.out.println("fahad");
				
//				int i=0;
//				for(System.out.println("Hello u are sleeping");i<3;i++)
//				{
//					System.out.println("No U are sleeping");
//				}
//				Hello u are sleeping
//				No U are sleeping
//				No U are sleeping
//				No U are sleeping
				
				
//				Condition check:-
//				we can take any valid java expression but shoul be of type boolean
//				This part is optional and if we are not anything then compiler by default will place true
				
//				eg:
//				for(int x=0;true;x++) {
//					System.out.println("hello");
//				}
				
//				Icrement?Decrement Section:
				
//				int i=0;
//				for(System.out.println("'hello 1");i<3;System.out.println("Hii 2")) {
//					i++;
//				}
				
//				int i=0;
//				for(System.out.println("'hello 1");i<3;System.out.println("Hii 2")) {
//					
//				}
//				all three part of loop independent of each other and optional
//				for(;;) {
//					
//				}
//				for(;;) {
//					System.out.println("Hello");
//				}
				
//				for(;;);// infinite loop
				
//				for(System.out.println("Fahad");;);
				
//				Unreachability:
				
//				for(int i=0;true;i++) {
//					System.out.println("Accessible");
//				}
//				System.out.println("Non-Accessible");// Unreachable code
				
//				for(int i=0;false;i++) {
//					System.out.println("Non-Accessible");// Unreachable code
//				}
//				System.out.println("Accessible");
				
//				for(int i=0; ;i++) {// by default true
//					System.out.println("Reachable");
//				}
//				System.out.println("Unreachable code");
				
//				 int a=10, b=20;
//				for(int i=0;a<b;i++) {
//					System.out.println("Hello");
//				}
//				System.out.println("hii");
				
//				int a=10,b=20;
//				for(int i=10;a>b;i++) {
//					System.out.println("Hello");
//				}
//				System.out.println("Hii");
				
				
//				final int a=10, b=20;
//				for(int i=0;a<b;i++) {
//					System.out.println("Hello");
//				}
//				System.out.println("Hii");
				
//				final int a=10, b=20;
//				for(int i=0;a>b;i++) {
//					System.out.println("Hello");// Unreachable code
//				}
//				System.out.println("Hii");
				
//				For-Each Loop(Enhanced for loop)
//				Introduced in 1.5 v. specially designed for Arrays & Collection to retrive element of array and collection
				
//				Case 1:-
//				To print an element of 1-D Array
				
//				int[] x = {10,20,30,40};
				
//				Normal for loop
				
//				for(int i=0;i<x.length;i++) {
//					System.out.println(x[i]);
//				}
				
//				for(int i=0;i<x.length;i++) {
//					System.out.println("x[i]="+x+""+i+".."+x[i]);
//				}
				
//					  x[i]=[I@2c7b84de0..10
//				      x[i]=[I@2c7b84de1..20
//				      x[i]=[I@2c7b84de2..30
//				      x[i]=[I@2c7b84de3..40
				
//				for(int i=0;i<x.length;i++) {
//					System.out.println("x[i]="+x[i]);
//				}
				
//				for(int x1:x) {
//					System.out.println(x1);
//				}
				
//				To_Print element of 2_D Array
//				int[][] x = {{10,20,30},{40,50}};
				
//				for(int i=0;i<x.length;i++) {
//					for(int j=0;j<x[i].length;j++) {
//						System.out.println(x[i][j]);// 10,20,30,40,50
//					}
//				}
				
//				for(int[] x1 : x) {
//					for(int x2 : x1) {
//						System.out.println(x2);// 10,20,30,40,50
//					}
//				}
				
//				To print element of 3-D array
				
//				int[][][] x= {{{10,20},{30,40}},{{50,60,70},{80,90}}};
				
//				for(int x1[][]:x) {
//					for(int x2[]:x1) {
//						for(int x3:x2) {
//							System.out.println(x3);// 10,20,30,40,50, 60,70,80,90
//						}
//					}
//				}
				
//				for(int i=0;i<x.length;i++) {
//					for(int j=0;j<x[i].length;j++) {
//						for(int k=0;k<x[i][j].length;k++) {
//							System.out.println(x[i][j][k]);// 10,20,30,40,50, 60,70,80,90
//						}
//					}
//				}
				
//				for(int i=0;i<10;i++) {
//					System.out.println("No of Itearion :"+(i+1)+"   With value :"+i);
//				}
//				
//				we can write equivalent for each loop directly for above genral purpose for loop
//				
//				for(int  : x) {
//					System.out.println(); // not possible
//				}
				
//				int[] x = {10,20,30,40,50}; // print element in reverse order
//				for(int i=x.length-1;i>=0;i--) { 
//					System.out.println(x[i]);
//				}
				
//				int[] x= {10,20,30,40,50};
////				for(int x1 : x) {
////					System.out.println(x1);
////				}
//				for(int x1 : x) {
//					System.out.println(x1);
//					
//				}
				
//				Lecture 29: Break and continue  
//				Transfer Statement:
//				1. Break 
//				2. Continue
				
//				Trnafer statement is used ot trnafer the control from one place to another
				
//				 can use break inside switch to stop fall through
				
//				int x=0;
//				switch(x)
//				{
//				case 0:
//					System.out.println(0);// 0
//				case 1:
//					System.out.println(1);// 1
//					break;// 0,1
//				case 2:
//					System.out.println(2);
//				default:
//					System.out.println("def");
//				}
				
				
//				Inside loops: to break loop execution based on some condition:
				
//				for(int i=0;i<10;i++) {
//					if(i==5)
//						break;// 0,1,2,3,4 break means tootna aage nahi jaega.
//					System.out.println(i);
//				}
				
//				Inside lAbeled blocks:to break block execution based on some condition:
				
//				int x=10;
//				l1:{
//				System.out.println("begin");
//				if(x==10)
//					break l1;
//				System.out.println("end");
//				}
//				System.out.println("hello");
//				o/p begin, hello
				
//				byte b= 10;
//				l1:{
//					System.out.println("Begin Label");
//					if(b==10)
//						break l1;
//					System.out.println("END Label");
//					
//				}
//				System.out.println("Hello Label");// Begin Label, 	Hello Label
				
//				int x=10;
//				if(x==10)
//					break;
//				System.out.println("Hello");// break cannot be used outside of a loop or a switch
				
//				Continue statement: 
//				skip current iteration and continue next iteration
				
//				for(int i=0;i<10;i++) {
//					if(i%2==0)
//						continue;
//					System.out.println(i);// 1,3,5,7,9
//					
//				}
//				we can use continue statement pnly inside loop 
				
//				int x=10;
//				if(x==10)
//					continue;
//				System.out.println("hello");// continue cannot be used outside of a loop
				
//				Labelled Break & COntinue:
//				l1:{
//					for() {
//						l2:{
//							for() {
//								for() {
//									break l1;// See video
//									break l2;
//									break;
//								}
//							}
//						}
//					}
				
				
//				}
					
				
//				l1:
//					for(int i=0;i<3;i++) {
//						for(int j=0;j<3;j++) {
//							if(i==j) 
//								continue l1;
//							System.out.println(i+"..."+j);
//							
//						}
//					}
//				O/P
//				1...0
//				2...0
//				2...1
				
//				l1:
//					for(int i=0;i<3;i++) {
//						for(int j=0;j<3;j++) {
//							if(i==j) 	
//								continue;
//							System.out.println(i+"..."+j);
//							
//						}
//					}
				
//				O/P:
//				0...1
//				0...2
//				1...0
//				1...2
//				2...0
//				2...1
				
//				l1:
//					for(int i=0;i<3;i++) {
//						for(int j=0;j<3;j++) {
//							if(i==j) 	
//								break;
//							System.out.println(i+"..."+j);
//							
//						}
//					}
//				O/P:
//				1...0
//				2...0
//				2...1
				
//				l1:
//					for(int i=0;i<3;i++) {
//						for(int j=0;j<3;j++) {
//							if(i==j) 	
//								break l1;
//							System.out.println(i+"..."+j);
//							
//						}
//					}
//				O/P: No output
				
				
//				do-While Loop:Vs Continue/dangerous combination
				
				
//				int x=0;
//				do {
//					x++;
//					System.out.println(x);
//					if(++x<5)
//						continue;
//					x++;
//					System.out.println(x);
//				}while(++x<10);
//				O/P:
//				1
//				4
//				6
//				8
//				10

	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2024-01-02 00:36:06.158
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2024-01-02 00:36:06.159
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2024-01-02 00:36:06.195
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Flow_Control {

	public static void main(String[] args) {
		// curly braces is optional everywhere except switch-Case
				// Flow Control
				
//				1. Selection Statement
//				2. Iterative statement
//				3. Transfer Statement
				
//				1.  Selection Statement
//					a. if-else
//				    b. Switch-Case
				
//				2.  Iterative statement
//					a. while()
//					b. do-while()
//					c. for()
//					d. for-each loop
				
//				3.  Transfer Statement
//					a. break
//					b. continue
//					c. return
//					d. try-catch-finally
//					e. assert(1.4v)
				
//				1. a if-else
		
//				int x = 20;
//				if(x) {// Type mismatch: cannot convert from int to boolean
//					System.out.println("Hello!!");
//				}else {
//					System.out.println("Hii!!");
//				}
//		        int x = 10;
//		        if(x) {// Type mismatch: cannot convert from int to boolean
//		        	System.out.println("Hii");
//		        }
//		        else {
//		        	System.out.println("Hello");
//		        }
		
//				int x= 10;
//				if(x=20) {// Type mismatch: cannot convert from int to boolean
//					System.out.println("Hello!!");
//				}else {
//					System.out.println("Hii!!");
//				}\
		
//				int x=10;
//				if(x=20) {// Type mismatch: cannot convert from int to boolean
//					System.out.println("Hello!!");
//				}
//				else {
//					System.out.println("Hii!!");
//				}
				
//				int x=20;
//				if(x==20) {
//						System.out.println("Hello");
//				}else {
//					System.out.println("Hii");
//				}
				
				
				
//				int x = 10;
//				if(x == 20) {
//					System.out.println("Hello!!");
//				}else {
//					System.out.println("Hii!!");// Hii!!
//				}
//				
//				int x=10;
//				if(x==20) {
//					System.out.println("Hello!!");
//				}else {
//					System.out.println("Hii!!");
//				}
		
//				boolean b = true;
//				if(b=false) {
//					System.out.println("Hello!!");
//				}else {
//					System.out.println("Hii!!");// Hii !!
//				}
		
//				boolean b = true;
//				if(b=false){
//					System.out.println("hello");
//				}else {
//					System.out.println("Hii");
//				}
//		
//				boolean b = false;
//				if(b==false) {
//					System.out.println("Hello");
//				}else {
//					System.out.println("Hii");
//				}// Hello
			
//				boolean b = false;
//				if(b==true) {
//					System.out.println("Hello");
//				}else {
//					System.out.println("Hii");
//				}// Hii
				
				
				
//				boolean b= false;
//				if(b=false) {
//					System.out.println("Hello!!");// Hello!!
//				}else {
//					System.out.println("Hii!!");
//				}
				
				if(10>20) {
					System.out.println("Hello");
				}else if(10>30){
					System.out.println("Hii");
				}else if(2>0) {
					System.out.println("Fahad");
				}else if() {
					30<10
				}
				
//				if(true)
//					System.out.println("Hello");// Hello
//				if(true);
//					
//				if(true)
//					int x=10;//
//				Syntax error, insert ". class" to complete Expression
//				Syntax error, insert "AssignmentOperator Expression" to complete Assignment
//				Syntax error, insert ";" to complete Statement
//				The left-hand side of an assignment must be a variable
//				x cannot be resolved to a variable
				
//				if(true) {
//					int x= 10;
//				}
				
//				if(true)
//					if(true)
//						System.out.println("Hello!!");// Hello!!
//					else
//						System.out.println("Hii!!");
//				int x=10;
//				if(x==90) {
//					System.out.println("Hello 10");
//				}else if(x==20) {
//					System.out.println("Hello 20");
//				}else if(x==30) {
//					System.out.println("Hello 30");
//				}else if(x==10) {
//					System.out.println("Hello 10");// Hello 10
//				}else if(x==10) {
//					System.out.println("Hello 120");
//				}else {
//					System.out.println("Hello 80");
//				}
//				
				
//				b. Switch-Case
//				int x=10;
//				switch(x) {
//					case 1:
//							Action-1;
//							break;
//					case 2:
//						Action 2:
//							break;
//					.
//					.
//					.
//					case n:
//						action n;
//						break;
//						
//					default:
//						default action;
//					
//				}
				
//				byte  b = 120;
//				switch(b) {
//				case 1:
//					System.out.println("case 1");
//				case 2:
//					System.out.println("Case 2");
//				case 120:
//					System.out.println("Case 120");
//				}
//				int x =10;
//				switch(x){
//					// Empty switch Statement is also valid
//				}
//				int x=10;
//				switch(x) {
//					System.out.println("Void switch CTE");// Syntax error on token "{", SwitchLabelDefaultExpr expected after this token
//				}
				
//				int x= 20;
//				int y=30;
//				switch(x) {
//				case 10:
//					System.out.println(10);
//					break;
//				case y;
//					System.out.println(20);// Syntax error, insert ":: IdentifierOrNew" to complete ReferenceExpression, Syntax error, insert ":" to complete SwitchLabel
//					break;
//				}
				
//				int x= 20;
//				final int y=30;
//				switch(x) {
//				case 10:
//					System.out.println(10);
//					break;
//				 case y;
//					System.out.println(20);
//					break;
//				}
				
				
//				int x = 20;
//				switch(x+1) {
//				case 20:
//					System.out.println("case 10 switch label expression");
//					break;
//				case 1+20:
//					System.out.println("constant expression");
//				}
				
//				byte b = 10;
//				switch(b) {
//					case 10:
//					System.out.println("Case 10 in range");
//					case 100:
//						System.out.println("Case 100 in range");
//					case 10000:
//						System.out.println("Case 1000 out of  range");// Type mismatch: cannot convert from int to byte
//				}
				
//				byte b = 10;
//				switch(b+1) {// b+1 -- int dega
//				case 10:
//					System.out.println("Case 10 in range");
//					case 100:
//						System.out.println("Case 100 in range");
//					case 11:
//						System.out.println("Case 11 in range");
//					case 10000:
//						System.out.println("Case 1000 out of  range");
//				}
				
//				int x = 10;
//				switch(x) {
//				case 97:
//					System.out.println("case 97");// Duplicate case
//					break;
//				case 98:
//					System.out.println(98);
//					break;
//				case 99:
//					System.out.println(99);
//					break;
//				case 100:
//					System.out.println(100);
//					break;
//				case 'a':
//					System.out.println("case a");// Duplicate case
//					break;
//				}
				
				
//				Fall through inside switch:
//				int x =0; // 0,1
//				switch(x) {
//				case 0:
//					System.out.println(0);
//				case 1:
//					System.out.println(1);
//					break;
//				case 2:
//					System.out.println(2);
//				}
				
//				int x =1; 
//				switch(x) {// 1
//				case 0:
//					System.out.println(0);
//				case 1:
//					System.out.println(1);// 1
//					break;
//				case 2:
//					System.out.println(2);
//				}
				
//				int x =2; 
//				switch(x) {
//				case 0:
//					System.out.println(0);
//				case 1:
//					System.out.println(1);
//					break;
//				case 2:
//					System.out.println(2);// // 2, deff
//				default:
//					System.out.println("deff");// 2, deff
//				}
//				
//				int x =3; 
//				switch(x) {
//				case 0:
//					System.out.println(0);
//				case 1:
//					System.out.println(1);
//					break;
//				case 2:
//					System.out.println(2);
//				default:
//				System.out.println("deff");//  deff
//				}
				
//				int x =0;
//				switch(x) {
//				default: /// not recommended
//					System.out.println("deff case'");
//				case 0:
//					System.out.println(0);// 0
//					break;
//				case 1:
//					System.out.println(1);
//				case 2:
//					System.out.println(2);
//				}
				
//				int x =1;
//				switch(x) {
//				default: /// not recommended
//					System.out.println("deff case'");
//				case 0:
//					System.out.println(0);
//					break;
//				case 1:
//					System.out.println(1);// 1, 2
//				case 2:
//					System.out.println(2);
//				}
				
				
//				int x =2;
//				switch(x) {
//				default: /// not recommended
//					System.out.println("deff case'");
//				case 0:
//					System.out.println(0);
//					break;
//				case 1:
//					System.out.println(1);
//				case 2:
//					System.out.println(2);// 2
//				}
				
//				int x =3;
//				switch(x) {
//				default: /// not recommended
//					System.out.println("deff case'"); // deff case' , 0
//				case 0:
//					System.out.println(0);
//					break;
//				case 1:
//					System.out.println(1);
//				case 2:
//					System.out.println(2);
//				}
				
				
//				Lecture 27: 
				
//				2.  Iterative statement
//				a. while()
//				b. do-while()
//				c. for()
//				d. for-each loop
				
//				a. while()// when don't know no of iteration in  advance 
				
//				while(1) {
//					System.out.println("Integr type");// Type mismatch: cannot convert from int to boolean
		//
//				}
				
//				while (true) {// infinit while loop
//					System.out.println("hello");
//				}
				
//				while(true);
//				while(true)
//					int x =20;
//				while(true) {
//					int x= 20;
//					
//				}
				
//				while(true) {
//					System.out.println("Hello");
//				}
//				System.out.println("Unreachable Statement ");// Unreachable code
				
//				while(false) {// 	Unreachable code
//					System.out.println("Unreachable Statement");
//				}
//				System.out.println("reachable");
//				
				
//				int a=10;
//				int b=20;
//				while(a<b) {
//					System.out.println("Hello");
//				}
//				System.out.println("Reachable code");
				
//				int a=10, b=20;
//				while(a>10) {
//					System.out.println("Hello");
//				}
//				System.out.println("Hii");// Hii
				
				
//				final int a=10;
//				final int b=20;
//				while(a<b) {
//					System.out.println("Hello");
//				}
//				System.out.println("Unreachable code due to final variable");// Unreachable code
				
				
//				
//				final int a=10, b=20;
//				 while(a>10) {// Unreachable code
		//
//					System.out.println("Hello");
//				}
//				System.out.println("Hii");
//				
//				 
//				do while() loop
//				boolean x =true;
//				 do;
//					 while(true);
				 
//				do
//					 System.out.println("Fahad");// Infinite do while loop
//				while(true);
//						
//				do;
//				while(true);
				
//				do
//					System.out.println("Fahad");
//				while(false);
				
//				do
//					System.out.println("Fahad");
//				while(true);
				
//				do
//					System.out.println("Fahad");
//				while(true);
//					System.out.println("Fahad");
				
//				do
//					System.out.println("Fahad");// Syntax error, insert "while ( Expression ) ;" to complete BlockStatements
//					System.out.println("Fahad");
//				while(true);
				
//				do
//				{
//					System.out.println("Fahad");
//					System.out.println("Fahad");
//					System.out.println("Fahad");
//				}
//				while(true);
				
//				do
//					int x= 10;
//				while(true);
				
//				do {
//					int x= 10;
//					System.out.println("Fahad");
//					System.out.println(x);
//				}
//				while(true);
				
//				do 
//					while(true)
//					System.out.println("Fahad");
//					while(false);
				
//				do
//					while(true)
//						System.out.println("true");
//				while(false);
				
//				Unreachability:-
				
//				do {
//					System.out.println("Hello !!");
//				}
//				while(true);
//				System.out.println("Fahad");// Unreachable code
				
//				do {
//					System.out.println("Hello!!");
//				}
//				while(false);
//				System.out.println("Hii!!");
				
//				int a=10, b=20;
//				do {
//					System.out.println("Hello");
//				}while(a<b);// true
//				System.out.println("Hii");
//				int a=10, b=20;
//				do 
//				System.out.println("Hello");
//				while(a<b);
//				System.out.println("Hello");
//				
				
//				final int a=10, b=20;
//				do 
//				System.out.println("Hello");
//				while(a<b);
//				System.out.println("Hello"); // Unreachable code due to final a & b variable
				
				
//				int a=10, b=20;
//				do {
//					System.out.println("Hello");
//				}while(a>b);
//				System.out.println("Hii");
				
//				final int a=10, b=20;
//				do {
//					System.out.println("hello");
//				}while(a<b);
//				System.out.println("hii'");// Unreachable code
				
//				final int a=10, b=20;
//				do {
//					System.out.println("hello");
//				}while(a>b);
//				System.out.println("hii'");
				
//				Lecture 28 :- for & for each loop
				
//				For Loop:-
//				If we know the number of iteration in advace then we can go for for loop
				
//				for(Initialization_Section;Condition_ceck;incre_decre_Section) {
//					loop body
//				}
//				
//				Steps of execution of for loop
				
//				1. initialization
//				2. condition check
//				3. execute loop body
//				3. incre-decrem section
//				5. condition check
//				6. execute loop body
//				7. incre-decrem section
//				8. condition check
//				9. execute loop body
				
//				eg: 
//				for(;true;) { // Infinite loop
//					System.out.println("fahad");
//				}
				
//				for(;;) {// Infinite loop
//					System.out.println("fahad");
//				}
		  
//				for(int i=0; true;i++)// Infinite loop
//					System.out.println("Fahad");
				
//				for(int i=0;true;i++)
//					int x= 10;
//				Syntax error, insert ". class" to complete Expression
//				Syntax error, insert "AssignmentOperator Expression" to complete Assignment
//				Syntax error, insert ";" to complete Statement
//				The left-hand side of an assignment must be a variable
//				x cannot be resolved to a variable
				
//				for(int i=0;true;i++)
//					;
				
//				for(int i=0;true;i++);
				
//				for(int i=10;i<10;i++)
//					int z=10;
				
//				Initialization section:
				
//				for(int x=9,y=10,z=30;x<10;x++)
//					System.out.println("fahad");
				
//				for(int i=0, int j=0; i<10;i++)// Syntax error on token "int", delete this token
//					System.out.println("Fahad");
				
//				for(String S ="Fahad"; S=="Fahad"; S="Ali")
//					System.out.println("fahad");
				
//				for(String S ="Fahad", int x=10; S=="Fahad"; S="Ali")
//					System.out.println("fahad");// Syntax error on token "int", delete this token
												//Type mismatch: cannot convert from int to String
					
//				for(String S ="Fahad", K="Kite"; S=="Fahad"|| K=="Kite"; S="Ali")
//					System.out.println("fahad");
				
//				for(String S ="Fahad", K="Kite"; S=="fahad"|| K="Kite"; S="Ali")
//					System.out.println("fahad");//The operator <= is undefined for the argument type(s) java.lang.String, java.lang.String
												//Syntax error on token "=", <= expected
				
				
//				for(String S ="Fahad", K="Kite"; S=="fahad"|| K=="Kite"; S="Ali")
//					System.out.println("fahad");
				
				
//				for(String S ="Fahad", K="Kite"; S=="Fahad"&& K=="Kite"; S="Ali")
//					System.out.println("fahad");
				
//				int i=0;
//				for(System.out.println("Hello u are sleeping");i<3;i++)
//				{
//					System.out.println("No U are sleeping");
//				}
//				Hello u are sleeping
//				No U are sleeping
//				No U are sleeping
//				No U are sleeping
				
				
//				Condition check:-
//				we can take any valid java expression but shoul be of type boolean
//				This part is optional and if we are not anything then compiler by default will place true
				
//				eg:
//				for(int x=0;true;x++) {
//					System.out.println("hello");
//				}
				
//				Icrement?Decrement Section:
				
//				int i=0;
//				for(System.out.println("'hello 1");i<3;System.out.println("Hii 2")) {
//					i++;
//				}
				
//				int i=0;
//				for(System.out.println("'hello 1");i<3;System.out.println("Hii 2")) {
//					
//				}
//				all three part of loop independent of each other and optional
//				for(;;) {
//					
//				}
//				for(;;) {
//					System.out.println("Hello");
//				}
				
//				for(;;);// infinite loop
				
//				for(System.out.println("Fahad");;);
				
//				Unreachability:
				
//				for(int i=0;true;i++) {
//					System.out.println("Accessible");
//				}
//				System.out.println("Non-Accessible");// Unreachable code
				
//				for(int i=0;false;i++) {
//					System.out.println("Non-Accessible");// Unreachable code
//				}
//				System.out.println("Accessible");
				
//				for(int i=0; ;i++) {// by default true
//					System.out.println("Reachable");
//				}
//				System.out.println("Unreachable code");
				
//				 int a=10, b=20;
//				for(int i=0;a<b;i++) {
//					System.out.println("Hello");
//				}
//				System.out.println("hii");
				
//				int a=10,b=20;
//				for(int i=10;a>b;i++) {
//					System.out.println("Hello");
//				}
//				System.out.println("Hii");
				
				
//				final int a=10, b=20;
//				for(int i=0;a<b;i++) {
//					System.out.println("Hello");
//				}
//				System.out.println("Hii");
				
//				final int a=10, b=20;
//				for(int i=0;a>b;i++) {
//					System.out.println("Hello");// Unreachable code
//				}
//				System.out.println("Hii");
				
//				For-Each Loop(Enhanced for loop)
//				Introduced in 1.5 v. specially designed for Arrays & Collection to retrive element of array and collection
				
//				Case 1:-
//				To print an element of 1-D Array
				
//				int[] x = {10,20,30,40};
				
//				Normal for loop
				
//				for(int i=0;i<x.length;i++) {
//					System.out.println(x[i]);
//				}
				
//				for(int i=0;i<x.length;i++) {
//					System.out.println("x[i]="+x+""+i+".."+x[i]);
//				}
				
//					  x[i]=[I@2c7b84de0..10
//				      x[i]=[I@2c7b84de1..20
//				      x[i]=[I@2c7b84de2..30
//				      x[i]=[I@2c7b84de3..40
				
//				for(int i=0;i<x.length;i++) {
//					System.out.println("x[i]="+x[i]);
//				}
				
//				for(int x1:x) {
//					System.out.println(x1);
//				}
				
//				To_Print element of 2_D Array
//				int[][] x = {{10,20,30},{40,50}};
				
//				for(int i=0;i<x.length;i++) {
//					for(int j=0;j<x[i].length;j++) {
//						System.out.println(x[i][j]);// 10,20,30,40,50
//					}
//				}
				
//				for(int[] x1 : x) {
//					for(int x2 : x1) {
//						System.out.println(x2);// 10,20,30,40,50
//					}
//				}
				
//				To print element of 3-D array
				
//				int[][][] x= {{{10,20},{30,40}},{{50,60,70},{80,90}}};
				
//				for(int x1[][]:x) {
//					for(int x2[]:x1) {
//						for(int x3:x2) {
//							System.out.println(x3);// 10,20,30,40,50, 60,70,80,90
//						}
//					}
//				}
				
//				for(int i=0;i<x.length;i++) {
//					for(int j=0;j<x[i].length;j++) {
//						for(int k=0;k<x[i][j].length;k++) {
//							System.out.println(x[i][j][k]);// 10,20,30,40,50, 60,70,80,90
//						}
//					}
//				}
				
//				for(int i=0;i<10;i++) {
//					System.out.println("No of Itearion :"+(i+1)+"   With value :"+i);
//				}
//				
//				we can write equivalent for each loop directly for above genral purpose for loop
//				
//				for(int  : x) {
//					System.out.println(); // not possible
//				}
				
//				int[] x = {10,20,30,40,50}; // print element in reverse order
//				for(int i=x.length-1;i>=0;i--) { 
//					System.out.println(x[i]);
//				}
				
//				int[] x= {10,20,30,40,50};
////				for(int x1 : x) {
////					System.out.println(x1);
////				}
//				for(int x1 : x) {
//					System.out.println(x1);
//					
//				}
				
//				Lecture 29: Break and continue  
//				Transfer Statement:
//				1. Break 
//				2. Continue
				
//				Trnafer statement is used ot trnafer the control from one place to another
				
//				 can use break inside switch to stop fall through
				
//				int x=0;
//				switch(x)
//				{
//				case 0:
//					System.out.println(0);// 0
//				case 1:
//					System.out.println(1);// 1
//					break;// 0,1
//				case 2:
//					System.out.println(2);
//				default:
//					System.out.println("def");
//				}
				
				
//				Inside loops: to break loop execution based on some condition:
				
//				for(int i=0;i<10;i++) {
//					if(i==5)
//						break;// 0,1,2,3,4 break means tootna aage nahi jaega.
//					System.out.println(i);
//				}
				
//				Inside lAbeled blocks:to break block execution based on some condition:
				
//				int x=10;
//				l1:{
//				System.out.println("begin");
//				if(x==10)
//					break l1;
//				System.out.println("end");
//				}
//				System.out.println("hello");
//				o/p begin, hello
				
//				byte b= 10;
//				l1:{
//					System.out.println("Begin Label");
//					if(b==10)
//						break l1;
//					System.out.println("END Label");
//					
//				}
//				System.out.println("Hello Label");// Begin Label, 	Hello Label
				
//				int x=10;
//				if(x==10)
//					break;
//				System.out.println("Hello");// break cannot be used outside of a loop or a switch
				
//				Continue statement: 
//				skip current iteration and continue next iteration
				
//				for(int i=0;i<10;i++) {
//					if(i%2==0)
//						continue;
//					System.out.println(i);// 1,3,5,7,9
//					
//				}
//				we can use continue statement pnly inside loop 
				
//				int x=10;
//				if(x==10)
//					continue;
//				System.out.println("hello");// continue cannot be used outside of a loop
				
//				Labelled Break & COntinue:
//				l1:{
//					for() {
//						l2:{
//							for() {
//								for() {
//									break l1;// See video
//									break l2;
//									break;
//								}
//							}
//						}
//					}
				
				
//				}
					
				
//				l1:
//					for(int i=0;i<3;i++) {
//						for(int j=0;j<3;j++) {
//							if(i==j) 
//								continue l1;
//							System.out.println(i+"..."+j);
//							
//						}
//					}
//				O/P
//				1...0
//				2...0
//				2...1
				
//				l1:
//					for(int i=0;i<3;i++) {
//						for(int j=0;j<3;j++) {
//							if(i==j) 	
//								continue;
//							System.out.println(i+"..."+j);
//							
//						}
//					}
				
//				O/P:
//				0...1
//				0...2
//				1...0
//				1...2
//				2...0
//				2...1
				
//				l1:
//					for(int i=0;i<3;i++) {
//						for(int j=0;j<3;j++) {
//							if(i==j) 	
//								break;
//							System.out.println(i+"..."+j);
//							
//						}
//					}
//				O/P:
//				1...0
//				2...0
//				2...1
				
//				l1:
//					for(int i=0;i<3;i++) {
//						for(int j=0;j<3;j++) {
//							if(i==j) 	
//								break l1;
//							System.out.println(i+"..."+j);
//							
//						}
//					}
//				O/P: No output
				
				
//				do-While Loop:Vs Continue/dangerous combination
				
				
//				int x=0;
//				do {
//					x++;
//					System.out.println(x);
//					if(++x<5)
//						continue;
//					x++;
//					System.out.println(x);
//				}while(++x<10);
//				O/P:
//				1
//				4
//				6
//				8
//				10

	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2024-01-02 00:36:06.197
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2024-01-02 00:36:06.199
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
!SESSION 2024-01-02 01:18:05.210 -----------------------------------------------
eclipse.buildId=4.22.0.I20211124-1800
java.version=17.0.6
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2024-01-02 01:18:17.648
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2024-01-02 01:18:17.648
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@3ba97962,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@35becbd4,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2024-01-02 01:18:17.648
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@3bcc8f13,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@3cb04dd,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2024-01-02 01:18:29.946
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\2101917'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2024-01-02 01:38:59.588 -----------------------------------------------
eclipse.buildId=4.22.0.I20211124-1800
java.version=17.0.6
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2024-01-02 01:39:08.977
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2024-01-02 01:39:08.977
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@35becbd4,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@3bcc8f13,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2024-01-02 01:39:08.978
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@3cb04dd,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@73d91faf,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2024-01-02 01:39:18.780
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\2101917'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2024-01-03 00:37:57.155 -----------------------------------------------
eclipse.buildId=4.22.0.I20211124-1800
java.version=17.0.6
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2024-01-03 00:38:10.974
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2024-01-03 00:38:10.974
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@3ba97962,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@35becbd4,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2024-01-03 00:38:10.974
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@3bcc8f13,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@3cb04dd,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2024-01-03 00:38:25.714
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\2101917'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2024-01-04 19:56:45.724 -----------------------------------------------
eclipse.buildId=4.22.0.I20211124-1800
java.version=17.0.6
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2024-01-04 19:56:58.715
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2024-01-04 19:56:58.715
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@3bcc8f13,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@3cb04dd,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2024-01-04 19:56:58.715
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@73d91faf,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@30fa8a6b,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2024-01-04 19:57:12.478
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\2101917'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2024-01-06 18:28:36.386 -----------------------------------------------
eclipse.buildId=4.22.0.I20211124-1800
java.version=17.0.6
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2024-01-06 18:28:52.886
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2024-01-06 18:28:52.886
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@3bcc8f13,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@3cb04dd,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2024-01-06 18:28:52.887
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@73d91faf,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@30fa8a6b,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2024-01-06 18:29:06.924
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\2101917'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2024-01-10 17:15:50.171 -----------------------------------------------
eclipse.buildId=4.22.0.I20211124-1800
java.version=17.0.6
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2024-01-10 17:16:00.719
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2024-01-10 17:16:00.719
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@35becbd4,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@3bcc8f13,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2024-01-10 17:16:00.719
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@3cb04dd,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@73d91faf,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2024-01-10 17:16:11.102
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\2101917'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2024-01-11 14:47:29.778 -----------------------------------------------
eclipse.buildId=4.22.0.I20211124-1800
java.version=17.0.6
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2024-01-11 14:47:41.450
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2024-01-11 14:47:41.450
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@35becbd4,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@3bcc8f13,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2024-01-11 14:47:41.450
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@3cb04dd,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@73d91faf,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2024-01-11 14:47:53.423
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\2101917'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.jdt.launching 4 4 2024-01-11 16:10:04.689
!MESSAGE Durga [in [Working copy] Durga.java [in <default> [in src [in 5.1_Java_Declaration_And_AccessModifier_Practice_1st_Time]]]] does not exist
!STACK 1
Java Model Exception: Error in Java Model (code 969): Durga [in [Working copy] Durga.java [in <default> [in src [in 5.1_Java_Declaration_And_AccessModifier_Practice_1st_Time]]]] does not exist
	at org.eclipse.jdt.internal.core.JavaElement.newNotPresentException(JavaElement.java:574)
	at org.eclipse.jdt.internal.core.SourceRefElement.getUnderlyingResource(SourceRefElement.java:241)
	at org.eclipse.jdt.internal.launching.JavaMigrationDelegate.getResource(JavaMigrationDelegate.java:111)
	at org.eclipse.jdt.internal.launching.JavaMigrationDelegate.updateResourceMapping(JavaMigrationDelegate.java:150)
	at org.eclipse.jdt.internal.debug.ui.launcher.AbstractJavaMainTab.mapResources(AbstractJavaMainTab.java:213)
	at org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab.performApply(JavaMainTab.java:256)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationTabGroupViewer.refresh(LaunchConfigurationTabGroupViewer.java:520)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.updateButtons(LaunchConfigurationsDialog.java:1627)
	at org.eclipse.debug.ui.AbstractLaunchConfigurationTab.updateLaunchConfigurationDialog(AbstractLaunchConfigurationTab.java:155)
	at org.eclipse.jdt.internal.debug.ui.launcher.SharedJavaMainTab.access$0(SharedJavaMainTab.java:1)
	at org.eclipse.jdt.internal.debug.ui.launcher.SharedJavaMainTab$1.modifyText(SharedJavaMainTab.java:70)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:183)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1060)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1084)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1065)
	at org.eclipse.swt.widgets.Text.wmCommandChild(Text.java:3100)
	at org.eclipse.swt.widgets.Control.WM_COMMAND(Control.java:4904)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4756)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5010)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(Native Method)
	at org.eclipse.swt.widgets.Text.callWindowProc(Text.java:293)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4854)
	at org.eclipse.swt.widgets.Text.windowProc(Text.java:2681)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5002)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(Native Method)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3630)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:823)
	at org.eclipse.jface.window.Window.open(Window.java:799)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.open(LaunchConfigurationsDialog.java:1238)
	at org.eclipse.debug.ui.DebugUITools.lambda$1(DebugUITools.java:630)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:74)
	at org.eclipse.debug.ui.DebugUITools.openLaunchConfigurationDialogOnGroup(DebugUITools.java:636)
	at org.eclipse.debug.ui.DebugUITools.openLaunchConfigurationDialogOnGroup(DebugUITools.java:574)
	at org.eclipse.debug.ui.actions.OpenLaunchDialogAction.run(OpenLaunchDialogAction.java:85)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:580)
	at org.eclipse.jface.action.ActionContributionItem.lambda$4(ActionContributionItem.java:414)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1060)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1084)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1069)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:773)
	at org.eclipse.jface.action.ActionContributionItem.lambda$8(ActionContributionItem.java:1207)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1060)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4060)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3632)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1154)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1045)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1440)
!SUBENTRY 1 org.eclipse.jdt.core 4 969 2024-01-11 16:10:04.692
!MESSAGE Durga [in [Working copy] Durga.java [in <default> [in src [in 5.1_Java_Declaration_And_AccessModifier_Practice_1st_Time]]]] does not exist

!ENTRY org.eclipse.jdt.launching 4 4 2024-01-11 16:22:41.748
!MESSAGE Fahad [in Fahad.java [in <default> [in src [in New_Project]]]] does not exist
!STACK 1
Java Model Exception: Error in Java Model (code 969): Fahad [in Fahad.java [in <default> [in src [in New_Project]]]] does not exist
	at org.eclipse.jdt.internal.core.JavaElement.newNotPresentException(JavaElement.java:574)
	at org.eclipse.jdt.internal.core.SourceRefElement.getUnderlyingResource(SourceRefElement.java:241)
	at org.eclipse.jdt.internal.launching.JavaMigrationDelegate.getResource(JavaMigrationDelegate.java:111)
	at org.eclipse.jdt.internal.launching.JavaMigrationDelegate.updateResourceMapping(JavaMigrationDelegate.java:150)
	at org.eclipse.jdt.internal.debug.ui.launcher.AbstractJavaMainTab.mapResources(AbstractJavaMainTab.java:213)
	at org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab.performApply(JavaMainTab.java:256)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationTabGroupViewer.refresh(LaunchConfigurationTabGroupViewer.java:520)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.updateButtons(LaunchConfigurationsDialog.java:1630)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.refreshStatus(LaunchConfigurationsDialog.java:1331)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationTabGroupViewer.refreshStatus(LaunchConfigurationTabGroupViewer.java:1117)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationTabGroupViewer.lambda$4(LaunchConfigurationTabGroupViewer.java:738)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:74)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationTabGroupViewer.inputChanged(LaunchConfigurationTabGroupViewer.java:742)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationTabGroupViewer.setInput0(LaunchConfigurationTabGroupViewer.java:674)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationTabGroupViewer.setInput(LaunchConfigurationTabGroupViewer.java:654)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.handleLaunchConfigurationSelectionChanged(LaunchConfigurationsDialog.java:1049)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.lambda$1(LaunchConfigurationsDialog.java:612)
	at org.eclipse.jface.viewers.StructuredViewer$3.run(StructuredViewer.java:821)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:174)
	at org.eclipse.jface.viewers.StructuredViewer.firePostSelectionChanged(StructuredViewer.java:818)
	at org.eclipse.jface.viewers.StructuredViewer.handlePostSelect(StructuredViewer.java:1191)
	at org.eclipse.swt.events.SelectionListener$1.widgetSelected(SelectionListener.java:84)
	at org.eclipse.jface.util.OpenStrategy.firePostSelectionEvent(OpenStrategy.java:284)
	at org.eclipse.jface.util.OpenStrategy$1.lambda$1(OpenStrategy.java:438)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4035)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3635)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:823)
	at org.eclipse.jface.window.Window.open(Window.java:799)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.open(LaunchConfigurationsDialog.java:1238)
	at org.eclipse.debug.ui.DebugUITools.lambda$1(DebugUITools.java:630)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:74)
	at org.eclipse.debug.ui.DebugUITools.openLaunchConfigurationDialogOnGroup(DebugUITools.java:636)
	at org.eclipse.debug.ui.DebugUITools.openLaunchConfigurationDialogOnGroup(DebugUITools.java:574)
	at org.eclipse.debug.ui.actions.OpenLaunchDialogAction.run(OpenLaunchDialogAction.java:85)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:580)
	at org.eclipse.jface.action.ActionContributionItem.lambda$4(ActionContributionItem.java:414)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1060)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4060)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3632)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1154)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1045)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1440)
!SUBENTRY 1 org.eclipse.jdt.core 4 969 2024-01-11 16:22:41.749
!MESSAGE Fahad [in Fahad.java [in <default> [in src [in New_Project]]]] does not exist

!ENTRY org.eclipse.jdt.launching 4 4 2024-01-11 16:22:41.758
!MESSAGE Fahad [in Fahad.java [in <default> [in src [in New_Project]]]] does not exist
!STACK 1
Java Model Exception: Error in Java Model (code 969): Fahad [in Fahad.java [in <default> [in src [in New_Project]]]] does not exist
	at org.eclipse.jdt.internal.core.JavaElement.newNotPresentException(JavaElement.java:574)
	at org.eclipse.jdt.internal.core.SourceRefElement.getUnderlyingResource(SourceRefElement.java:241)
	at org.eclipse.jdt.internal.launching.JavaMigrationDelegate.getResource(JavaMigrationDelegate.java:111)
	at org.eclipse.jdt.internal.launching.JavaMigrationDelegate.updateResourceMapping(JavaMigrationDelegate.java:150)
	at org.eclipse.jdt.internal.debug.ui.launcher.AbstractJavaMainTab.mapResources(AbstractJavaMainTab.java:213)
	at org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab.performApply(JavaMainTab.java:256)
	at org.eclipse.debug.ui.AbstractLaunchConfigurationTabGroup.performApply(AbstractLaunchConfigurationTabGroup.java:106)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationTabGroupWrapper.performApply(LaunchConfigurationTabGroupWrapper.java:205)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationTabGroupViewer.handleApplyPressed(LaunchConfigurationTabGroupViewer.java:1503)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.handleLaunchConfigurationSelectionChanged(LaunchConfigurationsDialog.java:1051)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.lambda$1(LaunchConfigurationsDialog.java:612)
	at org.eclipse.jface.viewers.StructuredViewer$3.run(StructuredViewer.java:821)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:174)
	at org.eclipse.jface.viewers.StructuredViewer.firePostSelectionChanged(StructuredViewer.java:818)
	at org.eclipse.jface.viewers.StructuredViewer.handlePostSelect(StructuredViewer.java:1191)
	at org.eclipse.swt.events.SelectionListener$1.widgetSelected(SelectionListener.java:84)
	at org.eclipse.jface.util.OpenStrategy.firePostSelectionEvent(OpenStrategy.java:284)
	at org.eclipse.jface.util.OpenStrategy$1.lambda$1(OpenStrategy.java:438)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4035)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3635)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:823)
	at org.eclipse.jface.window.Window.open(Window.java:799)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.open(LaunchConfigurationsDialog.java:1238)
	at org.eclipse.debug.ui.DebugUITools.lambda$1(DebugUITools.java:630)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:74)
	at org.eclipse.debug.ui.DebugUITools.openLaunchConfigurationDialogOnGroup(DebugUITools.java:636)
	at org.eclipse.debug.ui.DebugUITools.openLaunchConfigurationDialogOnGroup(DebugUITools.java:574)
	at org.eclipse.debug.ui.actions.OpenLaunchDialogAction.run(OpenLaunchDialogAction.java:85)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:580)
	at org.eclipse.jface.action.ActionContributionItem.lambda$4(ActionContributionItem.java:414)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1060)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4060)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3632)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1154)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1045)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1440)
!SUBENTRY 1 org.eclipse.jdt.core 4 969 2024-01-11 16:22:41.759
!MESSAGE Fahad [in Fahad.java [in <default> [in src [in New_Project]]]] does not exist

!ENTRY org.eclipse.jdt.launching 4 4 2024-01-11 16:22:41.779
!MESSAGE Fahad [in Fahad.java [in <default> [in src [in New_Project]]]] does not exist
!STACK 1
Java Model Exception: Error in Java Model (code 969): Fahad [in Fahad.java [in <default> [in src [in New_Project]]]] does not exist
	at org.eclipse.jdt.internal.core.JavaElement.newNotPresentException(JavaElement.java:574)
	at org.eclipse.jdt.internal.core.SourceRefElement.getUnderlyingResource(SourceRefElement.java:241)
	at org.eclipse.jdt.internal.launching.JavaMigrationDelegate.getResource(JavaMigrationDelegate.java:111)
	at org.eclipse.jdt.internal.launching.JavaMigrationDelegate.updateResourceMapping(JavaMigrationDelegate.java:150)
	at org.eclipse.jdt.internal.debug.ui.launcher.AbstractJavaMainTab.mapResources(AbstractJavaMainTab.java:213)
	at org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab.performApply(JavaMainTab.java:256)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationTabGroupViewer.refresh(LaunchConfigurationTabGroupViewer.java:520)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.updateButtons(LaunchConfigurationsDialog.java:1627)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.handleLaunchConfigurationSelectionChanged(LaunchConfigurationsDialog.java:1056)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.lambda$1(LaunchConfigurationsDialog.java:612)
	at org.eclipse.jface.viewers.StructuredViewer$3.run(StructuredViewer.java:821)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:174)
	at org.eclipse.jface.viewers.StructuredViewer.firePostSelectionChanged(StructuredViewer.java:818)
	at org.eclipse.jface.viewers.StructuredViewer.handlePostSelect(StructuredViewer.java:1191)
	at org.eclipse.swt.events.SelectionListener$1.widgetSelected(SelectionListener.java:84)
	at org.eclipse.jface.util.OpenStrategy.firePostSelectionEvent(OpenStrategy.java:284)
	at org.eclipse.jface.util.OpenStrategy$1.lambda$1(OpenStrategy.java:438)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4035)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3635)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:823)
	at org.eclipse.jface.window.Window.open(Window.java:799)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.open(LaunchConfigurationsDialog.java:1238)
	at org.eclipse.debug.ui.DebugUITools.lambda$1(DebugUITools.java:630)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:74)
	at org.eclipse.debug.ui.DebugUITools.openLaunchConfigurationDialogOnGroup(DebugUITools.java:636)
	at org.eclipse.debug.ui.DebugUITools.openLaunchConfigurationDialogOnGroup(DebugUITools.java:574)
	at org.eclipse.debug.ui.actions.OpenLaunchDialogAction.run(OpenLaunchDialogAction.java:85)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:580)
	at org.eclipse.jface.action.ActionContributionItem.lambda$4(ActionContributionItem.java:414)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1060)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4060)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3632)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1154)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1045)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1440)
!SUBENTRY 1 org.eclipse.jdt.core 4 969 2024-01-11 16:22:41.779
!MESSAGE Fahad [in Fahad.java [in <default> [in src [in New_Project]]]] does not exist

!ENTRY org.eclipse.jdt.launching 4 4 2024-01-11 16:22:42.003
!MESSAGE Fahad [in Fahad.java [in <default> [in src [in New_Project]]]] does not exist
!STACK 1
Java Model Exception: Error in Java Model (code 969): Fahad [in Fahad.java [in <default> [in src [in New_Project]]]] does not exist
	at org.eclipse.jdt.internal.core.JavaElement.newNotPresentException(JavaElement.java:574)
	at org.eclipse.jdt.internal.core.SourceRefElement.getUnderlyingResource(SourceRefElement.java:241)
	at org.eclipse.jdt.internal.launching.JavaMigrationDelegate.getResource(JavaMigrationDelegate.java:111)
	at org.eclipse.jdt.internal.launching.JavaMigrationDelegate.updateResourceMapping(JavaMigrationDelegate.java:150)
	at org.eclipse.jdt.internal.debug.ui.launcher.AbstractJavaMainTab.mapResources(AbstractJavaMainTab.java:213)
	at org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab.performApply(JavaMainTab.java:256)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationTabGroupViewer.refresh(LaunchConfigurationTabGroupViewer.java:520)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.updateButtons(LaunchConfigurationsDialog.java:1627)
	at org.eclipse.debug.ui.AbstractLaunchConfigurationTab.updateLaunchConfigurationDialog(AbstractLaunchConfigurationTab.java:155)
	at org.eclipse.debug.ui.AbstractLaunchConfigurationTab$1.runInUIThread(AbstractLaunchConfigurationTab.java:513)
	at org.eclipse.ui.progress.UIJob.lambda$0(UIJob.java:95)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4035)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3635)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:823)
	at org.eclipse.jface.window.Window.open(Window.java:799)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.open(LaunchConfigurationsDialog.java:1238)
	at org.eclipse.debug.ui.DebugUITools.lambda$1(DebugUITools.java:630)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:74)
	at org.eclipse.debug.ui.DebugUITools.openLaunchConfigurationDialogOnGroup(DebugUITools.java:636)
	at org.eclipse.debug.ui.DebugUITools.openLaunchConfigurationDialogOnGroup(DebugUITools.java:574)
	at org.eclipse.debug.ui.actions.OpenLaunchDialogAction.run(OpenLaunchDialogAction.java:85)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:580)
	at org.eclipse.jface.action.ActionContributionItem.lambda$4(ActionContributionItem.java:414)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1060)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4060)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3632)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1154)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1045)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1440)
!SUBENTRY 1 org.eclipse.jdt.core 4 969 2024-01-11 16:22:42.004
!MESSAGE Fahad [in Fahad.java [in <default> [in src [in New_Project]]]] does not exist

!ENTRY org.eclipse.jdt.launching 4 4 2024-01-11 16:22:42.030
!MESSAGE Fahad [in Fahad.java [in <default> [in src [in New_Project]]]] does not exist
!STACK 1
Java Model Exception: Error in Java Model (code 969): Fahad [in Fahad.java [in <default> [in src [in New_Project]]]] does not exist
	at org.eclipse.jdt.internal.core.JavaElement.newNotPresentException(JavaElement.java:574)
	at org.eclipse.jdt.internal.core.SourceRefElement.getUnderlyingResource(SourceRefElement.java:241)
	at org.eclipse.jdt.internal.launching.JavaMigrationDelegate.getResource(JavaMigrationDelegate.java:111)
	at org.eclipse.jdt.internal.launching.JavaMigrationDelegate.updateResourceMapping(JavaMigrationDelegate.java:150)
	at org.eclipse.jdt.internal.debug.ui.launcher.AbstractJavaMainTab.mapResources(AbstractJavaMainTab.java:213)
	at org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab.performApply(JavaMainTab.java:256)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationTabGroupViewer.refresh(LaunchConfigurationTabGroupViewer.java:520)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.updateButtons(LaunchConfigurationsDialog.java:1627)
	at org.eclipse.debug.ui.AbstractLaunchConfigurationTab.updateLaunchConfigurationDialog(AbstractLaunchConfigurationTab.java:155)
	at org.eclipse.debug.ui.AbstractLaunchConfigurationTab$1.runInUIThread(AbstractLaunchConfigurationTab.java:513)
	at org.eclipse.ui.progress.UIJob.lambda$0(UIJob.java:95)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4035)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3635)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:823)
	at org.eclipse.jface.window.Window.open(Window.java:799)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.open(LaunchConfigurationsDialog.java:1238)
	at org.eclipse.debug.ui.DebugUITools.lambda$1(DebugUITools.java:630)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:74)
	at org.eclipse.debug.ui.DebugUITools.openLaunchConfigurationDialogOnGroup(DebugUITools.java:636)
	at org.eclipse.debug.ui.DebugUITools.openLaunchConfigurationDialogOnGroup(DebugUITools.java:574)
	at org.eclipse.debug.ui.actions.OpenLaunchDialogAction.run(OpenLaunchDialogAction.java:85)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:580)
	at org.eclipse.jface.action.ActionContributionItem.lambda$4(ActionContributionItem.java:414)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1060)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4060)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3632)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1154)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1045)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1440)
!SUBENTRY 1 org.eclipse.jdt.core 4 969 2024-01-11 16:22:42.031
!MESSAGE Fahad [in Fahad.java [in <default> [in src [in New_Project]]]] does not exist

!ENTRY org.eclipse.jdt.launching 4 4 2024-01-11 16:22:42.054
!MESSAGE Fahad [in Fahad.java [in <default> [in src [in New_Project]]]] does not exist
!STACK 1
Java Model Exception: Error in Java Model (code 969): Fahad [in Fahad.java [in <default> [in src [in New_Project]]]] does not exist
	at org.eclipse.jdt.internal.core.JavaElement.newNotPresentException(JavaElement.java:574)
	at org.eclipse.jdt.internal.core.SourceRefElement.getUnderlyingResource(SourceRefElement.java:241)
	at org.eclipse.jdt.internal.launching.JavaMigrationDelegate.getResource(JavaMigrationDelegate.java:111)
	at org.eclipse.jdt.internal.launching.JavaMigrationDelegate.updateResourceMapping(JavaMigrationDelegate.java:150)
	at org.eclipse.jdt.internal.debug.ui.launcher.AbstractJavaMainTab.mapResources(AbstractJavaMainTab.java:213)
	at org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab.performApply(JavaMainTab.java:256)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationTabGroupViewer.refresh(LaunchConfigurationTabGroupViewer.java:520)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.updateButtons(LaunchConfigurationsDialog.java:1627)
	at org.eclipse.debug.ui.AbstractLaunchConfigurationTab.updateLaunchConfigurationDialog(AbstractLaunchConfigurationTab.java:155)
	at org.eclipse.debug.ui.AbstractLaunchConfigurationTab$1.runInUIThread(AbstractLaunchConfigurationTab.java:513)
	at org.eclipse.ui.progress.UIJob.lambda$0(UIJob.java:95)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4035)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3635)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:823)
	at org.eclipse.jface.window.Window.open(Window.java:799)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.open(LaunchConfigurationsDialog.java:1238)
	at org.eclipse.debug.ui.DebugUITools.lambda$1(DebugUITools.java:630)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:74)
	at org.eclipse.debug.ui.DebugUITools.openLaunchConfigurationDialogOnGroup(DebugUITools.java:636)
	at org.eclipse.debug.ui.DebugUITools.openLaunchConfigurationDialogOnGroup(DebugUITools.java:574)
	at org.eclipse.debug.ui.actions.OpenLaunchDialogAction.run(OpenLaunchDialogAction.java:85)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:580)
	at org.eclipse.jface.action.ActionContributionItem.lambda$4(ActionContributionItem.java:414)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1060)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4060)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3632)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1154)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1045)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1440)
!SUBENTRY 1 org.eclipse.jdt.core 4 969 2024-01-11 16:22:42.054
!MESSAGE Fahad [in Fahad.java [in <default> [in src [in New_Project]]]] does not exist

!ENTRY org.eclipse.jdt.launching 4 4 2024-01-11 16:22:42.078
!MESSAGE Fahad [in Fahad.java [in <default> [in src [in New_Project]]]] does not exist
!STACK 1
Java Model Exception: Error in Java Model (code 969): Fahad [in Fahad.java [in <default> [in src [in New_Project]]]] does not exist
	at org.eclipse.jdt.internal.core.JavaElement.newNotPresentException(JavaElement.java:574)
	at org.eclipse.jdt.internal.core.SourceRefElement.getUnderlyingResource(SourceRefElement.java:241)
	at org.eclipse.jdt.internal.launching.JavaMigrationDelegate.getResource(JavaMigrationDelegate.java:111)
	at org.eclipse.jdt.internal.launching.JavaMigrationDelegate.updateResourceMapping(JavaMigrationDelegate.java:150)
	at org.eclipse.jdt.internal.debug.ui.launcher.AbstractJavaMainTab.mapResources(AbstractJavaMainTab.java:213)
	at org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab.performApply(JavaMainTab.java:256)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationTabGroupViewer.refresh(LaunchConfigurationTabGroupViewer.java:520)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.updateButtons(LaunchConfigurationsDialog.java:1627)
	at org.eclipse.debug.ui.AbstractLaunchConfigurationTab.updateLaunchConfigurationDialog(AbstractLaunchConfigurationTab.java:155)
	at org.eclipse.debug.ui.AbstractLaunchConfigurationTab$1.runInUIThread(AbstractLaunchConfigurationTab.java:513)
	at org.eclipse.ui.progress.UIJob.lambda$0(UIJob.java:95)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4035)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3635)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:823)
	at org.eclipse.jface.window.Window.open(Window.java:799)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.open(LaunchConfigurationsDialog.java:1238)
	at org.eclipse.debug.ui.DebugUITools.lambda$1(DebugUITools.java:630)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:74)
	at org.eclipse.debug.ui.DebugUITools.openLaunchConfigurationDialogOnGroup(DebugUITools.java:636)
	at org.eclipse.debug.ui.DebugUITools.openLaunchConfigurationDialogOnGroup(DebugUITools.java:574)
	at org.eclipse.debug.ui.actions.OpenLaunchDialogAction.run(OpenLaunchDialogAction.java:85)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:580)
	at org.eclipse.jface.action.ActionContributionItem.lambda$4(ActionContributionItem.java:414)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1060)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4060)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3632)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1154)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1045)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1440)
!SUBENTRY 1 org.eclipse.jdt.core 4 969 2024-01-11 16:22:42.079
!MESSAGE Fahad [in Fahad.java [in <default> [in src [in New_Project]]]] does not exist

!ENTRY org.eclipse.jdt.launching 4 4 2024-01-11 16:22:57.951
!MESSAGE Fahad [in Fahad.java [in <default> [in src [in New_Project]]]] does not exist
!STACK 1
Java Model Exception: Error in Java Model (code 969): Fahad [in Fahad.java [in <default> [in src [in New_Project]]]] does not exist
	at org.eclipse.jdt.internal.core.JavaElement.newNotPresentException(JavaElement.java:574)
	at org.eclipse.jdt.internal.core.SourceRefElement.getUnderlyingResource(SourceRefElement.java:241)
	at org.eclipse.jdt.internal.launching.JavaMigrationDelegate.getResource(JavaMigrationDelegate.java:111)
	at org.eclipse.jdt.internal.launching.JavaMigrationDelegate.updateResourceMapping(JavaMigrationDelegate.java:150)
	at org.eclipse.jdt.internal.debug.ui.launcher.AbstractJavaMainTab.mapResources(AbstractJavaMainTab.java:213)
	at org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab.performApply(JavaMainTab.java:256)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationTabGroupViewer.refresh(LaunchConfigurationTabGroupViewer.java:520)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.updateButtons(LaunchConfigurationsDialog.java:1630)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.refreshStatus(LaunchConfigurationsDialog.java:1331)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationTabGroupViewer.refreshStatus(LaunchConfigurationTabGroupViewer.java:1117)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationTabGroupViewer.lambda$4(LaunchConfigurationTabGroupViewer.java:738)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:74)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationTabGroupViewer.inputChanged(LaunchConfigurationTabGroupViewer.java:742)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationTabGroupViewer.setInput0(LaunchConfigurationTabGroupViewer.java:674)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationTabGroupViewer.setInput(LaunchConfigurationTabGroupViewer.java:654)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.handleLaunchConfigurationSelectionChanged(LaunchConfigurationsDialog.java:1049)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.lambda$1(LaunchConfigurationsDialog.java:612)
	at org.eclipse.jface.viewers.StructuredViewer$3.run(StructuredViewer.java:821)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:174)
	at org.eclipse.jface.viewers.StructuredViewer.firePostSelectionChanged(StructuredViewer.java:818)
	at org.eclipse.jface.viewers.StructuredViewer.setSelection(StructuredViewer.java:1661)
	at org.eclipse.jface.viewers.TreeViewer.setSelection(TreeViewer.java:1090)
	at org.eclipse.jface.viewers.Viewer.setSelection(Viewer.java:376)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.doInitialTreeSelection(LaunchConfigurationsDialog.java:658)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.initializeContent(LaunchConfigurationsDialog.java:1185)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.createContents(LaunchConfigurationsDialog.java:473)
	at org.eclipse.jface.window.Window.create(Window.java:431)
	at org.eclipse.jface.dialogs.Dialog.create(Dialog.java:1094)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.create(LaunchConfigurationsDialog.java:378)
	at org.eclipse.jface.window.Window.open(Window.java:788)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.open(LaunchConfigurationsDialog.java:1238)
	at org.eclipse.debug.ui.DebugUITools.lambda$1(DebugUITools.java:630)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:74)
	at org.eclipse.debug.ui.DebugUITools.openLaunchConfigurationDialogOnGroup(DebugUITools.java:636)
	at org.eclipse.debug.ui.DebugUITools.openLaunchConfigurationDialogOnGroup(DebugUITools.java:574)
	at org.eclipse.debug.ui.actions.OpenLaunchDialogAction.run(OpenLaunchDialogAction.java:85)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:580)
	at org.eclipse.jface.action.ActionContributionItem.lambda$4(ActionContributionItem.java:414)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1060)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1084)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1069)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:773)
	at org.eclipse.jface.action.ActionContributionItem.lambda$8(ActionContributionItem.java:1207)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1060)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4060)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3632)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1154)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1045)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1440)
!SUBENTRY 1 org.eclipse.jdt.core 4 969 2024-01-11 16:22:57.951
!MESSAGE Fahad [in Fahad.java [in <default> [in src [in New_Project]]]] does not exist

!ENTRY org.eclipse.jdt.launching 4 4 2024-01-11 16:22:57.959
!MESSAGE Fahad [in Fahad.java [in <default> [in src [in New_Project]]]] does not exist
!STACK 1
Java Model Exception: Error in Java Model (code 969): Fahad [in Fahad.java [in <default> [in src [in New_Project]]]] does not exist
	at org.eclipse.jdt.internal.core.JavaElement.newNotPresentException(JavaElement.java:574)
	at org.eclipse.jdt.internal.core.SourceRefElement.getUnderlyingResource(SourceRefElement.java:241)
	at org.eclipse.jdt.internal.launching.JavaMigrationDelegate.getResource(JavaMigrationDelegate.java:111)
	at org.eclipse.jdt.internal.launching.JavaMigrationDelegate.updateResourceMapping(JavaMigrationDelegate.java:150)
	at org.eclipse.jdt.internal.debug.ui.launcher.AbstractJavaMainTab.mapResources(AbstractJavaMainTab.java:213)
	at org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab.performApply(JavaMainTab.java:256)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationTabGroupViewer.refresh(LaunchConfigurationTabGroupViewer.java:520)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.updateButtons(LaunchConfigurationsDialog.java:1627)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.handleLaunchConfigurationSelectionChanged(LaunchConfigurationsDialog.java:1056)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.lambda$1(LaunchConfigurationsDialog.java:612)
	at org.eclipse.jface.viewers.StructuredViewer$3.run(StructuredViewer.java:821)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:174)
	at org.eclipse.jface.viewers.StructuredViewer.firePostSelectionChanged(StructuredViewer.java:818)
	at org.eclipse.jface.viewers.StructuredViewer.setSelection(StructuredViewer.java:1661)
	at org.eclipse.jface.viewers.TreeViewer.setSelection(TreeViewer.java:1090)
	at org.eclipse.jface.viewers.Viewer.setSelection(Viewer.java:376)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.doInitialTreeSelection(LaunchConfigurationsDialog.java:658)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.initializeContent(LaunchConfigurationsDialog.java:1185)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.createContents(LaunchConfigurationsDialog.java:473)
	at org.eclipse.jface.window.Window.create(Window.java:431)
	at org.eclipse.jface.dialogs.Dialog.create(Dialog.java:1094)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.create(LaunchConfigurationsDialog.java:378)
	at org.eclipse.jface.window.Window.open(Window.java:788)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.open(LaunchConfigurationsDialog.java:1238)
	at org.eclipse.debug.ui.DebugUITools.lambda$1(DebugUITools.java:630)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:74)
	at org.eclipse.debug.ui.DebugUITools.openLaunchConfigurationDialogOnGroup(DebugUITools.java:636)
	at org.eclipse.debug.ui.DebugUITools.openLaunchConfigurationDialogOnGroup(DebugUITools.java:574)
	at org.eclipse.debug.ui.actions.OpenLaunchDialogAction.run(OpenLaunchDialogAction.java:85)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:580)
	at org.eclipse.jface.action.ActionContributionItem.lambda$4(ActionContributionItem.java:414)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1060)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1084)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1069)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:773)
	at org.eclipse.jface.action.ActionContributionItem.lambda$8(ActionContributionItem.java:1207)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1060)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4060)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3632)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1154)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1045)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1440)
!SUBENTRY 1 org.eclipse.jdt.core 4 969 2024-01-11 16:22:57.960
!MESSAGE Fahad [in Fahad.java [in <default> [in src [in New_Project]]]] does not exist

!ENTRY org.eclipse.jdt.launching 4 4 2024-01-11 16:22:58.372
!MESSAGE Fahad [in Fahad.java [in <default> [in src [in New_Project]]]] does not exist
!STACK 1
Java Model Exception: Error in Java Model (code 969): Fahad [in Fahad.java [in <default> [in src [in New_Project]]]] does not exist
	at org.eclipse.jdt.internal.core.JavaElement.newNotPresentException(JavaElement.java:574)
	at org.eclipse.jdt.internal.core.SourceRefElement.getUnderlyingResource(SourceRefElement.java:241)
	at org.eclipse.jdt.internal.launching.JavaMigrationDelegate.getResource(JavaMigrationDelegate.java:111)
	at org.eclipse.jdt.internal.launching.JavaMigrationDelegate.updateResourceMapping(JavaMigrationDelegate.java:150)
	at org.eclipse.jdt.internal.debug.ui.launcher.AbstractJavaMainTab.mapResources(AbstractJavaMainTab.java:213)
	at org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab.performApply(JavaMainTab.java:256)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationTabGroupViewer.refresh(LaunchConfigurationTabGroupViewer.java:520)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.updateButtons(LaunchConfigurationsDialog.java:1627)
	at org.eclipse.debug.ui.AbstractLaunchConfigurationTab.updateLaunchConfigurationDialog(AbstractLaunchConfigurationTab.java:155)
	at org.eclipse.debug.ui.AbstractLaunchConfigurationTab$1.runInUIThread(AbstractLaunchConfigurationTab.java:513)
	at org.eclipse.ui.progress.UIJob.lambda$0(UIJob.java:95)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4035)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3635)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:823)
	at org.eclipse.jface.window.Window.open(Window.java:799)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.open(LaunchConfigurationsDialog.java:1238)
	at org.eclipse.debug.ui.DebugUITools.lambda$1(DebugUITools.java:630)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:74)
	at org.eclipse.debug.ui.DebugUITools.openLaunchConfigurationDialogOnGroup(DebugUITools.java:636)
	at org.eclipse.debug.ui.DebugUITools.openLaunchConfigurationDialogOnGroup(DebugUITools.java:574)
	at org.eclipse.debug.ui.actions.OpenLaunchDialogAction.run(OpenLaunchDialogAction.java:85)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:580)
	at org.eclipse.jface.action.ActionContributionItem.lambda$4(ActionContributionItem.java:414)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1060)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1084)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1069)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:773)
	at org.eclipse.jface.action.ActionContributionItem.lambda$8(ActionContributionItem.java:1207)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1060)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4060)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3632)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1154)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1045)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1440)
!SUBENTRY 1 org.eclipse.jdt.core 4 969 2024-01-11 16:22:58.373
!MESSAGE Fahad [in Fahad.java [in <default> [in src [in New_Project]]]] does not exist

!ENTRY org.eclipse.jdt.launching 4 4 2024-01-11 16:22:58.394
!MESSAGE Fahad [in Fahad.java [in <default> [in src [in New_Project]]]] does not exist
!STACK 1
Java Model Exception: Error in Java Model (code 969): Fahad [in Fahad.java [in <default> [in src [in New_Project]]]] does not exist
	at org.eclipse.jdt.internal.core.JavaElement.newNotPresentException(JavaElement.java:574)
	at org.eclipse.jdt.internal.core.SourceRefElement.getUnderlyingResource(SourceRefElement.java:241)
	at org.eclipse.jdt.internal.launching.JavaMigrationDelegate.getResource(JavaMigrationDelegate.java:111)
	at org.eclipse.jdt.internal.launching.JavaMigrationDelegate.updateResourceMapping(JavaMigrationDelegate.java:150)
	at org.eclipse.jdt.internal.debug.ui.launcher.AbstractJavaMainTab.mapResources(AbstractJavaMainTab.java:213)
	at org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab.performApply(JavaMainTab.java:256)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationTabGroupViewer.refresh(LaunchConfigurationTabGroupViewer.java:520)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.updateButtons(LaunchConfigurationsDialog.java:1627)
	at org.eclipse.debug.ui.AbstractLaunchConfigurationTab.updateLaunchConfigurationDialog(AbstractLaunchConfigurationTab.java:155)
	at org.eclipse.debug.ui.AbstractLaunchConfigurationTab$1.runInUIThread(AbstractLaunchConfigurationTab.java:513)
	at org.eclipse.ui.progress.UIJob.lambda$0(UIJob.java:95)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4035)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3635)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:823)
	at org.eclipse.jface.window.Window.open(Window.java:799)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.open(LaunchConfigurationsDialog.java:1238)
	at org.eclipse.debug.ui.DebugUITools.lambda$1(DebugUITools.java:630)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:74)
	at org.eclipse.debug.ui.DebugUITools.openLaunchConfigurationDialogOnGroup(DebugUITools.java:636)
	at org.eclipse.debug.ui.DebugUITools.openLaunchConfigurationDialogOnGroup(DebugUITools.java:574)
	at org.eclipse.debug.ui.actions.OpenLaunchDialogAction.run(OpenLaunchDialogAction.java:85)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:580)
	at org.eclipse.jface.action.ActionContributionItem.lambda$4(ActionContributionItem.java:414)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1060)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1084)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1069)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:773)
	at org.eclipse.jface.action.ActionContributionItem.lambda$8(ActionContributionItem.java:1207)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1060)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4060)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3632)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1154)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1045)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1440)
!SUBENTRY 1 org.eclipse.jdt.core 4 969 2024-01-11 16:22:58.395
!MESSAGE Fahad [in Fahad.java [in <default> [in src [in New_Project]]]] does not exist

!ENTRY org.eclipse.jdt.launching 4 4 2024-01-11 16:22:58.413
!MESSAGE Fahad [in Fahad.java [in <default> [in src [in New_Project]]]] does not exist
!STACK 1
Java Model Exception: Error in Java Model (code 969): Fahad [in Fahad.java [in <default> [in src [in New_Project]]]] does not exist
	at org.eclipse.jdt.internal.core.JavaElement.newNotPresentException(JavaElement.java:574)
	at org.eclipse.jdt.internal.core.SourceRefElement.getUnderlyingResource(SourceRefElement.java:241)
	at org.eclipse.jdt.internal.launching.JavaMigrationDelegate.getResource(JavaMigrationDelegate.java:111)
	at org.eclipse.jdt.internal.launching.JavaMigrationDelegate.updateResourceMapping(JavaMigrationDelegate.java:150)
	at org.eclipse.jdt.internal.debug.ui.launcher.AbstractJavaMainTab.mapResources(AbstractJavaMainTab.java:213)
	at org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab.performApply(JavaMainTab.java:256)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationTabGroupViewer.refresh(LaunchConfigurationTabGroupViewer.java:520)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.updateButtons(LaunchConfigurationsDialog.java:1627)
	at org.eclipse.debug.ui.AbstractLaunchConfigurationTab.updateLaunchConfigurationDialog(AbstractLaunchConfigurationTab.java:155)
	at org.eclipse.debug.ui.AbstractLaunchConfigurationTab$1.runInUIThread(AbstractLaunchConfigurationTab.java:513)
	at org.eclipse.ui.progress.UIJob.lambda$0(UIJob.java:95)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4035)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3635)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:823)
	at org.eclipse.jface.window.Window.open(Window.java:799)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.open(LaunchConfigurationsDialog.java:1238)
	at org.eclipse.debug.ui.DebugUITools.lambda$1(DebugUITools.java:630)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:74)
	at org.eclipse.debug.ui.DebugUITools.openLaunchConfigurationDialogOnGroup(DebugUITools.java:636)
	at org.eclipse.debug.ui.DebugUITools.openLaunchConfigurationDialogOnGroup(DebugUITools.java:574)
	at org.eclipse.debug.ui.actions.OpenLaunchDialogAction.run(OpenLaunchDialogAction.java:85)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:580)
	at org.eclipse.jface.action.ActionContributionItem.lambda$4(ActionContributionItem.java:414)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1060)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1084)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1069)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:773)
	at org.eclipse.jface.action.ActionContributionItem.lambda$8(ActionContributionItem.java:1207)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1060)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4060)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3632)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1154)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1045)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1440)
!SUBENTRY 1 org.eclipse.jdt.core 4 969 2024-01-11 16:22:58.414
!MESSAGE Fahad [in Fahad.java [in <default> [in src [in New_Project]]]] does not exist

!ENTRY org.eclipse.jdt.launching 4 4 2024-01-11 16:22:58.431
!MESSAGE Fahad [in Fahad.java [in <default> [in src [in New_Project]]]] does not exist
!STACK 1
Java Model Exception: Error in Java Model (code 969): Fahad [in Fahad.java [in <default> [in src [in New_Project]]]] does not exist
	at org.eclipse.jdt.internal.core.JavaElement.newNotPresentException(JavaElement.java:574)
	at org.eclipse.jdt.internal.core.SourceRefElement.getUnderlyingResource(SourceRefElement.java:241)
	at org.eclipse.jdt.internal.launching.JavaMigrationDelegate.getResource(JavaMigrationDelegate.java:111)
	at org.eclipse.jdt.internal.launching.JavaMigrationDelegate.updateResourceMapping(JavaMigrationDelegate.java:150)
	at org.eclipse.jdt.internal.debug.ui.launcher.AbstractJavaMainTab.mapResources(AbstractJavaMainTab.java:213)
	at org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab.performApply(JavaMainTab.java:256)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationTabGroupViewer.refresh(LaunchConfigurationTabGroupViewer.java:520)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.updateButtons(LaunchConfigurationsDialog.java:1627)
	at org.eclipse.debug.ui.AbstractLaunchConfigurationTab.updateLaunchConfigurationDialog(AbstractLaunchConfigurationTab.java:155)
	at org.eclipse.debug.ui.AbstractLaunchConfigurationTab$1.runInUIThread(AbstractLaunchConfigurationTab.java:513)
	at org.eclipse.ui.progress.UIJob.lambda$0(UIJob.java:95)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4035)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3635)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:823)
	at org.eclipse.jface.window.Window.open(Window.java:799)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.open(LaunchConfigurationsDialog.java:1238)
	at org.eclipse.debug.ui.DebugUITools.lambda$1(DebugUITools.java:630)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:74)
	at org.eclipse.debug.ui.DebugUITools.openLaunchConfigurationDialogOnGroup(DebugUITools.java:636)
	at org.eclipse.debug.ui.DebugUITools.openLaunchConfigurationDialogOnGroup(DebugUITools.java:574)
	at org.eclipse.debug.ui.actions.OpenLaunchDialogAction.run(OpenLaunchDialogAction.java:85)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:580)
	at org.eclipse.jface.action.ActionContributionItem.lambda$4(ActionContributionItem.java:414)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1060)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1084)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1069)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:773)
	at org.eclipse.jface.action.ActionContributionItem.lambda$8(ActionContributionItem.java:1207)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1060)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4060)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3632)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1154)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1045)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1440)
!SUBENTRY 1 org.eclipse.jdt.core 4 969 2024-01-11 16:22:58.431
!MESSAGE Fahad [in Fahad.java [in <default> [in src [in New_Project]]]] does not exist

!ENTRY org.eclipse.jdt.launching 4 4 2024-01-11 16:23:51.237
!MESSAGE Durga [in [Working copy] Durga.java [in <default> [in src [in 5.1_Java_Declaration_And_AccessModifier_Practice_1st_Time]]]] does not exist
!STACK 1
Java Model Exception: Error in Java Model (code 969): Durga [in [Working copy] Durga.java [in <default> [in src [in 5.1_Java_Declaration_And_AccessModifier_Practice_1st_Time]]]] does not exist
	at org.eclipse.jdt.internal.core.JavaElement.newNotPresentException(JavaElement.java:574)
	at org.eclipse.jdt.internal.core.SourceRefElement.getUnderlyingResource(SourceRefElement.java:241)
	at org.eclipse.jdt.internal.launching.JavaMigrationDelegate.getResource(JavaMigrationDelegate.java:111)
	at org.eclipse.jdt.internal.launching.JavaMigrationDelegate.updateResourceMapping(JavaMigrationDelegate.java:150)
	at org.eclipse.jdt.internal.debug.ui.launcher.AbstractJavaMainTab.mapResources(AbstractJavaMainTab.java:213)
	at org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab.performApply(JavaMainTab.java:256)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationTabGroupViewer.refresh(LaunchConfigurationTabGroupViewer.java:520)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.updateButtons(LaunchConfigurationsDialog.java:1627)
	at org.eclipse.debug.ui.AbstractLaunchConfigurationTab.updateLaunchConfigurationDialog(AbstractLaunchConfigurationTab.java:155)
	at org.eclipse.jdt.internal.debug.ui.launcher.SharedJavaMainTab.access$0(SharedJavaMainTab.java:1)
	at org.eclipse.jdt.internal.debug.ui.launcher.SharedJavaMainTab$1.modifyText(SharedJavaMainTab.java:70)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:183)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1060)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1084)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1065)
	at org.eclipse.swt.widgets.Text.wmCommandChild(Text.java:3100)
	at org.eclipse.swt.widgets.Control.WM_COMMAND(Control.java:4904)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4756)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5010)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(Native Method)
	at org.eclipse.swt.widgets.Text.callWindowProc(Text.java:293)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4854)
	at org.eclipse.swt.widgets.Text.windowProc(Text.java:2681)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5002)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(Native Method)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3630)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:823)
	at org.eclipse.jface.window.Window.open(Window.java:799)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.open(LaunchConfigurationsDialog.java:1238)
	at org.eclipse.debug.ui.DebugUITools.lambda$1(DebugUITools.java:630)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:74)
	at org.eclipse.debug.ui.DebugUITools.openLaunchConfigurationDialogOnGroup(DebugUITools.java:636)
	at org.eclipse.debug.ui.DebugUITools.openLaunchConfigurationDialogOnGroup(DebugUITools.java:574)
	at org.eclipse.debug.ui.actions.OpenLaunchDialogAction.run(OpenLaunchDialogAction.java:85)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:580)
	at org.eclipse.jface.action.ActionContributionItem.lambda$4(ActionContributionItem.java:414)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1060)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1084)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1069)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:773)
	at org.eclipse.jface.action.ActionContributionItem.lambda$8(ActionContributionItem.java:1207)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1060)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4060)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3632)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1154)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1045)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1440)
!SUBENTRY 1 org.eclipse.jdt.core 4 969 2024-01-11 16:23:51.237
!MESSAGE Durga [in [Working copy] Durga.java [in <default> [in src [in 5.1_Java_Declaration_And_AccessModifier_Practice_1st_Time]]]] does not exist

!ENTRY org.eclipse.jdt.launching 4 4 2024-01-11 16:24:08.858
!MESSAGE Durga [in [Working copy] Durga.java [in <default> [in src [in 5.1_Java_Declaration_And_AccessModifier_Practice_1st_Time]]]] does not exist
!STACK 1
Java Model Exception: Error in Java Model (code 969): Durga [in [Working copy] Durga.java [in <default> [in src [in 5.1_Java_Declaration_And_AccessModifier_Practice_1st_Time]]]] does not exist
	at org.eclipse.jdt.internal.core.JavaElement.newNotPresentException(JavaElement.java:574)
	at org.eclipse.jdt.internal.core.SourceRefElement.getUnderlyingResource(SourceRefElement.java:241)
	at org.eclipse.jdt.internal.launching.JavaMigrationDelegate.getResource(JavaMigrationDelegate.java:111)
	at org.eclipse.jdt.internal.launching.JavaMigrationDelegate.updateResourceMapping(JavaMigrationDelegate.java:150)
	at org.eclipse.jdt.internal.debug.ui.launcher.AbstractJavaMainTab.mapResources(AbstractJavaMainTab.java:213)
	at org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab.performApply(JavaMainTab.java:256)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationTabGroupViewer.refresh(LaunchConfigurationTabGroupViewer.java:520)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.updateButtons(LaunchConfigurationsDialog.java:1627)
	at org.eclipse.debug.ui.AbstractLaunchConfigurationTab.updateLaunchConfigurationDialog(AbstractLaunchConfigurationTab.java:155)
	at org.eclipse.jdt.internal.debug.ui.launcher.SharedJavaMainTab.access$0(SharedJavaMainTab.java:1)
	at org.eclipse.jdt.internal.debug.ui.launcher.SharedJavaMainTab$1.modifyText(SharedJavaMainTab.java:70)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:183)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1060)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1084)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1065)
	at org.eclipse.swt.widgets.Text.wmCommandChild(Text.java:3100)
	at org.eclipse.swt.widgets.Control.WM_COMMAND(Control.java:4904)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4756)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5010)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(Native Method)
	at org.eclipse.swt.widgets.Text.callWindowProc(Text.java:293)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4854)
	at org.eclipse.swt.widgets.Text.windowProc(Text.java:2681)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5002)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(Native Method)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3630)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:823)
	at org.eclipse.jface.window.Window.open(Window.java:799)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.open(LaunchConfigurationsDialog.java:1238)
	at org.eclipse.debug.ui.DebugUITools.lambda$1(DebugUITools.java:630)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:74)
	at org.eclipse.debug.ui.DebugUITools.openLaunchConfigurationDialogOnGroup(DebugUITools.java:636)
	at org.eclipse.debug.ui.DebugUITools.openLaunchConfigurationDialogOnGroup(DebugUITools.java:574)
	at org.eclipse.debug.ui.actions.OpenLaunchDialogAction.run(OpenLaunchDialogAction.java:85)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:580)
	at org.eclipse.jface.action.ActionContributionItem.lambda$4(ActionContributionItem.java:414)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1060)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1084)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1069)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:773)
	at org.eclipse.jface.action.ActionContributionItem.lambda$8(ActionContributionItem.java:1207)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1060)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4060)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3632)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1154)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1045)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1440)
!SUBENTRY 1 org.eclipse.jdt.core 4 969 2024-01-11 16:24:08.859
!MESSAGE Durga [in [Working copy] Durga.java [in <default> [in src [in 5.1_Java_Declaration_And_AccessModifier_Practice_1st_Time]]]] does not exist

!ENTRY org.eclipse.jdt.launching 4 4 2024-01-11 16:24:47.350
!MESSAGE Durga [in [Working copy] Durga.java [in <default> [in src [in 5.1_Java_Declaration_And_AccessModifier_Practice_1st_Time]]]] does not exist
!STACK 1
Java Model Exception: Error in Java Model (code 969): Durga [in [Working copy] Durga.java [in <default> [in src [in 5.1_Java_Declaration_And_AccessModifier_Practice_1st_Time]]]] does not exist
	at org.eclipse.jdt.internal.core.JavaElement.newNotPresentException(JavaElement.java:574)
	at org.eclipse.jdt.internal.core.SourceRefElement.getUnderlyingResource(SourceRefElement.java:241)
	at org.eclipse.jdt.internal.launching.JavaMigrationDelegate.getResource(JavaMigrationDelegate.java:111)
	at org.eclipse.jdt.internal.launching.JavaMigrationDelegate.updateResourceMapping(JavaMigrationDelegate.java:150)
	at org.eclipse.jdt.internal.debug.ui.launcher.AbstractJavaMainTab.mapResources(AbstractJavaMainTab.java:213)
	at org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab.performApply(JavaMainTab.java:256)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationTabGroupViewer.refresh(LaunchConfigurationTabGroupViewer.java:520)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.updateButtons(LaunchConfigurationsDialog.java:1627)
	at org.eclipse.debug.ui.AbstractLaunchConfigurationTab.updateLaunchConfigurationDialog(AbstractLaunchConfigurationTab.java:155)
	at org.eclipse.jdt.internal.debug.ui.launcher.SharedJavaMainTab.access$0(SharedJavaMainTab.java:1)
	at org.eclipse.jdt.internal.debug.ui.launcher.SharedJavaMainTab$1.modifyText(SharedJavaMainTab.java:70)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:183)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1060)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1084)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1065)
	at org.eclipse.swt.widgets.Text.wmCommandChild(Text.java:3100)
	at org.eclipse.swt.widgets.Control.WM_COMMAND(Control.java:4904)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4756)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5010)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(Native Method)
	at org.eclipse.swt.widgets.Text.callWindowProc(Text.java:293)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4854)
	at org.eclipse.swt.widgets.Text.windowProc(Text.java:2681)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5002)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(Native Method)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3630)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:823)
	at org.eclipse.jface.window.Window.open(Window.java:799)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.open(LaunchConfigurationsDialog.java:1238)
	at org.eclipse.debug.ui.DebugUITools.lambda$1(DebugUITools.java:630)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:74)
	at org.eclipse.debug.ui.DebugUITools.openLaunchConfigurationDialogOnGroup(DebugUITools.java:636)
	at org.eclipse.debug.ui.DebugUITools.openLaunchConfigurationDialogOnGroup(DebugUITools.java:574)
	at org.eclipse.debug.ui.actions.OpenLaunchDialogAction.run(OpenLaunchDialogAction.java:85)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:580)
	at org.eclipse.jface.action.ActionContributionItem.lambda$4(ActionContributionItem.java:414)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1060)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1084)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1069)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:773)
	at org.eclipse.jface.action.ActionContributionItem.lambda$8(ActionContributionItem.java:1207)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1060)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4060)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3632)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1154)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1045)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1440)
!SUBENTRY 1 org.eclipse.jdt.core 4 969 2024-01-11 16:24:47.351
!MESSAGE Durga [in [Working copy] Durga.java [in <default> [in src [in 5.1_Java_Declaration_And_AccessModifier_Practice_1st_Time]]]] does not exist

!ENTRY org.eclipse.jdt.launching 4 4 2024-01-11 16:26:00.697
!MESSAGE Durga [in [Working copy] Durga.java [in <default> [in src [in 5.1_Java_Declaration_And_AccessModifier_Practice_1st_Time]]]] does not exist
!STACK 1
Java Model Exception: Error in Java Model (code 969): Durga [in [Working copy] Durga.java [in <default> [in src [in 5.1_Java_Declaration_And_AccessModifier_Practice_1st_Time]]]] does not exist
	at org.eclipse.jdt.internal.core.JavaElement.newNotPresentException(JavaElement.java:574)
	at org.eclipse.jdt.internal.core.SourceRefElement.getUnderlyingResource(SourceRefElement.java:241)
	at org.eclipse.jdt.internal.launching.JavaMigrationDelegate.getResource(JavaMigrationDelegate.java:111)
	at org.eclipse.jdt.internal.launching.JavaMigrationDelegate.updateResourceMapping(JavaMigrationDelegate.java:150)
	at org.eclipse.jdt.internal.debug.ui.launcher.AbstractJavaMainTab.mapResources(AbstractJavaMainTab.java:213)
	at org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab.performApply(JavaMainTab.java:256)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationTabGroupViewer.refresh(LaunchConfigurationTabGroupViewer.java:520)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.updateButtons(LaunchConfigurationsDialog.java:1627)
	at org.eclipse.debug.ui.AbstractLaunchConfigurationTab.updateLaunchConfigurationDialog(AbstractLaunchConfigurationTab.java:155)
	at org.eclipse.jdt.internal.debug.ui.launcher.SharedJavaMainTab.access$0(SharedJavaMainTab.java:1)
	at org.eclipse.jdt.internal.debug.ui.launcher.SharedJavaMainTab$1.modifyText(SharedJavaMainTab.java:70)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:183)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1060)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1084)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1065)
	at org.eclipse.swt.widgets.Text.wmCommandChild(Text.java:3100)
	at org.eclipse.swt.widgets.Control.WM_COMMAND(Control.java:4904)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4756)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5010)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(Native Method)
	at org.eclipse.swt.widgets.Text.callWindowProc(Text.java:293)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4854)
	at org.eclipse.swt.widgets.Text.windowProc(Text.java:2681)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5002)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(Native Method)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3630)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:823)
	at org.eclipse.jface.window.Window.open(Window.java:799)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.open(LaunchConfigurationsDialog.java:1238)
	at org.eclipse.debug.ui.DebugUITools.lambda$1(DebugUITools.java:630)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:74)
	at org.eclipse.debug.ui.DebugUITools.openLaunchConfigurationDialogOnGroup(DebugUITools.java:636)
	at org.eclipse.debug.ui.DebugUITools.openLaunchConfigurationDialogOnGroup(DebugUITools.java:574)
	at org.eclipse.debug.ui.actions.OpenLaunchDialogAction.run(OpenLaunchDialogAction.java:85)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:580)
	at org.eclipse.jface.action.ActionContributionItem.lambda$4(ActionContributionItem.java:414)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1060)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1084)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1069)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:773)
	at org.eclipse.jface.action.ActionContributionItem.lambda$8(ActionContributionItem.java:1207)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1060)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4060)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3632)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1154)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1045)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1440)
!SUBENTRY 1 org.eclipse.jdt.core 4 969 2024-01-11 16:26:00.698
!MESSAGE Durga [in [Working copy] Durga.java [in <default> [in src [in 5.1_Java_Declaration_And_AccessModifier_Practice_1st_Time]]]] does not exist

!ENTRY org.eclipse.jdt.launching 4 4 2024-01-11 16:26:02.623
!MESSAGE Durga [in [Working copy] Durga.java [in <default> [in src [in 5.1_Java_Declaration_And_AccessModifier_Practice_1st_Time]]]] does not exist
!STACK 1
Java Model Exception: Error in Java Model (code 969): Durga [in [Working copy] Durga.java [in <default> [in src [in 5.1_Java_Declaration_And_AccessModifier_Practice_1st_Time]]]] does not exist
	at org.eclipse.jdt.internal.core.JavaElement.newNotPresentException(JavaElement.java:574)
	at org.eclipse.jdt.internal.core.SourceRefElement.getUnderlyingResource(SourceRefElement.java:241)
	at org.eclipse.jdt.internal.launching.JavaMigrationDelegate.getResource(JavaMigrationDelegate.java:111)
	at org.eclipse.jdt.internal.launching.JavaMigrationDelegate.updateResourceMapping(JavaMigrationDelegate.java:150)
	at org.eclipse.jdt.internal.debug.ui.launcher.AbstractJavaMainTab.mapResources(AbstractJavaMainTab.java:213)
	at org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab.performApply(JavaMainTab.java:256)
	at org.eclipse.debug.ui.AbstractLaunchConfigurationTabGroup.performApply(AbstractLaunchConfigurationTabGroup.java:106)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationTabGroupWrapper.performApply(LaunchConfigurationTabGroupWrapper.java:205)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationTabGroupViewer.handleApplyPressed(LaunchConfigurationTabGroupViewer.java:1503)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.handleLaunchPressed(LaunchConfigurationsDialog.java:1072)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog$1.widgetSelected(LaunchConfigurationsDialog.java:464)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:252)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1060)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4060)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3632)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:823)
	at org.eclipse.jface.window.Window.open(Window.java:799)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.open(LaunchConfigurationsDialog.java:1238)
	at org.eclipse.debug.ui.DebugUITools.lambda$1(DebugUITools.java:630)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:74)
	at org.eclipse.debug.ui.DebugUITools.openLaunchConfigurationDialogOnGroup(DebugUITools.java:636)
	at org.eclipse.debug.ui.DebugUITools.openLaunchConfigurationDialogOnGroup(DebugUITools.java:574)
	at org.eclipse.debug.ui.actions.OpenLaunchDialogAction.run(OpenLaunchDialogAction.java:85)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:580)
	at org.eclipse.jface.action.ActionContributionItem.lambda$4(ActionContributionItem.java:414)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1060)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1084)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1069)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:773)
	at org.eclipse.jface.action.ActionContributionItem.lambda$8(ActionContributionItem.java:1207)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1060)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4060)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3632)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1154)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1045)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1440)
!SUBENTRY 1 org.eclipse.jdt.core 4 969 2024-01-11 16:26:02.624
!MESSAGE Durga [in [Working copy] Durga.java [in <default> [in src [in 5.1_Java_Declaration_And_AccessModifier_Practice_1st_Time]]]] does not exist

!ENTRY org.eclipse.jdt.launching 4 4 2024-01-11 16:31:12.130
!MESSAGE Durga [in [Working copy] Durga.java [in <default> [in src [in 5.1_Java_Declaration_And_AccessModifier_Practice_1st_Time]]]] does not exist
!STACK 1
Java Model Exception: Error in Java Model (code 969): Durga [in [Working copy] Durga.java [in <default> [in src [in 5.1_Java_Declaration_And_AccessModifier_Practice_1st_Time]]]] does not exist
	at org.eclipse.jdt.internal.core.JavaElement.newNotPresentException(JavaElement.java:574)
	at org.eclipse.jdt.internal.core.SourceRefElement.getUnderlyingResource(SourceRefElement.java:241)
	at org.eclipse.jdt.internal.launching.JavaMigrationDelegate.getResource(JavaMigrationDelegate.java:111)
	at org.eclipse.jdt.internal.launching.JavaMigrationDelegate.updateResourceMapping(JavaMigrationDelegate.java:150)
	at org.eclipse.jdt.internal.debug.ui.launcher.AbstractJavaMainTab.mapResources(AbstractJavaMainTab.java:213)
	at org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab.performApply(JavaMainTab.java:256)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationTabGroupViewer.refresh(LaunchConfigurationTabGroupViewer.java:520)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.updateButtons(LaunchConfigurationsDialog.java:1630)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.refreshStatus(LaunchConfigurationsDialog.java:1331)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationTabGroupViewer.refreshStatus(LaunchConfigurationTabGroupViewer.java:1117)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationTabGroupViewer.lambda$4(LaunchConfigurationTabGroupViewer.java:738)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:74)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationTabGroupViewer.inputChanged(LaunchConfigurationTabGroupViewer.java:742)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationTabGroupViewer.setInput0(LaunchConfigurationTabGroupViewer.java:674)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationTabGroupViewer.setInput(LaunchConfigurationTabGroupViewer.java:654)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.handleLaunchConfigurationSelectionChanged(LaunchConfigurationsDialog.java:1049)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.lambda$1(LaunchConfigurationsDialog.java:612)
	at org.eclipse.jface.viewers.StructuredViewer$3.run(StructuredViewer.java:821)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:174)
	at org.eclipse.jface.viewers.StructuredViewer.firePostSelectionChanged(StructuredViewer.java:818)
	at org.eclipse.jface.viewers.StructuredViewer.setSelection(StructuredViewer.java:1661)
	at org.eclipse.jface.viewers.TreeViewer.setSelection(TreeViewer.java:1090)
	at org.eclipse.jface.viewers.Viewer.setSelection(Viewer.java:376)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.doInitialTreeSelection(LaunchConfigurationsDialog.java:658)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.initializeContent(LaunchConfigurationsDialog.java:1185)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.createContents(LaunchConfigurationsDialog.java:473)
	at org.eclipse.jface.window.Window.create(Window.java:431)
	at org.eclipse.jface.dialogs.Dialog.create(Dialog.java:1094)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.create(LaunchConfigurationsDialog.java:378)
	at org.eclipse.jface.window.Window.open(Window.java:788)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.open(LaunchConfigurationsDialog.java:1238)
	at org.eclipse.debug.ui.DebugUITools.lambda$1(DebugUITools.java:630)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:74)
	at org.eclipse.debug.ui.DebugUITools.openLaunchConfigurationDialogOnGroup(DebugUITools.java:636)
	at org.eclipse.debug.ui.DebugUITools.openLaunchConfigurationDialogOnGroup(DebugUITools.java:574)
	at org.eclipse.debug.ui.actions.OpenLaunchDialogAction.run(OpenLaunchDialogAction.java:85)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:580)
	at org.eclipse.jface.action.ActionContributionItem.lambda$4(ActionContributionItem.java:414)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1060)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1084)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1069)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:773)
	at org.eclipse.jface.action.ActionContributionItem.lambda$8(ActionContributionItem.java:1207)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1060)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4060)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3632)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1154)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1045)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1440)
!SUBENTRY 1 org.eclipse.jdt.core 4 969 2024-01-11 16:31:12.131
!MESSAGE Durga [in [Working copy] Durga.java [in <default> [in src [in 5.1_Java_Declaration_And_AccessModifier_Practice_1st_Time]]]] does not exist

!ENTRY org.eclipse.jdt.launching 4 4 2024-01-11 16:31:12.136
!MESSAGE Durga [in [Working copy] Durga.java [in <default> [in src [in 5.1_Java_Declaration_And_AccessModifier_Practice_1st_Time]]]] does not exist
!STACK 1
Java Model Exception: Error in Java Model (code 969): Durga [in [Working copy] Durga.java [in <default> [in src [in 5.1_Java_Declaration_And_AccessModifier_Practice_1st_Time]]]] does not exist
	at org.eclipse.jdt.internal.core.JavaElement.newNotPresentException(JavaElement.java:574)
	at org.eclipse.jdt.internal.core.SourceRefElement.getUnderlyingResource(SourceRefElement.java:241)
	at org.eclipse.jdt.internal.launching.JavaMigrationDelegate.getResource(JavaMigrationDelegate.java:111)
	at org.eclipse.jdt.internal.launching.JavaMigrationDelegate.updateResourceMapping(JavaMigrationDelegate.java:150)
	at org.eclipse.jdt.internal.debug.ui.launcher.AbstractJavaMainTab.mapResources(AbstractJavaMainTab.java:213)
	at org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab.performApply(JavaMainTab.java:256)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationTabGroupViewer.refresh(LaunchConfigurationTabGroupViewer.java:520)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.updateButtons(LaunchConfigurationsDialog.java:1627)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.handleLaunchConfigurationSelectionChanged(LaunchConfigurationsDialog.java:1056)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.lambda$1(LaunchConfigurationsDialog.java:612)
	at org.eclipse.jface.viewers.StructuredViewer$3.run(StructuredViewer.java:821)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:174)
	at org.eclipse.jface.viewers.StructuredViewer.firePostSelectionChanged(StructuredViewer.java:818)
	at org.eclipse.jface.viewers.StructuredViewer.setSelection(StructuredViewer.java:1661)
	at org.eclipse.jface.viewers.TreeViewer.setSelection(TreeViewer.java:1090)
	at org.eclipse.jface.viewers.Viewer.setSelection(Viewer.java:376)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.doInitialTreeSelection(LaunchConfigurationsDialog.java:658)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.initializeContent(LaunchConfigurationsDialog.java:1185)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.createContents(LaunchConfigurationsDialog.java:473)
	at org.eclipse.jface.window.Window.create(Window.java:431)
	at org.eclipse.jface.dialogs.Dialog.create(Dialog.java:1094)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.create(LaunchConfigurationsDialog.java:378)
	at org.eclipse.jface.window.Window.open(Window.java:788)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.open(LaunchConfigurationsDialog.java:1238)
	at org.eclipse.debug.ui.DebugUITools.lambda$1(DebugUITools.java:630)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:74)
	at org.eclipse.debug.ui.DebugUITools.openLaunchConfigurationDialogOnGroup(DebugUITools.java:636)
	at org.eclipse.debug.ui.DebugUITools.openLaunchConfigurationDialogOnGroup(DebugUITools.java:574)
	at org.eclipse.debug.ui.actions.OpenLaunchDialogAction.run(OpenLaunchDialogAction.java:85)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:580)
	at org.eclipse.jface.action.ActionContributionItem.lambda$4(ActionContributionItem.java:414)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1060)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1084)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1069)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:773)
	at org.eclipse.jface.action.ActionContributionItem.lambda$8(ActionContributionItem.java:1207)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1060)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4060)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3632)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1154)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1045)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1440)
!SUBENTRY 1 org.eclipse.jdt.core 4 969 2024-01-11 16:31:12.137
!MESSAGE Durga [in [Working copy] Durga.java [in <default> [in src [in 5.1_Java_Declaration_And_AccessModifier_Practice_1st_Time]]]] does not exist

!ENTRY org.eclipse.jdt.launching 4 4 2024-01-11 16:31:12.791
!MESSAGE Durga [in [Working copy] Durga.java [in <default> [in src [in 5.1_Java_Declaration_And_AccessModifier_Practice_1st_Time]]]] does not exist
!STACK 1
Java Model Exception: Error in Java Model (code 969): Durga [in [Working copy] Durga.java [in <default> [in src [in 5.1_Java_Declaration_And_AccessModifier_Practice_1st_Time]]]] does not exist
	at org.eclipse.jdt.internal.core.JavaElement.newNotPresentException(JavaElement.java:574)
	at org.eclipse.jdt.internal.core.SourceRefElement.getUnderlyingResource(SourceRefElement.java:241)
	at org.eclipse.jdt.internal.launching.JavaMigrationDelegate.getResource(JavaMigrationDelegate.java:111)
	at org.eclipse.jdt.internal.launching.JavaMigrationDelegate.updateResourceMapping(JavaMigrationDelegate.java:150)
	at org.eclipse.jdt.internal.debug.ui.launcher.AbstractJavaMainTab.mapResources(AbstractJavaMainTab.java:213)
	at org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab.performApply(JavaMainTab.java:256)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationTabGroupViewer.refresh(LaunchConfigurationTabGroupViewer.java:520)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.updateButtons(LaunchConfigurationsDialog.java:1627)
	at org.eclipse.debug.ui.AbstractLaunchConfigurationTab.updateLaunchConfigurationDialog(AbstractLaunchConfigurationTab.java:155)
	at org.eclipse.debug.ui.AbstractLaunchConfigurationTab$1.runInUIThread(AbstractLaunchConfigurationTab.java:513)
	at org.eclipse.ui.progress.UIJob.lambda$0(UIJob.java:95)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4035)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3635)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:823)
	at org.eclipse.jface.window.Window.open(Window.java:799)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.open(LaunchConfigurationsDialog.java:1238)
	at org.eclipse.debug.ui.DebugUITools.lambda$1(DebugUITools.java:630)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:74)
	at org.eclipse.debug.ui.DebugUITools.openLaunchConfigurationDialogOnGroup(DebugUITools.java:636)
	at org.eclipse.debug.ui.DebugUITools.openLaunchConfigurationDialogOnGroup(DebugUITools.java:574)
	at org.eclipse.debug.ui.actions.OpenLaunchDialogAction.run(OpenLaunchDialogAction.java:85)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:580)
	at org.eclipse.jface.action.ActionContributionItem.lambda$4(ActionContributionItem.java:414)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1060)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1084)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1069)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:773)
	at org.eclipse.jface.action.ActionContributionItem.lambda$8(ActionContributionItem.java:1207)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1060)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4060)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3632)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1154)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1045)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1440)
!SUBENTRY 1 org.eclipse.jdt.core 4 969 2024-01-11 16:31:12.792
!MESSAGE Durga [in [Working copy] Durga.java [in <default> [in src [in 5.1_Java_Declaration_And_AccessModifier_Practice_1st_Time]]]] does not exist

!ENTRY org.eclipse.jdt.launching 4 4 2024-01-11 16:31:12.812
!MESSAGE Durga [in [Working copy] Durga.java [in <default> [in src [in 5.1_Java_Declaration_And_AccessModifier_Practice_1st_Time]]]] does not exist
!STACK 1
Java Model Exception: Error in Java Model (code 969): Durga [in [Working copy] Durga.java [in <default> [in src [in 5.1_Java_Declaration_And_AccessModifier_Practice_1st_Time]]]] does not exist
	at org.eclipse.jdt.internal.core.JavaElement.newNotPresentException(JavaElement.java:574)
	at org.eclipse.jdt.internal.core.SourceRefElement.getUnderlyingResource(SourceRefElement.java:241)
	at org.eclipse.jdt.internal.launching.JavaMigrationDelegate.getResource(JavaMigrationDelegate.java:111)
	at org.eclipse.jdt.internal.launching.JavaMigrationDelegate.updateResourceMapping(JavaMigrationDelegate.java:150)
	at org.eclipse.jdt.internal.debug.ui.launcher.AbstractJavaMainTab.mapResources(AbstractJavaMainTab.java:213)
	at org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab.performApply(JavaMainTab.java:256)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationTabGroupViewer.refresh(LaunchConfigurationTabGroupViewer.java:520)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.updateButtons(LaunchConfigurationsDialog.java:1627)
	at org.eclipse.debug.ui.AbstractLaunchConfigurationTab.updateLaunchConfigurationDialog(AbstractLaunchConfigurationTab.java:155)
	at org.eclipse.debug.ui.AbstractLaunchConfigurationTab$1.runInUIThread(AbstractLaunchConfigurationTab.java:513)
	at org.eclipse.ui.progress.UIJob.lambda$0(UIJob.java:95)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4035)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3635)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:823)
	at org.eclipse.jface.window.Window.open(Window.java:799)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.open(LaunchConfigurationsDialog.java:1238)
	at org.eclipse.debug.ui.DebugUITools.lambda$1(DebugUITools.java:630)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:74)
	at org.eclipse.debug.ui.DebugUITools.openLaunchConfigurationDialogOnGroup(DebugUITools.java:636)
	at org.eclipse.debug.ui.DebugUITools.openLaunchConfigurationDialogOnGroup(DebugUITools.java:574)
	at org.eclipse.debug.ui.actions.OpenLaunchDialogAction.run(OpenLaunchDialogAction.java:85)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:580)
	at org.eclipse.jface.action.ActionContributionItem.lambda$4(ActionContributionItem.java:414)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1060)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1084)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1069)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:773)
	at org.eclipse.jface.action.ActionContributionItem.lambda$8(ActionContributionItem.java:1207)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1060)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4060)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3632)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1154)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1045)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1440)
!SUBENTRY 1 org.eclipse.jdt.core 4 969 2024-01-11 16:31:12.813
!MESSAGE Durga [in [Working copy] Durga.java [in <default> [in src [in 5.1_Java_Declaration_And_AccessModifier_Practice_1st_Time]]]] does not exist

!ENTRY org.eclipse.jdt.launching 4 4 2024-01-11 16:31:12.840
!MESSAGE Durga [in [Working copy] Durga.java [in <default> [in src [in 5.1_Java_Declaration_And_AccessModifier_Practice_1st_Time]]]] does not exist
!STACK 1
Java Model Exception: Error in Java Model (code 969): Durga [in [Working copy] Durga.java [in <default> [in src [in 5.1_Java_Declaration_And_AccessModifier_Practice_1st_Time]]]] does not exist
	at org.eclipse.jdt.internal.core.JavaElement.newNotPresentException(JavaElement.java:574)
	at org.eclipse.jdt.internal.core.SourceRefElement.getUnderlyingResource(SourceRefElement.java:241)
	at org.eclipse.jdt.internal.launching.JavaMigrationDelegate.getResource(JavaMigrationDelegate.java:111)
	at org.eclipse.jdt.internal.launching.JavaMigrationDelegate.updateResourceMapping(JavaMigrationDelegate.java:150)
	at org.eclipse.jdt.internal.debug.ui.launcher.AbstractJavaMainTab.mapResources(AbstractJavaMainTab.java:213)
	at org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab.performApply(JavaMainTab.java:256)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationTabGroupViewer.refresh(LaunchConfigurationTabGroupViewer.java:520)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.updateButtons(LaunchConfigurationsDialog.java:1627)
	at org.eclipse.debug.ui.AbstractLaunchConfigurationTab.updateLaunchConfigurationDialog(AbstractLaunchConfigurationTab.java:155)
	at org.eclipse.debug.ui.AbstractLaunchConfigurationTab$1.runInUIThread(AbstractLaunchConfigurationTab.java:513)
	at org.eclipse.ui.progress.UIJob.lambda$0(UIJob.java:95)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4035)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3635)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:823)
	at org.eclipse.jface.window.Window.open(Window.java:799)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.open(LaunchConfigurationsDialog.java:1238)
	at org.eclipse.debug.ui.DebugUITools.lambda$1(DebugUITools.java:630)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:74)
	at org.eclipse.debug.ui.DebugUITools.openLaunchConfigurationDialogOnGroup(DebugUITools.java:636)
	at org.eclipse.debug.ui.DebugUITools.openLaunchConfigurationDialogOnGroup(DebugUITools.java:574)
	at org.eclipse.debug.ui.actions.OpenLaunchDialogAction.run(OpenLaunchDialogAction.java:85)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:580)
	at org.eclipse.jface.action.ActionContributionItem.lambda$4(ActionContributionItem.java:414)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1060)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1084)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1069)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:773)
	at org.eclipse.jface.action.ActionContributionItem.lambda$8(ActionContributionItem.java:1207)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1060)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4060)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3632)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1154)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1045)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1440)
!SUBENTRY 1 org.eclipse.jdt.core 4 969 2024-01-11 16:31:12.841
!MESSAGE Durga [in [Working copy] Durga.java [in <default> [in src [in 5.1_Java_Declaration_And_AccessModifier_Practice_1st_Time]]]] does not exist

!ENTRY org.eclipse.jdt.launching 4 4 2024-01-11 16:31:12.863
!MESSAGE Durga [in [Working copy] Durga.java [in <default> [in src [in 5.1_Java_Declaration_And_AccessModifier_Practice_1st_Time]]]] does not exist
!STACK 1
Java Model Exception: Error in Java Model (code 969): Durga [in [Working copy] Durga.java [in <default> [in src [in 5.1_Java_Declaration_And_AccessModifier_Practice_1st_Time]]]] does not exist
	at org.eclipse.jdt.internal.core.JavaElement.newNotPresentException(JavaElement.java:574)
	at org.eclipse.jdt.internal.core.SourceRefElement.getUnderlyingResource(SourceRefElement.java:241)
	at org.eclipse.jdt.internal.launching.JavaMigrationDelegate.getResource(JavaMigrationDelegate.java:111)
	at org.eclipse.jdt.internal.launching.JavaMigrationDelegate.updateResourceMapping(JavaMigrationDelegate.java:150)
	at org.eclipse.jdt.internal.debug.ui.launcher.AbstractJavaMainTab.mapResources(AbstractJavaMainTab.java:213)
	at org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab.performApply(JavaMainTab.java:256)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationTabGroupViewer.refresh(LaunchConfigurationTabGroupViewer.java:520)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.updateButtons(LaunchConfigurationsDialog.java:1627)
	at org.eclipse.debug.ui.AbstractLaunchConfigurationTab.updateLaunchConfigurationDialog(AbstractLaunchConfigurationTab.java:155)
	at org.eclipse.debug.ui.AbstractLaunchConfigurationTab$1.runInUIThread(AbstractLaunchConfigurationTab.java:513)
	at org.eclipse.ui.progress.UIJob.lambda$0(UIJob.java:95)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4035)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3635)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:823)
	at org.eclipse.jface.window.Window.open(Window.java:799)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.open(LaunchConfigurationsDialog.java:1238)
	at org.eclipse.debug.ui.DebugUITools.lambda$1(DebugUITools.java:630)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:74)
	at org.eclipse.debug.ui.DebugUITools.openLaunchConfigurationDialogOnGroup(DebugUITools.java:636)
	at org.eclipse.debug.ui.DebugUITools.openLaunchConfigurationDialogOnGroup(DebugUITools.java:574)
	at org.eclipse.debug.ui.actions.OpenLaunchDialogAction.run(OpenLaunchDialogAction.java:85)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:580)
	at org.eclipse.jface.action.ActionContributionItem.lambda$4(ActionContributionItem.java:414)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1060)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1084)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1069)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:773)
	at org.eclipse.jface.action.ActionContributionItem.lambda$8(ActionContributionItem.java:1207)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1060)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4060)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3632)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1154)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1045)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1440)
!SUBENTRY 1 org.eclipse.jdt.core 4 969 2024-01-11 16:31:12.864
!MESSAGE Durga [in [Working copy] Durga.java [in <default> [in src [in 5.1_Java_Declaration_And_AccessModifier_Practice_1st_Time]]]] does not exist
!SESSION 2024-01-11 20:05:12.574 -----------------------------------------------
eclipse.buildId=4.22.0.I20211124-1800
java.version=17.0.6
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2024-01-11 20:05:22.064
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2024-01-11 20:05:22.064
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@3cb04dd,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@73d91faf,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2024-01-11 20:05:22.064
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@30fa8a6b,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@6f112f70,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2024-01-11 20:05:31.506
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\2101917'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2024-01-14 15:59:24.945 -----------------------------------------------
eclipse.buildId=4.22.0.I20211124-1800
java.version=17.0.6
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2024-01-14 15:59:37.511
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2024-01-14 15:59:37.511
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@2beee3e8,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@732d078d,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2024-01-14 15:59:37.511
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@58bad46f,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@7c0e4e4e,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2024-01-14 15:59:50.737
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\2101917'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2024-01-14 17:04:53.623 -----------------------------------------------
eclipse.buildId=4.22.0.I20211124-1800
java.version=17.0.6
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2024-01-14 17:05:05.292
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2024-01-14 17:05:05.292
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@732d078d,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@58bad46f,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2024-01-14 17:05:05.293
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@7c0e4e4e,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@20231384,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2024-01-14 17:05:18.021
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\2101917'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2024-01-18 16:38:28.178 -----------------------------------------------
eclipse.buildId=4.22.0.I20211124-1800
java.version=17.0.6
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2024-01-18 16:38:41.920
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2024-01-18 16:38:41.920
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@73d91faf,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@30fa8a6b,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2024-01-18 16:38:41.920
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@6f112f70,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@342723a3,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2024-01-18 16:38:55.245
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\2101917'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.core.net 1 0 2024-01-18 18:34:13.449
!MESSAGE System property http.proxyHost is set to proxy.cognizant.com but should not be set.

!ENTRY org.eclipse.core.net 1 0 2024-01-18 18:34:13.451
!MESSAGE System property http.proxyPort is set to 6050 but should not be set.

!ENTRY org.eclipse.core.net 1 0 2024-01-18 18:34:13.454
!MESSAGE System property https.proxyHost is set to proxy.cognizant.com but should not be set.

!ENTRY org.eclipse.core.net 1 0 2024-01-18 18:34:13.456
!MESSAGE System property https.proxyPort is set to 6050 but should not be set.

!ENTRY org.eclipse.jdt.ui 4 10001 2024-01-18 18:34:16.467
!MESSAGE Internal Error
!STACK 1
Java Model Exception: java.io.IOException: Authentication failure
	at org.eclipse.jdt.internal.core.JavaElement.getURLContents(JavaElement.java:943)
	at org.eclipse.jdt.internal.core.PackageFragment.getAttachedJavadoc(PackageFragment.java:587)
	at org.eclipse.jdt.internal.ui.text.javadoc.JavadocContentAccess2.getHTMLContent(JavadocContentAccess2.java:2125)
	at org.eclipse.jdt.internal.ui.text.javadoc.JavadocContentAccess2.getHTMLContent(JavadocContentAccess2.java:505)
	at org.eclipse.jdt.internal.ui.text.java.ProposalInfo.extractJavadoc(ProposalInfo.java:93)
	at org.eclipse.jdt.internal.ui.text.java.ProposalInfo.computeInfo(ProposalInfo.java:78)
	at org.eclipse.jdt.internal.ui.text.java.ProposalInfo.getInfo(ProposalInfo.java:63)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getAdditionalProposalInfo(AbstractJavaCompletionProposal.java:583)
	at org.eclipse.jface.text.contentassist.AdditionalInfoController$Timer$2$1.run(AdditionalInfoController.java:116)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
Caused by: java.io.IOException: Authentication failure
	at java.base/sun.net.www.protocol.http.HttpURLConnection.doTunneling0(HttpURLConnection.java:2237)
	at java.base/sun.net.www.protocol.http.HttpURLConnection.doTunneling(HttpURLConnection.java:2136)
	at java.base/sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:185)
	at java.base/sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1665)
	at java.base/sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1589)
	at java.base/java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:529)
	at java.base/sun.net.www.protocol.https.HttpsURLConnectionImpl.getResponseCode(HttpsURLConnectionImpl.java:308)
	at org.eclipse.jdt.internal.core.JavaElement.getURLContents(JavaElement.java:874)
	... 9 more
Caused by: java.io.IOException: Authentication failure
	at java.base/sun.net.www.protocol.http.HttpURLConnection.doTunneling0(HttpURLConnection.java:2237)
	at java.base/sun.net.www.protocol.http.HttpURLConnection.doTunneling(HttpURLConnection.java:2136)
	at java.base/sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:185)
	at java.base/sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1665)
	at java.base/sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1589)
	at java.base/java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:529)
	at java.base/sun.net.www.protocol.https.HttpsURLConnectionImpl.getResponseCode(HttpsURLConnectionImpl.java:308)
	at org.eclipse.jdt.internal.core.JavaElement.getURLContents(JavaElement.java:874)
	at org.eclipse.jdt.internal.core.PackageFragment.getAttachedJavadoc(PackageFragment.java:587)
	at org.eclipse.jdt.internal.ui.text.javadoc.JavadocContentAccess2.getHTMLContent(JavadocContentAccess2.java:2125)
	at org.eclipse.jdt.internal.ui.text.javadoc.JavadocContentAccess2.getHTMLContent(JavadocContentAccess2.java:505)
	at org.eclipse.jdt.internal.ui.text.java.ProposalInfo.extractJavadoc(ProposalInfo.java:93)
	at org.eclipse.jdt.internal.ui.text.java.ProposalInfo.computeInfo(ProposalInfo.java:78)
	at org.eclipse.jdt.internal.ui.text.java.ProposalInfo.getInfo(ProposalInfo.java:63)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getAdditionalProposalInfo(AbstractJavaCompletionProposal.java:583)
	at org.eclipse.jface.text.contentassist.AdditionalInfoController$Timer$2$1.run(AdditionalInfoController.java:116)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
!SUBENTRY 1 org.eclipse.jdt.core 4 985 2024-01-18 18:34:16.469
!MESSAGE Authentication failure
!STACK 0
java.io.IOException: Authentication failure
	at java.base/sun.net.www.protocol.http.HttpURLConnection.doTunneling0(HttpURLConnection.java:2237)
	at java.base/sun.net.www.protocol.http.HttpURLConnection.doTunneling(HttpURLConnection.java:2136)
	at java.base/sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:185)
	at java.base/sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1665)
	at java.base/sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1589)
	at java.base/java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:529)
	at java.base/sun.net.www.protocol.https.HttpsURLConnectionImpl.getResponseCode(HttpsURLConnectionImpl.java:308)
	at org.eclipse.jdt.internal.core.JavaElement.getURLContents(JavaElement.java:874)
	at org.eclipse.jdt.internal.core.PackageFragment.getAttachedJavadoc(PackageFragment.java:587)
	at org.eclipse.jdt.internal.ui.text.javadoc.JavadocContentAccess2.getHTMLContent(JavadocContentAccess2.java:2125)
	at org.eclipse.jdt.internal.ui.text.javadoc.JavadocContentAccess2.getHTMLContent(JavadocContentAccess2.java:505)
	at org.eclipse.jdt.internal.ui.text.java.ProposalInfo.extractJavadoc(ProposalInfo.java:93)
	at org.eclipse.jdt.internal.ui.text.java.ProposalInfo.computeInfo(ProposalInfo.java:78)
	at org.eclipse.jdt.internal.ui.text.java.ProposalInfo.getInfo(ProposalInfo.java:63)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getAdditionalProposalInfo(AbstractJavaCompletionProposal.java:583)
	at org.eclipse.jface.text.contentassist.AdditionalInfoController$Timer$2$1.run(AdditionalInfoController.java:116)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.ui 4 10001 2024-01-18 18:34:16.471
!MESSAGE Internal Error
!STACK 1
Java Model Exception: java.io.IOException: Authentication failure
	at org.eclipse.jdt.internal.core.JavaElement.getURLContents(JavaElement.java:943)
	at org.eclipse.jdt.internal.core.PackageFragment.getAttachedJavadoc(PackageFragment.java:587)
	at org.eclipse.jdt.internal.ui.text.javadoc.JavadocContentAccess2.getHTMLContent(JavadocContentAccess2.java:2125)
	at org.eclipse.jdt.internal.ui.text.javadoc.JavadocContentAccess2.getHTMLContent(JavadocContentAccess2.java:505)
	at org.eclipse.jdt.internal.ui.text.java.ProposalInfo.extractJavadoc(ProposalInfo.java:93)
	at org.eclipse.jdt.internal.ui.text.java.ProposalInfo.computeInfo(ProposalInfo.java:78)
	at org.eclipse.jdt.internal.ui.text.java.ProposalInfo.getInfo(ProposalInfo.java:63)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getAdditionalProposalInfo(AbstractJavaCompletionProposal.java:583)
	at org.eclipse.jface.text.contentassist.AdditionalInfoController$Timer$2$1.run(AdditionalInfoController.java:116)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
Caused by: java.io.IOException: Authentication failure
	at java.base/sun.net.www.protocol.http.HttpURLConnection.doTunneling0(HttpURLConnection.java:2237)
	at java.base/sun.net.www.protocol.http.HttpURLConnection.doTunneling(HttpURLConnection.java:2136)
	at java.base/sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:185)
	at java.base/sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1665)
	at java.base/sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1589)
	at java.base/java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:529)
	at java.base/sun.net.www.protocol.https.HttpsURLConnectionImpl.getResponseCode(HttpsURLConnectionImpl.java:308)
	at org.eclipse.jdt.internal.core.JavaElement.getURLContents(JavaElement.java:874)
	... 9 more
Caused by: java.io.IOException: Authentication failure
	at java.base/sun.net.www.protocol.http.HttpURLConnection.doTunneling0(HttpURLConnection.java:2237)
	at java.base/sun.net.www.protocol.http.HttpURLConnection.doTunneling(HttpURLConnection.java:2136)
	at java.base/sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:185)
	at java.base/sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1665)
	at java.base/sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1589)
	at java.base/java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:529)
	at java.base/sun.net.www.protocol.https.HttpsURLConnectionImpl.getResponseCode(HttpsURLConnectionImpl.java:308)
	at org.eclipse.jdt.internal.core.JavaElement.getURLContents(JavaElement.java:874)
	at org.eclipse.jdt.internal.core.PackageFragment.getAttachedJavadoc(PackageFragment.java:587)
	at org.eclipse.jdt.internal.ui.text.javadoc.JavadocContentAccess2.getHTMLContent(JavadocContentAccess2.java:2125)
	at org.eclipse.jdt.internal.ui.text.javadoc.JavadocContentAccess2.getHTMLContent(JavadocContentAccess2.java:505)
	at org.eclipse.jdt.internal.ui.text.java.ProposalInfo.extractJavadoc(ProposalInfo.java:93)
	at org.eclipse.jdt.internal.ui.text.java.ProposalInfo.computeInfo(ProposalInfo.java:78)
	at org.eclipse.jdt.internal.ui.text.java.ProposalInfo.getInfo(ProposalInfo.java:63)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getAdditionalProposalInfo(AbstractJavaCompletionProposal.java:583)
	at org.eclipse.jface.text.contentassist.AdditionalInfoController$Timer$2$1.run(AdditionalInfoController.java:116)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
!SUBENTRY 1 org.eclipse.jdt.core 4 985 2024-01-18 18:34:16.472
!MESSAGE Authentication failure
!STACK 0
java.io.IOException: Authentication failure
	at java.base/sun.net.www.protocol.http.HttpURLConnection.doTunneling0(HttpURLConnection.java:2237)
	at java.base/sun.net.www.protocol.http.HttpURLConnection.doTunneling(HttpURLConnection.java:2136)
	at java.base/sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:185)
	at java.base/sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1665)
	at java.base/sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1589)
	at java.base/java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:529)
	at java.base/sun.net.www.protocol.https.HttpsURLConnectionImpl.getResponseCode(HttpsURLConnectionImpl.java:308)
	at org.eclipse.jdt.internal.core.JavaElement.getURLContents(JavaElement.java:874)
	at org.eclipse.jdt.internal.core.PackageFragment.getAttachedJavadoc(PackageFragment.java:587)
	at org.eclipse.jdt.internal.ui.text.javadoc.JavadocContentAccess2.getHTMLContent(JavadocContentAccess2.java:2125)
	at org.eclipse.jdt.internal.ui.text.javadoc.JavadocContentAccess2.getHTMLContent(JavadocContentAccess2.java:505)
	at org.eclipse.jdt.internal.ui.text.java.ProposalInfo.extractJavadoc(ProposalInfo.java:93)
	at org.eclipse.jdt.internal.ui.text.java.ProposalInfo.computeInfo(ProposalInfo.java:78)
	at org.eclipse.jdt.internal.ui.text.java.ProposalInfo.getInfo(ProposalInfo.java:63)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getAdditionalProposalInfo(AbstractJavaCompletionProposal.java:583)
	at org.eclipse.jface.text.contentassist.AdditionalInfoController$Timer$2$1.run(AdditionalInfoController.java:116)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.ui 4 10001 2024-01-18 18:34:16.501
!MESSAGE Internal Error
!STACK 1
Java Model Exception: java.io.IOException: Authentication failure
	at org.eclipse.jdt.internal.core.JavaElement.getURLContents(JavaElement.java:943)
	at org.eclipse.jdt.internal.core.PackageFragment.getAttachedJavadoc(PackageFragment.java:587)
	at org.eclipse.jdt.internal.ui.text.javadoc.JavadocContentAccess2.getHTMLContent(JavadocContentAccess2.java:2125)
	at org.eclipse.jdt.internal.ui.text.javadoc.JavadocContentAccess2.getHTMLContent(JavadocContentAccess2.java:505)
	at org.eclipse.jdt.internal.ui.text.java.ProposalInfo.extractJavadoc(ProposalInfo.java:93)
	at org.eclipse.jdt.internal.ui.text.java.ProposalInfo.computeInfo(ProposalInfo.java:78)
	at org.eclipse.jdt.internal.ui.text.java.ProposalInfo.getInfo(ProposalInfo.java:63)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getAdditionalProposalInfo(AbstractJavaCompletionProposal.java:583)
	at org.eclipse.jface.text.contentassist.AdditionalInfoController$Timer$2$1.run(AdditionalInfoController.java:116)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
Caused by: java.io.IOException: Authentication failure
	at java.base/sun.net.www.protocol.http.HttpURLConnection.doTunneling0(HttpURLConnection.java:2237)
	at java.base/sun.net.www.protocol.http.HttpURLConnection.doTunneling(HttpURLConnection.java:2136)
	at java.base/sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:185)
	at java.base/sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1665)
	at java.base/sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1589)
	at java.base/java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:529)
	at java.base/sun.net.www.protocol.https.HttpsURLConnectionImpl.getResponseCode(HttpsURLConnectionImpl.java:308)
	at org.eclipse.jdt.internal.core.JavaElement.getURLContents(JavaElement.java:874)
	... 9 more
Caused by: java.io.IOException: Authentication failure
	at java.base/sun.net.www.protocol.http.HttpURLConnection.doTunneling0(HttpURLConnection.java:2237)
	at java.base/sun.net.www.protocol.http.HttpURLConnection.doTunneling(HttpURLConnection.java:2136)
	at java.base/sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:185)
	at java.base/sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1665)
	at java.base/sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1589)
	at java.base/java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:529)
	at java.base/sun.net.www.protocol.https.HttpsURLConnectionImpl.getResponseCode(HttpsURLConnectionImpl.java:308)
	at org.eclipse.jdt.internal.core.JavaElement.getURLContents(JavaElement.java:874)
	at org.eclipse.jdt.internal.core.PackageFragment.getAttachedJavadoc(PackageFragment.java:587)
	at org.eclipse.jdt.internal.ui.text.javadoc.JavadocContentAccess2.getHTMLContent(JavadocContentAccess2.java:2125)
	at org.eclipse.jdt.internal.ui.text.javadoc.JavadocContentAccess2.getHTMLContent(JavadocContentAccess2.java:505)
	at org.eclipse.jdt.internal.ui.text.java.ProposalInfo.extractJavadoc(ProposalInfo.java:93)
	at org.eclipse.jdt.internal.ui.text.java.ProposalInfo.computeInfo(ProposalInfo.java:78)
	at org.eclipse.jdt.internal.ui.text.java.ProposalInfo.getInfo(ProposalInfo.java:63)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getAdditionalProposalInfo(AbstractJavaCompletionProposal.java:583)
	at org.eclipse.jface.text.contentassist.AdditionalInfoController$Timer$2$1.run(AdditionalInfoController.java:116)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
!SUBENTRY 1 org.eclipse.jdt.core 4 985 2024-01-18 18:34:16.501
!MESSAGE Authentication failure
!STACK 0
java.io.IOException: Authentication failure
	at java.base/sun.net.www.protocol.http.HttpURLConnection.doTunneling0(HttpURLConnection.java:2237)
	at java.base/sun.net.www.protocol.http.HttpURLConnection.doTunneling(HttpURLConnection.java:2136)
	at java.base/sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:185)
	at java.base/sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1665)
	at java.base/sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1589)
	at java.base/java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:529)
	at java.base/sun.net.www.protocol.https.HttpsURLConnectionImpl.getResponseCode(HttpsURLConnectionImpl.java:308)
	at org.eclipse.jdt.internal.core.JavaElement.getURLContents(JavaElement.java:874)
	at org.eclipse.jdt.internal.core.PackageFragment.getAttachedJavadoc(PackageFragment.java:587)
	at org.eclipse.jdt.internal.ui.text.javadoc.JavadocContentAccess2.getHTMLContent(JavadocContentAccess2.java:2125)
	at org.eclipse.jdt.internal.ui.text.javadoc.JavadocContentAccess2.getHTMLContent(JavadocContentAccess2.java:505)
	at org.eclipse.jdt.internal.ui.text.java.ProposalInfo.extractJavadoc(ProposalInfo.java:93)
	at org.eclipse.jdt.internal.ui.text.java.ProposalInfo.computeInfo(ProposalInfo.java:78)
	at org.eclipse.jdt.internal.ui.text.java.ProposalInfo.getInfo(ProposalInfo.java:63)
	at org.eclipse.jdt.internal.ui.text.java.AbstractJavaCompletionProposal.getAdditionalProposalInfo(AbstractJavaCompletionProposal.java:583)
	at org.eclipse.jface.text.contentassist.AdditionalInfoController$Timer$2$1.run(AdditionalInfoController.java:116)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.launching 4 4 2024-01-18 18:48:45.126
!MESSAGE Modifier [in [Working copy] Modifier.java [in class_Level_Modifier [in src [in 5.1_Java_Declaration_And_AccessModifier_Practice_1st_Time]]]] does not exist
!STACK 1
Java Model Exception: Error in Java Model (code 969): Modifier [in [Working copy] Modifier.java [in class_Level_Modifier [in src [in 5.1_Java_Declaration_And_AccessModifier_Practice_1st_Time]]]] does not exist
	at org.eclipse.jdt.internal.core.JavaElement.newNotPresentException(JavaElement.java:574)
	at org.eclipse.jdt.internal.core.SourceRefElement.getUnderlyingResource(SourceRefElement.java:241)
	at org.eclipse.jdt.internal.launching.JavaMigrationDelegate.getResource(JavaMigrationDelegate.java:111)
	at org.eclipse.jdt.internal.launching.JavaMigrationDelegate.updateResourceMapping(JavaMigrationDelegate.java:150)
	at org.eclipse.jdt.internal.debug.ui.launcher.AbstractJavaMainTab.mapResources(AbstractJavaMainTab.java:213)
	at org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab.performApply(JavaMainTab.java:256)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationTabGroupViewer.refresh(LaunchConfigurationTabGroupViewer.java:520)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.updateButtons(LaunchConfigurationsDialog.java:1630)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.refreshStatus(LaunchConfigurationsDialog.java:1331)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationTabGroupViewer.refreshStatus(LaunchConfigurationTabGroupViewer.java:1117)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationTabGroupViewer.lambda$4(LaunchConfigurationTabGroupViewer.java:738)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:74)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationTabGroupViewer.inputChanged(LaunchConfigurationTabGroupViewer.java:742)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationTabGroupViewer.setInput0(LaunchConfigurationTabGroupViewer.java:674)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationTabGroupViewer.setInput(LaunchConfigurationTabGroupViewer.java:654)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.handleLaunchConfigurationSelectionChanged(LaunchConfigurationsDialog.java:1049)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.lambda$1(LaunchConfigurationsDialog.java:612)
	at org.eclipse.jface.viewers.StructuredViewer$3.run(StructuredViewer.java:821)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:174)
	at org.eclipse.jface.viewers.StructuredViewer.firePostSelectionChanged(StructuredViewer.java:818)
	at org.eclipse.jface.viewers.StructuredViewer.setSelection(StructuredViewer.java:1661)
	at org.eclipse.jface.viewers.TreeViewer.setSelection(TreeViewer.java:1090)
	at org.eclipse.jface.viewers.Viewer.setSelection(Viewer.java:376)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.doInitialTreeSelection(LaunchConfigurationsDialog.java:658)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.initializeContent(LaunchConfigurationsDialog.java:1185)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.createContents(LaunchConfigurationsDialog.java:473)
	at org.eclipse.jface.window.Window.create(Window.java:431)
	at org.eclipse.jface.dialogs.Dialog.create(Dialog.java:1094)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.create(LaunchConfigurationsDialog.java:378)
	at org.eclipse.jface.window.Window.open(Window.java:788)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.open(LaunchConfigurationsDialog.java:1238)
	at org.eclipse.debug.ui.DebugUITools.lambda$1(DebugUITools.java:630)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:74)
	at org.eclipse.debug.ui.DebugUITools.openLaunchConfigurationDialogOnGroup(DebugUITools.java:636)
	at org.eclipse.debug.ui.DebugUITools.openLaunchConfigurationDialogOnGroup(DebugUITools.java:574)
	at org.eclipse.debug.ui.actions.OpenLaunchDialogAction.run(OpenLaunchDialogAction.java:85)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:580)
	at org.eclipse.jface.action.ActionContributionItem.lambda$4(ActionContributionItem.java:414)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1060)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1084)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1069)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:773)
	at org.eclipse.jface.action.ActionContributionItem.lambda$8(ActionContributionItem.java:1207)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1060)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4060)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3632)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1154)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1045)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1440)
!SUBENTRY 1 org.eclipse.jdt.core 4 969 2024-01-18 18:48:45.126
!MESSAGE Modifier [in [Working copy] Modifier.java [in class_Level_Modifier [in src [in 5.1_Java_Declaration_And_AccessModifier_Practice_1st_Time]]]] does not exist

!ENTRY org.eclipse.jdt.launching 4 4 2024-01-18 18:48:45.132
!MESSAGE Modifier [in [Working copy] Modifier.java [in class_Level_Modifier [in src [in 5.1_Java_Declaration_And_AccessModifier_Practice_1st_Time]]]] does not exist
!STACK 1
Java Model Exception: Error in Java Model (code 969): Modifier [in [Working copy] Modifier.java [in class_Level_Modifier [in src [in 5.1_Java_Declaration_And_AccessModifier_Practice_1st_Time]]]] does not exist
	at org.eclipse.jdt.internal.core.JavaElement.newNotPresentException(JavaElement.java:574)
	at org.eclipse.jdt.internal.core.SourceRefElement.getUnderlyingResource(SourceRefElement.java:241)
	at org.eclipse.jdt.internal.launching.JavaMigrationDelegate.getResource(JavaMigrationDelegate.java:111)
	at org.eclipse.jdt.internal.launching.JavaMigrationDelegate.updateResourceMapping(JavaMigrationDelegate.java:150)
	at org.eclipse.jdt.internal.debug.ui.launcher.AbstractJavaMainTab.mapResources(AbstractJavaMainTab.java:213)
	at org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab.performApply(JavaMainTab.java:256)
	at org.eclipse.debug.ui.AbstractLaunchConfigurationTabGroup.performApply(AbstractLaunchConfigurationTabGroup.java:106)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationTabGroupWrapper.performApply(LaunchConfigurationTabGroupWrapper.java:205)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationTabGroupViewer.handleApplyPressed(LaunchConfigurationTabGroupViewer.java:1503)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.handleLaunchConfigurationSelectionChanged(LaunchConfigurationsDialog.java:1051)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.lambda$1(LaunchConfigurationsDialog.java:612)
	at org.eclipse.jface.viewers.StructuredViewer$3.run(StructuredViewer.java:821)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:174)
	at org.eclipse.jface.viewers.StructuredViewer.firePostSelectionChanged(StructuredViewer.java:818)
	at org.eclipse.jface.viewers.StructuredViewer.setSelection(StructuredViewer.java:1661)
	at org.eclipse.jface.viewers.TreeViewer.setSelection(TreeViewer.java:1090)
	at org.eclipse.jface.viewers.Viewer.setSelection(Viewer.java:376)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.doInitialTreeSelection(LaunchConfigurationsDialog.java:658)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.initializeContent(LaunchConfigurationsDialog.java:1185)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.createContents(LaunchConfigurationsDialog.java:473)
	at org.eclipse.jface.window.Window.create(Window.java:431)
	at org.eclipse.jface.dialogs.Dialog.create(Dialog.java:1094)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.create(LaunchConfigurationsDialog.java:378)
	at org.eclipse.jface.window.Window.open(Window.java:788)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.open(LaunchConfigurationsDialog.java:1238)
	at org.eclipse.debug.ui.DebugUITools.lambda$1(DebugUITools.java:630)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:74)
	at org.eclipse.debug.ui.DebugUITools.openLaunchConfigurationDialogOnGroup(DebugUITools.java:636)
	at org.eclipse.debug.ui.DebugUITools.openLaunchConfigurationDialogOnGroup(DebugUITools.java:574)
	at org.eclipse.debug.ui.actions.OpenLaunchDialogAction.run(OpenLaunchDialogAction.java:85)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:580)
	at org.eclipse.jface.action.ActionContributionItem.lambda$4(ActionContributionItem.java:414)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1060)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1084)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1069)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:773)
	at org.eclipse.jface.action.ActionContributionItem.lambda$8(ActionContributionItem.java:1207)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1060)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4060)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3632)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1154)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1045)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1440)
!SUBENTRY 1 org.eclipse.jdt.core 4 969 2024-01-18 18:48:45.132
!MESSAGE Modifier [in [Working copy] Modifier.java [in class_Level_Modifier [in src [in 5.1_Java_Declaration_And_AccessModifier_Practice_1st_Time]]]] does not exist

!ENTRY org.eclipse.jdt.launching 4 4 2024-01-18 18:48:45.148
!MESSAGE Modifier [in [Working copy] Modifier.java [in class_Level_Modifier [in src [in 5.1_Java_Declaration_And_AccessModifier_Practice_1st_Time]]]] does not exist
!STACK 1
Java Model Exception: Error in Java Model (code 969): Modifier [in [Working copy] Modifier.java [in class_Level_Modifier [in src [in 5.1_Java_Declaration_And_AccessModifier_Practice_1st_Time]]]] does not exist
	at org.eclipse.jdt.internal.core.JavaElement.newNotPresentException(JavaElement.java:574)
	at org.eclipse.jdt.internal.core.SourceRefElement.getUnderlyingResource(SourceRefElement.java:241)
	at org.eclipse.jdt.internal.launching.JavaMigrationDelegate.getResource(JavaMigrationDelegate.java:111)
	at org.eclipse.jdt.internal.launching.JavaMigrationDelegate.updateResourceMapping(JavaMigrationDelegate.java:150)
	at org.eclipse.jdt.internal.debug.ui.launcher.AbstractJavaMainTab.mapResources(AbstractJavaMainTab.java:213)
	at org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab.performApply(JavaMainTab.java:256)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationTabGroupViewer.refresh(LaunchConfigurationTabGroupViewer.java:520)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.updateButtons(LaunchConfigurationsDialog.java:1627)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.handleLaunchConfigurationSelectionChanged(LaunchConfigurationsDialog.java:1056)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.lambda$1(LaunchConfigurationsDialog.java:612)
	at org.eclipse.jface.viewers.StructuredViewer$3.run(StructuredViewer.java:821)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:174)
	at org.eclipse.jface.viewers.StructuredViewer.firePostSelectionChanged(StructuredViewer.java:818)
	at org.eclipse.jface.viewers.StructuredViewer.setSelection(StructuredViewer.java:1661)
	at org.eclipse.jface.viewers.TreeViewer.setSelection(TreeViewer.java:1090)
	at org.eclipse.jface.viewers.Viewer.setSelection(Viewer.java:376)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.doInitialTreeSelection(LaunchConfigurationsDialog.java:658)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.initializeContent(LaunchConfigurationsDialog.java:1185)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.createContents(LaunchConfigurationsDialog.java:473)
	at org.eclipse.jface.window.Window.create(Window.java:431)
	at org.eclipse.jface.dialogs.Dialog.create(Dialog.java:1094)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.create(LaunchConfigurationsDialog.java:378)
	at org.eclipse.jface.window.Window.open(Window.java:788)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.open(LaunchConfigurationsDialog.java:1238)
	at org.eclipse.debug.ui.DebugUITools.lambda$1(DebugUITools.java:630)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:74)
	at org.eclipse.debug.ui.DebugUITools.openLaunchConfigurationDialogOnGroup(DebugUITools.java:636)
	at org.eclipse.debug.ui.DebugUITools.openLaunchConfigurationDialogOnGroup(DebugUITools.java:574)
	at org.eclipse.debug.ui.actions.OpenLaunchDialogAction.run(OpenLaunchDialogAction.java:85)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:580)
	at org.eclipse.jface.action.ActionContributionItem.lambda$4(ActionContributionItem.java:414)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1060)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1084)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1069)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:773)
	at org.eclipse.jface.action.ActionContributionItem.lambda$8(ActionContributionItem.java:1207)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1060)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4060)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3632)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1154)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1045)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1440)
!SUBENTRY 1 org.eclipse.jdt.core 4 969 2024-01-18 18:48:45.149
!MESSAGE Modifier [in [Working copy] Modifier.java [in class_Level_Modifier [in src [in 5.1_Java_Declaration_And_AccessModifier_Practice_1st_Time]]]] does not exist

!ENTRY org.eclipse.jdt.launching 4 4 2024-01-18 18:48:45.719
!MESSAGE Modifier [in [Working copy] Modifier.java [in class_Level_Modifier [in src [in 5.1_Java_Declaration_And_AccessModifier_Practice_1st_Time]]]] does not exist
!STACK 1
Java Model Exception: Error in Java Model (code 969): Modifier [in [Working copy] Modifier.java [in class_Level_Modifier [in src [in 5.1_Java_Declaration_And_AccessModifier_Practice_1st_Time]]]] does not exist
	at org.eclipse.jdt.internal.core.JavaElement.newNotPresentException(JavaElement.java:574)
	at org.eclipse.jdt.internal.core.SourceRefElement.getUnderlyingResource(SourceRefElement.java:241)
	at org.eclipse.jdt.internal.launching.JavaMigrationDelegate.getResource(JavaMigrationDelegate.java:111)
	at org.eclipse.jdt.internal.launching.JavaMigrationDelegate.updateResourceMapping(JavaMigrationDelegate.java:150)
	at org.eclipse.jdt.internal.debug.ui.launcher.AbstractJavaMainTab.mapResources(AbstractJavaMainTab.java:213)
	at org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab.performApply(JavaMainTab.java:256)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationTabGroupViewer.refresh(LaunchConfigurationTabGroupViewer.java:520)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.updateButtons(LaunchConfigurationsDialog.java:1627)
	at org.eclipse.debug.ui.AbstractLaunchConfigurationTab.updateLaunchConfigurationDialog(AbstractLaunchConfigurationTab.java:155)
	at org.eclipse.debug.ui.AbstractLaunchConfigurationTab$1.runInUIThread(AbstractLaunchConfigurationTab.java:513)
	at org.eclipse.ui.progress.UIJob.lambda$0(UIJob.java:95)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4035)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3635)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:823)
	at org.eclipse.jface.window.Window.open(Window.java:799)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.open(LaunchConfigurationsDialog.java:1238)
	at org.eclipse.debug.ui.DebugUITools.lambda$1(DebugUITools.java:630)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:74)
	at org.eclipse.debug.ui.DebugUITools.openLaunchConfigurationDialogOnGroup(DebugUITools.java:636)
	at org.eclipse.debug.ui.DebugUITools.openLaunchConfigurationDialogOnGroup(DebugUITools.java:574)
	at org.eclipse.debug.ui.actions.OpenLaunchDialogAction.run(OpenLaunchDialogAction.java:85)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:580)
	at org.eclipse.jface.action.ActionContributionItem.lambda$4(ActionContributionItem.java:414)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1060)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1084)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1069)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:773)
	at org.eclipse.jface.action.ActionContributionItem.lambda$8(ActionContributionItem.java:1207)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1060)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4060)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3632)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1154)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1045)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1440)
!SUBENTRY 1 org.eclipse.jdt.core 4 969 2024-01-18 18:48:45.719
!MESSAGE Modifier [in [Working copy] Modifier.java [in class_Level_Modifier [in src [in 5.1_Java_Declaration_And_AccessModifier_Practice_1st_Time]]]] does not exist

!ENTRY org.eclipse.jdt.launching 4 4 2024-01-18 18:48:45.743
!MESSAGE Modifier [in [Working copy] Modifier.java [in class_Level_Modifier [in src [in 5.1_Java_Declaration_And_AccessModifier_Practice_1st_Time]]]] does not exist
!STACK 1
Java Model Exception: Error in Java Model (code 969): Modifier [in [Working copy] Modifier.java [in class_Level_Modifier [in src [in 5.1_Java_Declaration_And_AccessModifier_Practice_1st_Time]]]] does not exist
	at org.eclipse.jdt.internal.core.JavaElement.newNotPresentException(JavaElement.java:574)
	at org.eclipse.jdt.internal.core.SourceRefElement.getUnderlyingResource(SourceRefElement.java:241)
	at org.eclipse.jdt.internal.launching.JavaMigrationDelegate.getResource(JavaMigrationDelegate.java:111)
	at org.eclipse.jdt.internal.launching.JavaMigrationDelegate.updateResourceMapping(JavaMigrationDelegate.java:150)
	at org.eclipse.jdt.internal.debug.ui.launcher.AbstractJavaMainTab.mapResources(AbstractJavaMainTab.java:213)
	at org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab.performApply(JavaMainTab.java:256)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationTabGroupViewer.refresh(LaunchConfigurationTabGroupViewer.java:520)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.updateButtons(LaunchConfigurationsDialog.java:1627)
	at org.eclipse.debug.ui.AbstractLaunchConfigurationTab.updateLaunchConfigurationDialog(AbstractLaunchConfigurationTab.java:155)
	at org.eclipse.debug.ui.AbstractLaunchConfigurationTab$1.runInUIThread(AbstractLaunchConfigurationTab.java:513)
	at org.eclipse.ui.progress.UIJob.lambda$0(UIJob.java:95)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4035)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3635)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:823)
	at org.eclipse.jface.window.Window.open(Window.java:799)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.open(LaunchConfigurationsDialog.java:1238)
	at org.eclipse.debug.ui.DebugUITools.lambda$1(DebugUITools.java:630)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:74)
	at org.eclipse.debug.ui.DebugUITools.openLaunchConfigurationDialogOnGroup(DebugUITools.java:636)
	at org.eclipse.debug.ui.DebugUITools.openLaunchConfigurationDialogOnGroup(DebugUITools.java:574)
	at org.eclipse.debug.ui.actions.OpenLaunchDialogAction.run(OpenLaunchDialogAction.java:85)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:580)
	at org.eclipse.jface.action.ActionContributionItem.lambda$4(ActionContributionItem.java:414)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1060)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1084)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1069)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:773)
	at org.eclipse.jface.action.ActionContributionItem.lambda$8(ActionContributionItem.java:1207)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1060)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4060)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3632)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1154)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1045)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1440)
!SUBENTRY 1 org.eclipse.jdt.core 4 969 2024-01-18 18:48:45.744
!MESSAGE Modifier [in [Working copy] Modifier.java [in class_Level_Modifier [in src [in 5.1_Java_Declaration_And_AccessModifier_Practice_1st_Time]]]] does not exist

!ENTRY org.eclipse.jdt.launching 4 4 2024-01-18 18:48:45.780
!MESSAGE Modifier [in [Working copy] Modifier.java [in class_Level_Modifier [in src [in 5.1_Java_Declaration_And_AccessModifier_Practice_1st_Time]]]] does not exist
!STACK 1
Java Model Exception: Error in Java Model (code 969): Modifier [in [Working copy] Modifier.java [in class_Level_Modifier [in src [in 5.1_Java_Declaration_And_AccessModifier_Practice_1st_Time]]]] does not exist
	at org.eclipse.jdt.internal.core.JavaElement.newNotPresentException(JavaElement.java:574)
	at org.eclipse.jdt.internal.core.SourceRefElement.getUnderlyingResource(SourceRefElement.java:241)
	at org.eclipse.jdt.internal.launching.JavaMigrationDelegate.getResource(JavaMigrationDelegate.java:111)
	at org.eclipse.jdt.internal.launching.JavaMigrationDelegate.updateResourceMapping(JavaMigrationDelegate.java:150)
	at org.eclipse.jdt.internal.debug.ui.launcher.AbstractJavaMainTab.mapResources(AbstractJavaMainTab.java:213)
	at org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab.performApply(JavaMainTab.java:256)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationTabGroupViewer.refresh(LaunchConfigurationTabGroupViewer.java:520)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.updateButtons(LaunchConfigurationsDialog.java:1627)
	at org.eclipse.debug.ui.AbstractLaunchConfigurationTab.updateLaunchConfigurationDialog(AbstractLaunchConfigurationTab.java:155)
	at org.eclipse.debug.ui.AbstractLaunchConfigurationTab$1.runInUIThread(AbstractLaunchConfigurationTab.java:513)
	at org.eclipse.ui.progress.UIJob.lambda$0(UIJob.java:95)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4035)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3635)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:823)
	at org.eclipse.jface.window.Window.open(Window.java:799)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.open(LaunchConfigurationsDialog.java:1238)
	at org.eclipse.debug.ui.DebugUITools.lambda$1(DebugUITools.java:630)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:74)
	at org.eclipse.debug.ui.DebugUITools.openLaunchConfigurationDialogOnGroup(DebugUITools.java:636)
	at org.eclipse.debug.ui.DebugUITools.openLaunchConfigurationDialogOnGroup(DebugUITools.java:574)
	at org.eclipse.debug.ui.actions.OpenLaunchDialogAction.run(OpenLaunchDialogAction.java:85)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:580)
	at org.eclipse.jface.action.ActionContributionItem.lambda$4(ActionContributionItem.java:414)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1060)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1084)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1069)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:773)
	at org.eclipse.jface.action.ActionContributionItem.lambda$8(ActionContributionItem.java:1207)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1060)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4060)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3632)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1154)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1045)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1440)
!SUBENTRY 1 org.eclipse.jdt.core 4 969 2024-01-18 18:48:45.781
!MESSAGE Modifier [in [Working copy] Modifier.java [in class_Level_Modifier [in src [in 5.1_Java_Declaration_And_AccessModifier_Practice_1st_Time]]]] does not exist

!ENTRY org.eclipse.jdt.launching 4 4 2024-01-18 18:48:45.802
!MESSAGE Modifier [in [Working copy] Modifier.java [in class_Level_Modifier [in src [in 5.1_Java_Declaration_And_AccessModifier_Practice_1st_Time]]]] does not exist
!STACK 1
Java Model Exception: Error in Java Model (code 969): Modifier [in [Working copy] Modifier.java [in class_Level_Modifier [in src [in 5.1_Java_Declaration_And_AccessModifier_Practice_1st_Time]]]] does not exist
	at org.eclipse.jdt.internal.core.JavaElement.newNotPresentException(JavaElement.java:574)
	at org.eclipse.jdt.internal.core.SourceRefElement.getUnderlyingResource(SourceRefElement.java:241)
	at org.eclipse.jdt.internal.launching.JavaMigrationDelegate.getResource(JavaMigrationDelegate.java:111)
	at org.eclipse.jdt.internal.launching.JavaMigrationDelegate.updateResourceMapping(JavaMigrationDelegate.java:150)
	at org.eclipse.jdt.internal.debug.ui.launcher.AbstractJavaMainTab.mapResources(AbstractJavaMainTab.java:213)
	at org.eclipse.jdt.debug.ui.launchConfigurations.JavaMainTab.performApply(JavaMainTab.java:256)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationTabGroupViewer.refresh(LaunchConfigurationTabGroupViewer.java:520)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.updateButtons(LaunchConfigurationsDialog.java:1627)
	at org.eclipse.debug.ui.AbstractLaunchConfigurationTab.updateLaunchConfigurationDialog(AbstractLaunchConfigurationTab.java:155)
	at org.eclipse.debug.ui.AbstractLaunchConfigurationTab$1.runInUIThread(AbstractLaunchConfigurationTab.java:513)
	at org.eclipse.ui.progress.UIJob.lambda$0(UIJob.java:95)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4035)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3635)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:823)
	at org.eclipse.jface.window.Window.open(Window.java:799)
	at org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.open(LaunchConfigurationsDialog.java:1238)
	at org.eclipse.debug.ui.DebugUITools.lambda$1(DebugUITools.java:630)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:74)
	at org.eclipse.debug.ui.DebugUITools.openLaunchConfigurationDialogOnGroup(DebugUITools.java:636)
	at org.eclipse.debug.ui.DebugUITools.openLaunchConfigurationDialogOnGroup(DebugUITools.java:574)
	at org.eclipse.debug.ui.actions.OpenLaunchDialogAction.run(OpenLaunchDialogAction.java:85)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:580)
	at org.eclipse.jface.action.ActionContributionItem.lambda$4(ActionContributionItem.java:414)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1060)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1084)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1069)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:773)
	at org.eclipse.jface.action.ActionContributionItem.lambda$8(ActionContributionItem.java:1207)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4243)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1060)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4060)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3632)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1154)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1045)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1440)
!SUBENTRY 1 org.eclipse.jdt.core 4 969 2024-01-18 18:48:45.802
!MESSAGE Modifier [in [Working copy] Modifier.java [in class_Level_Modifier [in src [in 5.1_Java_Declaration_And_AccessModifier_Practice_1st_Time]]]] does not exist
!SESSION 2024-01-18 19:30:45.375 -----------------------------------------------
eclipse.buildId=4.22.0.I20211124-1800
java.version=17.0.6
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2024-01-18 19:31:01.249
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2024-01-18 19:31:01.249
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@4ec427,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@4c8d45cf,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2024-01-18 19:31:01.249
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@fde487b,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@4cc4d454,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2024-01-18 19:31:18.485
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\2101917'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2024-01-24 18:54:40.806 -----------------------------------------------
eclipse.buildId=4.22.0.I20211124-1800
java.version=17.0.6
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2024-01-24 18:54:51.113
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2024-01-24 18:54:51.113
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@73d91faf,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@30fa8a6b,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2024-01-24 18:54:51.113
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@6f112f70,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@342723a3,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2024-01-24 18:55:02.130
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\2101917'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2024-02-14 13:40:09.131 -----------------------------------------------
eclipse.buildId=4.22.0.I20211124-1800
java.version=17.0.6
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2024-02-14 13:40:22.957
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2024-02-14 13:40:22.957
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@3bcc8f13,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@3cb04dd,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2024-02-14 13:40:22.957
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@73d91faf,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@30fa8a6b,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2024-02-14 13:40:36.443
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\2101917'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
